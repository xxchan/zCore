var searchIndex = JSON.parse('{\
"kernel_hal":{"doc":"Hardware Abstraction Layer","i":[[3,"GeneralRegs","kernel_hal","General registers",null,null],[12,"rax","","",0,null],[12,"rbx","","",0,null],[12,"rcx","","",0,null],[12,"rdx","","",0,null],[12,"rsi","","",0,null],[12,"rdi","","",0,null],[12,"rbp","","",0,null],[12,"rsp","","",0,null],[12,"r8","","",0,null],[12,"r9","","",0,null],[12,"r10","","",0,null],[12,"r11","","",0,null],[12,"r12","","",0,null],[12,"r13","","",0,null],[12,"r14","","",0,null],[12,"r15","","",0,null],[12,"rip","","",0,null],[12,"rflags","","",0,null],[12,"fsbase","","",0,null],[12,"gsbase","","",0,null],[3,"UserContext","","User space context",null,null],[12,"general","","",1,null],[12,"trap_num","","",1,null],[12,"error_code","","",1,null],[3,"VectorRegs","","",null,null],[12,"fcw","","",2,null],[12,"fsw","","",2,null],[12,"ftw","","",2,null],[12,"_pad0","","",2,null],[12,"fop","","",2,null],[12,"fip","","",2,null],[12,"fcs","","",2,null],[12,"_pad1","","",2,null],[12,"fdp","","",2,null],[12,"fds","","",2,null],[12,"_pad2","","",2,null],[12,"mxcsr","","",2,null],[12,"mxcsr_mask","","",2,null],[12,"mm","","",2,null],[12,"xmm","","",2,null],[12,"reserved","","",2,null],[12,"available","","",2,null],[3,"U128","","",null,null],[12,"0","","",3,null],[3,"Thread","","",null,null],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[3,"InterruptManager","","",null,null],[3,"SleepFuture","","",null,null],[3,"SerialFuture","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame.",null,[[["physaddr",6]]]],[5,"frame_zero_in_range","","Zero `target` frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["fn",8],["box",3]]]],[5,"serial_read","","Read a string from console.",null,[[]]],[5,"serial_write","","Output a string to console.",null,[[]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer. After `deadline`, the `callback` will be…",null,[[["duration",3],["fnonce",8],["box",3]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[],["virtaddr",6]]],[5,"pc_firmware_tables","","Get physical address of `acpi_rsdp` and `smbios` on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["option",4],["acpi",3]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[]]],[5,"inpd","","",null,[[]]],[5,"apic_local_id","","Get local APIC ID",null,[[]]],[5,"fill_random","","Fill random bytes to the buffer",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal::defs","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",4,null],[13,"Uncached","","",4,null],[13,"UncachedDevice","","",4,null],[13,"WriteCombining","","",4,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"CACHE_POLICY_MASK","","",null,null],[17,"PAGE_SIZE","","",null,null],[18,"CACHE_1","","",5,null],[18,"CACHE_2","","",5,null],[18,"READ","","",5,null],[18,"WRITE","","",5,null],[18,"EXECUTE","","",5,null],[18,"USER","","",5,null],[18,"RXW","","",5,null],[11,"empty","","Returns an empty set of flags",5,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",5,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",5,[[],[["mmuflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",5,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",5,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",5,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",5,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",5,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",5,[[["mmuflags",3]]]],[11,"spawn","kernel_hal","Spawn a new thread.",6,[[["pin",3],["box",3]]]],[11,"set_tid","","Set tid and pid of current task.",6,[[]]],[11,"get_tid","","Get tid and pid of current task.",6,[[]]],[11,"current","","Get current page table",7,[[]]],[11,"new","","Create a new `PageTable`.",7,[[]]],[11,"alloc","","",8,[[],["option",4]]],[11,"alloc_contiguous_base","","",8,[[],[["option",4],["physaddr",6]]]],[11,"alloc_contiguous","","",8,[[],["vec",3]]],[11,"addr","","",8,[[],["physaddr",6]]],[11,"zero_frame_addr","","",8,[[],["physaddr",6]]],[11,"handle","","Handle IRQ.",9,[[]]],[11,"set_ioapic_handle","","",9,[[["box",3],["fn",8]],["option",4]]],[11,"add_handle","","Add an interrupt handle to an irq",9,[[["box",3],["fn",8]],["option",4]]],[11,"reset_ioapic_handle","","",9,[[]]],[11,"remove_handle","","Remove the interrupt handle of an irq",9,[[]]],[11,"allocate_block","","Allocate contiguous positions for irq",9,[[],["option",4]]],[11,"free_block","","",9,[[]]],[11,"overwrite_handler","","",9,[[["box",3],["fn",8]]]],[11,"enable","","Enable IRQ.",9,[[]]],[11,"disable","","Disable IRQ.",9,[[]]],[11,"maxinstr","","Get IO APIC maxinstr",9,[[],["option",4]]],[11,"configure","","",9,[[]]],[11,"is_valid","","",9,[[]]],[0,"user","","",null,null],[3,"UserPtr","kernel_hal::user","",null,null],[3,"IoVec","","",null,null],[3,"IoVecs","","A valid IoVecs request from user",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",10,null],[13,"InvalidPointer","","",10,null],[13,"BufferTooSmall","","",10,null],[13,"InvalidLength","","",10,null],[13,"InvalidVectorAddress","","",10,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[6,"IoVecIn","","",null,null],[6,"IoVecOut","","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[11,"from_addr_size","","",11,[[],[["error",4],["result",4]]]],[11,"is_null","","",11,[[]]],[11,"add","","",11,[[]]],[11,"as_ptr","","",11,[[]]],[11,"check","","",11,[[],[["result",4],["error",4]]]],[11,"as_ref","","",11,[[],[["result",4],["error",4]]]],[11,"read","","",11,[[],[["result",4],["error",4]]]],[11,"read_if_not_null","","",11,[[],[["option",4],["result",4],["error",4]]]],[11,"read_array","","",11,[[],[["result",4],["error",4],["vec",3]]]],[11,"read_string","","",11,[[],[["result",4],["error",4],["string",3]]]],[11,"read_cstring","","",11,[[],[["result",4],["error",4],["string",3]]]],[11,"read_cstring_array","","",11,[[],[["vec",3],["result",4],["error",4]]]],[11,"write","","",11,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",11,[[],[["result",4],["error",4]]]],[11,"write_array","","",11,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",11,[[],[["result",4],["error",4]]]],[11,"read_iovecs","","",11,[[],[["error",4],["iovecs",3],["result",4]]]],[11,"read_iovecs","","",12,[[],[["error",4],["iovecs",3],["result",4]]]],[11,"total_len","","",13,[[]]],[11,"read_to_vec","","",13,[[],[["vec",3],["result",4],["error",4]]]],[11,"write_from_buf","","",13,[[],[["result",4],["error",4]]]],[11,"is_null","","",14,[[]]],[11,"len","","",14,[[]]],[11,"is_empty","","",14,[[]]],[11,"check","","",14,[[],[["result",4],["error",4]]]],[11,"as_slice","","",14,[[],[["result",4],["error",4]]]],[11,"as_mut_slice","","",14,[[],[["error",4],["result",4]]]],[0,"vdso","kernel_hal","",null,null],[3,"VdsoConstants","kernel_hal::vdso","This struct contains constants that are initialized by the…",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the…",15,null],[12,"features","","Bit map indicating features.",15,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",15,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",15,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to seconds.",15,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock monotonic.",15,null],[12,"ticks_to_mono_denominator","","",15,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",15,null],[12,"version_string_len","","Actual length of `version_string`, not including the NUL…",15,null],[12,"version_string","","A NUL-terminated UTF-8 string returned by…",15,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",16,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",16,null],[12,"hw_watchpoint_count","","",16,null],[3,"VersionString","","",null,null],[11,"set_version_string","","Set version string.",15,[[]]],[8,"PageTableTrait","kernel_hal","",null,null],[10,"map","","Map the page of `vaddr` to the frame of `paddr` with…",17,[[["physaddr",6],["mmuflags",3],["virtaddr",6]],["result",4]]],[10,"unmap","","Unmap the page of `vaddr`.",17,[[["virtaddr",6]],["result",4]]],[10,"protect","","Change the `flags` of the page of `vaddr`.",17,[[["mmuflags",3],["virtaddr",6]],["result",4]]],[10,"query","","Query the physical address which the page of `vaddr` maps…",17,[[["virtaddr",6]],[["result",4],["physaddr",6]]]],[10,"table_phys","","Get the physical address of root page table.",17,[[],["physaddr",6]]],[11,"map_many","","",17,[[["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"map_cont","","",17,[[["physaddr",6],["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"unmap_cont","","",17,[[["virtaddr",6]],["result",4]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_future","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_future","","",19,[[]]],[11,"from","kernel_hal::defs","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","kernel_hal::user","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","kernel_hal::vdso","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"eq","kernel_hal","",1,[[["usercontext",3]]]],[11,"ne","","",1,[[["usercontext",3]]]],[11,"eq","","",0,[[["generalregs",3]]]],[11,"ne","","",0,[[["generalregs",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",0,[[],["generalregs",3]]],[11,"clone","","",1,[[],["usercontext",3]]],[11,"default","","",1,[[],["usercontext",3]]],[11,"default","","",0,[[],["generalregs",3]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",7,[[["physaddr",6],["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",7,[[["virtaddr",6]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",7,[[["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",7,[[["virtaddr",6]],[["result",4],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",7,[[],["physaddr",6]]],[11,"unmap_cont","","",7,[[["virtaddr",6]],["result",4]]],[11,"deref","kernel_hal::user","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"from","","",11,[[]]],[11,"fmt","kernel_hal::defs","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::user","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::vdso","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","kernel_hal::defs","Returns the set difference of the two sets of flags.",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",5,[[["mmuflags",3]]]],[11,"ne","","",5,[[["mmuflags",3]]]],[11,"eq","","",4,[[["cachepolicy",4]]]],[11,"eq","kernel_hal::user","",10,[[["error",4]]]],[11,"cmp","kernel_hal::defs","",5,[[["mmuflags",3]],["ordering",4]]],[11,"partial_cmp","","",5,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["mmuflags",3]]]],[11,"le","","",5,[[["mmuflags",3]]]],[11,"gt","","",5,[[["mmuflags",3]]]],[11,"ge","","",5,[[["mmuflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["mmuflags",3]]]],[11,"not","","Returns the complement of this set of flags.",5,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["mmuflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["mmuflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["mmuflags",3]]]],[11,"drop","kernel_hal","",8,[[]]],[11,"hash","kernel_hal::defs","",5,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from_iter","","",5,[[["intoiterator",8]],["mmuflags",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"clone","","",5,[[],["mmuflags",3]]],[11,"clone","","",4,[[],["cachepolicy",4]]],[11,"clone","kernel_hal","",2,[[],["vectorregs",3]]],[11,"clone","","",3,[[],["u128",3]]],[11,"clone","kernel_hal::user","",10,[[],["error",4]]],[11,"default","kernel_hal","",2,[[]]],[11,"default","","",3,[[],["u128",3]]],[11,"default","kernel_hal::vdso","",23,[[]]],[11,"poll","kernel_hal","",18,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",19,[[["pin",3],["context",3]],["poll",4]]],[11,"run_fncall","","Go to user context by function return, within the same…",1,[[]]],[11,"get_syscall_num","","Get number of syscall",1,[[]]],[11,"get_syscall_ret","","Get return value of syscall",1,[[]]],[11,"set_syscall_ret","","Set return value of syscall",1,[[]]],[11,"get_syscall_args","","Get syscall args",1,[[]]],[11,"set_ip","","Set instruction pointer",1,[[]]],[11,"set_sp","","Set stack pointer",1,[[]]],[11,"get_sp","","Get stack pointer",1,[[]]],[11,"set_tls","","Set tls pointer",1,[[]]],[11,"map_many","","",17,[[["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"map_cont","","",17,[[["physaddr",6],["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"unmap_cont","","",17,[[["virtaddr",6]],["result",4]]]],"p":[[3,"GeneralRegs"],[3,"UserContext"],[3,"VectorRegs"],[3,"U128"],[4,"CachePolicy"],[3,"MMUFlags"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[4,"Error"],[3,"UserPtr"],[6,"UserInPtr"],[3,"IoVecs"],[3,"IoVec"],[3,"VdsoConstants"],[3,"Features"],[8,"PageTableTrait"],[3,"SleepFuture"],[3,"SerialFuture"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"VersionString"]]},\
"kernel_hal_unix":{"doc":"","i":[[3,"MMUFlags","kernel_hal_unix","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal_unix::defs","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal_unix","",null,null],[3,"UserPtr","kernel_hal_unix::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",1,null],[13,"InvalidPointer","","",1,null],[13,"BufferTooSmall","","",1,null],[13,"InvalidLength","","",1,null],[13,"InvalidVectorAddress","","",1,null],[3,"IoVec","","",null,null],[6,"IoVecIn","","",null,null],[6,"IoVecOut","","",null,null],[3,"IoVecs","","A valid IoVecs request from user",null,null],[0,"vdso","kernel_hal_unix","",null,null],[3,"VdsoConstants","kernel_hal_unix::vdso","This struct contains constants that are initialized by the…",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the…",2,null],[12,"features","","Bit map indicating features.",2,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",2,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",2,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to seconds.",2,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock monotonic.",2,null],[12,"ticks_to_mono_denominator","","",2,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",2,null],[12,"version_string_len","","Actual length of `version_string`, not including the NUL…",2,null],[12,"version_string","","A NUL-terminated UTF-8 string returned by…",2,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",3,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",3,null],[12,"hw_watchpoint_count","","",3,null],[3,"VersionString","","",null,null],[3,"GeneralRegs","kernel_hal_unix","General registers",null,null],[12,"rax","","",4,null],[12,"rbx","","",4,null],[12,"rcx","","",4,null],[12,"rdx","","",4,null],[12,"rsi","","",4,null],[12,"rdi","","",4,null],[12,"rbp","","",4,null],[12,"rsp","","",4,null],[12,"r8","","",4,null],[12,"r9","","",4,null],[12,"r10","","",4,null],[12,"r11","","",4,null],[12,"r12","","",4,null],[12,"r13","","",4,null],[12,"r14","","",4,null],[12,"r15","","",4,null],[12,"rip","","",4,null],[12,"rflags","","",4,null],[12,"fsbase","","",4,null],[12,"gsbase","","",4,null],[3,"UserContext","","User space context",null,null],[12,"general","","",5,null],[12,"trap_num","","",5,null],[12,"error_code","","",5,null],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[8,"PageTableTrait","","",null,null],[10,"map","","Map the page of `vaddr` to the frame of `paddr` with…",6,[[["mmuflags",3]],["result",4]]],[10,"unmap","","Unmap the page of `vaddr`.",6,[[],["result",4]]],[10,"protect","","Change the `flags` of the page of `vaddr`.",6,[[["mmuflags",3]],["result",4]]],[10,"query","","Query the physical address which the page of `vaddr` maps…",6,[[],["result",4]]],[10,"table_phys","","Get the physical address of root page table.",6,[[]]],[11,"map_many","","",6,[[["mmuflags",3]],["result",4]]],[11,"map_cont","","",6,[[["mmuflags",3]],["result",4]]],[11,"unmap_cont","","",6,[[],["result",4]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame.",null,[[]]],[5,"frame_zero_in_range","","Zero `target` frame.",null,[[]]],[5,"frame_flush","","Flush the physical frame.",null,[[]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["box",3],["fn",8]]]],[5,"serial_read","","Read a string from console.",null,[[]]],[5,"serial_write","","Output a string to console.",null,[[]]],[5,"timer_set","","Set a new timer. After `deadline`, the `callback` will be…",null,[[["box",3],["duration",3],["fnonce",8]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[3,"InterruptManager","","",null,null],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[]]],[5,"pc_firmware_tables","","Get physical address of `acpi_rsdp` and `smbios` on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["option",4],["acpi",3]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[]]],[5,"inpd","","",null,[[]]],[5,"apic_local_id","","Get local APIC ID",null,[[]]],[5,"fill_random","","Fill random bytes to the buffer",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[3,"SerialFuture","","",null,null],[3,"MMUFlags","","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[3,"VectorRegs","","",null,null],[12,"fcw","","",7,null],[12,"fsw","","",7,null],[12,"ftw","","",7,null],[12,"_pad0","","",7,null],[12,"fop","","",7,null],[12,"fip","","",7,null],[12,"fcs","","",7,null],[12,"_pad1","","",7,null],[12,"fdp","","",7,null],[12,"fds","","",7,null],[12,"_pad2","","",7,null],[12,"mxcsr","","",7,null],[12,"mxcsr_mask","","",7,null],[12,"mm","","",7,null],[12,"xmm","","",7,null],[12,"reserved","","",7,null],[12,"available","","",7,null],[3,"U128","","",null,null],[12,"0","","",8,null],[5,"syscall_entry","","The syscall entry of function call.",null,[[]]],[3,"Thread","","",null,null],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[["physaddr",6]]]],[5,"frame_zero","","Zero `target` frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","",null,[[["box",3],["fn",8]]]],[5,"serial_read","","",null,[[]]],[5,"serial_write","","Output a char to console.",null,[[]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer.",null,[[["fnonce",8],["duration",3],["box",3]]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"init","","Initialize the HAL.",null,[[]]],[11,"spawn","","",9,[[["box",3],["pin",3]]]],[11,"set_tid","","",9,[[]]],[11,"get_tid","","",9,[[]]],[11,"new","","Create a new `PageTable`.",10,[[]]],[11,"alloc","","",11,[[],["option",4]]],[11,"zero_frame_addr","","",11,[[],["physaddr",6]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","kernel_hal_unix::user","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","kernel_hal_unix::vdso","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","kernel_hal_unix","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_future","","",24,[[]]],[11,"into_future","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_future","","",25,[[]]],[11,"into_future","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"clone","","",8,[[],["u128",3]]],[11,"clone","","",7,[[],["vectorregs",3]]],[11,"clone","kernel_hal_unix::user","",1,[[],["error",4]]],[11,"clone","kernel_hal_unix","",12,[[],["mmuflags",3]]],[11,"clone","","",0,[[],["cachepolicy",4]]],[11,"deref_mut","kernel_hal_unix::user","",18,[[]]],[11,"map","kernel_hal_unix","Map the page of `vaddr` to the frame of `paddr` with…",21,[[["mmuflags",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",21,[[],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",21,[[["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",21,[[],["result",4]]],[11,"table_phys","","Get the physical address of root page table.",21,[[]]],[11,"unmap_cont","","",21,[[],["result",4]]],[11,"extend","","",12,[[]]],[11,"deref","kernel_hal_unix::user","",18,[[]]],[11,"bitxor","kernel_hal_unix","Returns the left flags, but with all the right flags…",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"poll","","",25,[[["context",3],["pin",3],["serialfuture",3]],["poll",4]]],[11,"poll","","",24,[[["context",3],["sleepfuture",3],["pin",3]],["poll",4]]],[11,"from","kernel_hal_unix::user","",13,[[],["userptr",3]]],[11,"try_from","kernel_hal_unix","",0,[[],[["result",4],["cachepolicy",4]]]],[11,"cmp","","",12,[[["mmuflags",3]],["ordering",4]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["mmuflags",3]]],[11,"eq","kernel_hal_unix::user","",1,[[["error",4]]]],[11,"eq","kernel_hal_unix","",12,[[["mmuflags",3]]]],[11,"ne","","",12,[[["mmuflags",3]]]],[11,"eq","","",0,[[["cachepolicy",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",12,[[["mmuflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["mmuflags",3]]]],[11,"le","","",12,[[["mmuflags",3]]]],[11,"gt","","",12,[[["mmuflags",3]]]],[11,"ge","","",12,[[["mmuflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["mmuflags",3]]]],[11,"hash","","",12,[[]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["mmuflags",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"from_iter","","",12,[[],["mmuflags",3]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["mmuflags",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","","",22,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix::user","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix::vdso","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix::user","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix::vdso","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix::user","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","kernel_hal_unix::vdso","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","kernel_hal_unix","Toggles the set of flags.",12,[[["mmuflags",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"default","","",7,[[],["vectorregs",3]]],[11,"default","kernel_hal_unix::vdso","",19,[[],["versionstring",3]]],[11,"default","kernel_hal_unix","",8,[[],["u128",3]]],[11,"eq","","",5,[[["usercontext",3]]]],[11,"ne","","",5,[[["usercontext",3]]]],[11,"eq","","",4,[[["generalregs",3]]]],[11,"ne","","",4,[[["generalregs",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",4,[[],["generalregs",3]]],[11,"clone","","",5,[[],["usercontext",3]]],[11,"default","","",5,[[],["usercontext",3]]],[11,"default","","",4,[[],["generalregs",3]]],[11,"drop","","",11,[[]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",10,[[["mmuflags",3],["physaddr",6],["virtaddr",6]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",10,[[["virtaddr",6]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",10,[[["mmuflags",3],["virtaddr",6]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",10,[[["virtaddr",6]],[["result",4],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",10,[[],["physaddr",6]]],[11,"unmap_cont","","",10,[[["virtaddr",6]],["result",4]]],[18,"CACHE_1","","",12,null],[18,"CACHE_2","","",12,null],[18,"READ","","",12,null],[18,"WRITE","","",12,null],[18,"EXECUTE","","",12,null],[18,"USER","","",12,null],[18,"RXW","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["mmuflags",3]]]],[11,"from_addr_size","kernel_hal_unix::user","",13,[[],[["result",4],["error",4],["userptr",3]]]],[11,"is_null","","",13,[[]]],[11,"add","","",13,[[],["userptr",3]]],[11,"as_ptr","","",13,[[]]],[11,"check","","",13,[[],[["result",4],["error",4]]]],[11,"as_ref","","",13,[[],[["result",4],["error",4]]]],[11,"read","","",13,[[],[["result",4],["error",4]]]],[11,"read_if_not_null","","",13,[[],[["result",4],["option",4],["error",4]]]],[11,"read_array","","",13,[[],[["result",4],["error",4],["vec",3]]]],[11,"read_string","","",13,[[],[["result",4],["error",4],["string",3]]]],[11,"read_cstring","","",13,[[],[["result",4],["error",4],["string",3]]]],[11,"read_cstring_array","","",13,[[],[["vec",3],["result",4],["error",4]]]],[11,"write","","",13,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",13,[[],[["result",4],["error",4]]]],[11,"write_array","","",13,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",13,[[],[["result",4],["error",4]]]],[11,"read_iovecs","","",13,[[],[["result",4],["iovecs",3],["error",4]]]],[11,"is_null","","",17,[[]]],[11,"len","","",17,[[]]],[11,"is_empty","","",17,[[]]],[11,"check","","",17,[[],[["result",4],["error",4]]]],[11,"as_slice","","",17,[[],[["result",4],["error",4]]]],[11,"as_mut_slice","","",17,[[],[["error",4],["result",4]]]],[11,"total_len","","",18,[[]]],[11,"read_to_vec","","",18,[[],[["vec",3],["result",4],["error",4]]]],[11,"write_from_buf","","",18,[[],[["result",4],["error",4]]]],[11,"set_version_string","kernel_hal_unix::vdso","Set version string.",2,[[]]],[11,"run_fncall","kernel_hal_unix","Go to user context by function return, within the same…",5,[[]]],[11,"get_syscall_num","","Get number of syscall",5,[[]]],[11,"get_syscall_ret","","Get return value of syscall",5,[[]]],[11,"set_syscall_ret","","Set return value of syscall",5,[[]]],[11,"get_syscall_args","","Get syscall args",5,[[]]],[11,"set_ip","","Set instruction pointer",5,[[]]],[11,"set_sp","","Set stack pointer",5,[[]]],[11,"get_sp","","Get stack pointer",5,[[]]],[11,"set_tls","","Set tls pointer",5,[[]]],[11,"spawn","","Spawn a new thread.",20,[[["pin",3],["box",3]],["thread",3]]],[11,"set_tid","","Set tid and pid of current task.",20,[[]]],[11,"get_tid","","Get tid and pid of current task.",20,[[]]],[11,"current","","Get current page table",21,[[],["pagetable",3]]],[11,"new","","Create a new `PageTable`.",21,[[],["pagetable",3]]],[11,"alloc","","",22,[[],[["physframe",3],["option",4]]]],[11,"alloc_contiguous_base","","",22,[[],["option",4]]],[11,"alloc_contiguous","","",22,[[],[["physframe",3],["vec",3]]]],[11,"addr","","",22,[[]]],[11,"zero_frame_addr","","",22,[[]]],[11,"handle","","Handle IRQ.",23,[[]]],[11,"set_ioapic_handle","","",23,[[["box",3],["fn",8]],["option",4]]],[11,"add_handle","","Add an interrupt handle to an irq",23,[[["box",3],["fn",8]],["option",4]]],[11,"reset_ioapic_handle","","",23,[[]]],[11,"remove_handle","","Remove the interrupt handle of an irq",23,[[]]],[11,"allocate_block","","Allocate contiguous positions for irq",23,[[],["option",4]]],[11,"free_block","","",23,[[]]],[11,"overwrite_handler","","",23,[[["box",3],["fn",8]]]],[11,"enable","","Enable IRQ.",23,[[]]],[11,"disable","","Disable IRQ.",23,[[]]],[11,"maxinstr","","Get IO APIC maxinstr",23,[[],["option",4]]],[11,"configure","","",23,[[]]],[11,"is_valid","","",23,[[]]]],"p":[[4,"CachePolicy"],[4,"Error"],[3,"VdsoConstants"],[3,"Features"],[3,"GeneralRegs"],[3,"UserContext"],[8,"PageTableTrait"],[3,"VectorRegs"],[3,"U128"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"MMUFlags"],[3,"UserPtr"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"IoVec"],[3,"IoVecs"],[3,"VersionString"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[3,"SleepFuture"],[3,"SerialFuture"]]},\
"linux_loader":{"doc":"Linux LibOS","i":[[5,"run","linux_loader","Create and run main Linux process",null,[[["string",3],["vec",3],["arc",3],["filesystem",8]],[["process",3],["arc",3]]]]],"p":[]},\
"linux_object":{"doc":"Linux kernel objects","i":[[0,"error","linux_object","Linux error codes",null,null],[4,"LxError","linux_object::error","Linux error codes defination",null,null],[13,"EUNDEF","","Undefined",0,null],[13,"EPERM","","Operation not permitted",0,null],[13,"ENOENT","","No such file or directory",0,null],[13,"ESRCH","","No such process",0,null],[13,"EINTR","","Interrupted system call",0,null],[13,"EIO","","I/O error",0,null],[13,"ENXIO","","No such device or address",0,null],[13,"E2BIG","","Arg list too long",0,null],[13,"ENOEXEC","","Exec format error",0,null],[13,"EBADF","","Bad file number",0,null],[13,"ECHILD","","No child processes",0,null],[13,"EAGAIN","","Try again",0,null],[13,"ENOMEM","","Out of memory",0,null],[13,"EACCES","","Permission denied",0,null],[13,"EFAULT","","Bad address",0,null],[13,"ENOTBLK","","Block device required",0,null],[13,"EBUSY","","Device or resource busy",0,null],[13,"EEXIST","","File exists",0,null],[13,"EXDEV","","Cross-device link",0,null],[13,"ENODEV","","No such device",0,null],[13,"ENOTDIR","","Not a directory",0,null],[13,"EISDIR","","Is a directory",0,null],[13,"EINVAL","","Invalid argument",0,null],[13,"ENFILE","","File table overflow",0,null],[13,"EMFILE","","Too many open files",0,null],[13,"ENOTTY","","Not a tty device",0,null],[13,"ETXTBSY","","Text file busy",0,null],[13,"EFBIG","","File too large",0,null],[13,"ENOSPC","","No space left on device",0,null],[13,"ESPIPE","","Illegal seek",0,null],[13,"EROFS","","Read-only file system",0,null],[13,"EMLINK","","Too many links",0,null],[13,"EPIPE","","Broken pipe",0,null],[13,"EDOM","","Math argument out of domain",0,null],[13,"ERANGE","","Math result not representable",0,null],[13,"EDEADLK","","Resource deadlock would occur",0,null],[13,"ENAMETOOLONG","","Filename too long",0,null],[13,"ENOLCK","","No record locks available",0,null],[13,"ENOSYS","","Function not implemented",0,null],[13,"ENOTEMPTY","","Directory not empty",0,null],[13,"ELOOP","","Too many symbolic links encountered",0,null],[13,"EIDRM","","Identifier removed",0,null],[13,"ENOTSOCK","","Socket operation on non-socket",0,null],[13,"ENOPROTOOPT","","Protocol not available",0,null],[13,"EPFNOSUPPORT","","Protocol family not supported",0,null],[13,"EAFNOSUPPORT","","Address family not supported by protocol",0,null],[13,"ENOBUFS","","No buffer space available",0,null],[13,"EISCONN","","Transport endpoint is already connected",0,null],[13,"ENOTCONN","","Transport endpoint is not connected",0,null],[13,"ECONNREFUSED","","Connection refused",0,null],[6,"LxResult","","Linux Result defination",null,null],[6,"SysResult","","SysResult Result defination (same as Linux Result)",null,null],[0,"fs","linux_object","Linux file objects",null,null],[0,"vfs","linux_object::fs","",null,null],[8,"INode","linux_object::fs::vfs","Abstract file system object such as file or directory.",null,null],[10,"read_at","","Read bytes at `offset` into `buf`, return the number of…",1,[[],[["fserror",4],["result",4]]]],[10,"write_at","","Write bytes at `offset` from `buf`, return the number of…",1,[[],[["fserror",4],["result",4]]]],[10,"poll","","Poll the events, return a bitmap of events.",1,[[],[["fserror",4],["pollstatus",3],["result",4]]]],[11,"async_poll","","Poll the events, return a bitmap of events, async version.",1,[[],[["box",3],["pin",3]]]],[11,"metadata","","Get metadata of the INode",1,[[],[["fserror",4],["result",4],["metadata",3]]]],[11,"set_metadata","","Set metadata of the INode",1,[[["metadata",3]],[["fserror",4],["result",4]]]],[11,"sync_all","","Sync all data and metadata",1,[[],[["fserror",4],["result",4]]]],[11,"sync_data","","Sync data (not include metadata)",1,[[],[["fserror",4],["result",4]]]],[11,"resize","","Resize the file",1,[[],[["fserror",4],["result",4]]]],[11,"create","","Create a new INode in the directory",1,[[["filetype",4]],[["result",4],["fserror",4],["arc",3]]]],[11,"create2","","Create a new INode in the directory, with a data field for…",1,[[["filetype",4]],[["result",4],["fserror",4],["arc",3]]]],[11,"link","","Create a hard link `name` to `other`",1,[[["arc",3]],[["fserror",4],["result",4]]]],[11,"unlink","","Delete a hard link `name`",1,[[],[["fserror",4],["result",4]]]],[11,"move_","","Move INode `self/old_name` to `target/new_name`. If…",1,[[["arc",3]],[["fserror",4],["result",4]]]],[11,"find","","Find the INode `name` in the directory",1,[[],[["result",4],["fserror",4],["arc",3]]]],[11,"get_entry","","Get the name of directory entry",1,[[],[["fserror",4],["result",4],["string",3]]]],[11,"get_entry_with_metadata","","Get the name of directory entry with metadata",1,[[],[["result",4],["fserror",4]]]],[11,"io_control","","Control device",1,[[],[["fserror",4],["result",4]]]],[11,"mmap","","Map files or devices into memory",1,[[["mmaparea",3]],[["fserror",4],["result",4]]]],[11,"fs","","Get the file system of the INode",1,[[],[["arc",3],["filesystem",8]]]],[10,"as_any_ref","","This is used to implement dynamics cast. Simply return…",1,[[],["any",8]]],[4,"IOCTLError","","",null,null],[13,"NotValidFD","","",2,null],[13,"NotValidMemory","","",2,null],[13,"NotValidParam","","",2,null],[13,"NotCharDevice","","",2,null],[3,"PollStatus","","",null,null],[12,"read","","",3,null],[12,"write","","",3,null],[12,"error","","",3,null],[3,"MMapArea","","",null,null],[12,"start_vaddr","","Start virtual address",4,null],[12,"end_vaddr","","End virtual address",4,null],[12,"prot","","Access permissions",4,null],[12,"flags","","Flags",4,null],[12,"offset","","Offset from the file in bytes",4,null],[3,"Metadata","","Metadata of INode",null,null],[12,"dev","","Device ID",5,null],[12,"inode","","Inode number",5,null],[12,"size","","Size in bytes",5,null],[12,"blk_size","","A file system-specific preferred I/O block size for this…",5,null],[12,"blocks","","Size in blocks",5,null],[12,"atime","","Time of last access",5,null],[12,"mtime","","Time of last modification",5,null],[12,"ctime","","Time of last change",5,null],[12,"type_","","Type of file",5,null],[12,"mode","","Permission",5,null],[12,"nlinks","","Number of hard links",5,null],[12,"uid","","User ID",5,null],[12,"gid","","Group ID",5,null],[12,"rdev","","Raw device id e.g. /dev/null: makedev(0x1, 0x3)",5,null],[3,"Timespec","","",null,null],[12,"sec","","",6,null],[12,"nsec","","",6,null],[4,"FileType","","",null,null],[13,"File","","",7,null],[13,"Dir","","",7,null],[13,"SymLink","","",7,null],[13,"CharDevice","","",7,null],[13,"BlockDevice","","",7,null],[13,"NamedPipe","","",7,null],[13,"Socket","","",7,null],[3,"FsInfo","","Metadata of FileSystem",null,null],[12,"bsize","","File system block size",8,null],[12,"frsize","","Fundamental file system block size",8,null],[12,"blocks","","Total number of blocks on file system in units of `frsize`",8,null],[12,"bfree","","Total number of free blocks",8,null],[12,"bavail","","Number of free blocks available to non-privileged process",8,null],[12,"files","","Total number of file serial numbers",8,null],[12,"ffree","","Total number of free file serial numbers",8,null],[12,"namemax","","Maximum filename length",8,null],[4,"FsError","","",null,null],[13,"NotSupported","","",9,null],[13,"NotFile","","",9,null],[13,"IsDir","","",9,null],[13,"NotDir","","",9,null],[13,"EntryNotFound","","",9,null],[13,"EntryExist","","",9,null],[13,"NotSameFs","","",9,null],[13,"InvalidParam","","",9,null],[13,"NoDeviceSpace","","",9,null],[13,"DirRemoved","","",9,null],[13,"DirNotEmpty","","",9,null],[13,"WrongFs","","",9,null],[13,"DeviceError","","",9,null],[13,"IOCTLError","","",9,null],[13,"NoDevice","","",9,null],[13,"Again","","",9,null],[13,"SymLoop","","",9,null],[13,"Busy","","",9,null],[13,"Interrupted","","",9,null],[6,"Result","","",null,null],[8,"FileSystem","","Abstract file system",null,null],[10,"sync","","Sync all data to the storage",10,[[],[["fserror",4],["result",4]]]],[10,"root_inode","","Get the root INode of the file system",10,[[],[["inode",8],["arc",3]]]],[10,"info","","Get the file system information",10,[[],["fsinfo",3]]],[5,"make_rdev","","",null,[[]]],[3,"MemBuf","linux_object::fs","memory buffer for device",null,null],[3,"FcntlFlags","","fcntl flags",null,null],[3,"FileFlags","","file operate flags",null,null],[3,"File","","file implement struct",null,null],[12,"options","","file open options",11,null],[12,"path","","file path",11,null],[3,"OpenOptions","","file open options struct",null,null],[12,"read","","open as readable",12,null],[12,"write","","open as writeable",12,null],[12,"append","","Before each write, the file offset is positioned at the…",12,null],[12,"nonblock","","non block open",12,null],[12,"fd_cloexec","","close on exec",12,null],[3,"PipeData","","Pipe inner data",null,null],[3,"Pipe","","pipe struct",null,null],[3,"Pseudo","","Pseudo INode struct",null,null],[3,"RandomINodeData","","random INode data struct",null,null],[3,"RandomINode","","random INode struct",null,null],[3,"STDIN","","STDIN global reference",null,null],[3,"STDOUT","","STDOUT global reference",null,null],[3,"Stdin","","Stdin struct, for Stdin buffer",null,null],[3,"Stdout","","Stdout struct, empty now",null,null],[3,"FileDesc","","file descriptor wrapper",null,null],[4,"SeekFrom","","file seek type",null,null],[13,"Start","","seek from start point",13,null],[13,"End","","seek from end",13,null],[13,"Current","","seek from current",13,null],[4,"PipeEnd","","Pipe end specify",null,null],[13,"Read","","read end",14,null],[13,"Write","","write end",14,null],[5,"create_root_fs","","create root filesystem, mount DevFS and RamFS",null,[[["arc",3],["filesystem",8]],[["arc",3],["inode",8]]]],[5,"split_path","","Split a `path` str to `(base_path, file_name)`",null,[[]]],[11,"new","","create a MemBuf struct",15,[[]]],[18,"F_DUPFD","","dup",16,null],[18,"F_GETFD","","get close_on_exec",16,null],[18,"F_SETFD","","set/clear close_on_exec",16,null],[18,"F_GETFL","","get file->f_flags",16,null],[18,"F_SETFL","","set file->f_flags",16,null],[18,"F_GETLK","","Get record locking info.",16,null],[18,"F_SETLK","","Set record locking info (non-blocking).",16,null],[18,"F_SETLKW","","Set record locking info (blocking).",16,null],[18,"FD_CLOEXEC","","closed during a successful execve",16,null],[18,"F_DUPFD_CLOEXEC","","like F_DUPFD, but additionally set the close-on-exec flag",16,null],[11,"empty","","Returns an empty set of flags",16,[[],["fcntlflags",3]]],[11,"all","","Returns the set containing all flags.",16,[[],["fcntlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",16,[[],[["option",4],["fcntlflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",16,[[],["fcntlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[],["fcntlflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",16,[[["fcntlflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",16,[[["fcntlflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["fcntlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["fcntlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["fcntlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",16,[[["fcntlflags",3]]]],[18,"O_NONBLOCK","","not blocking",17,null],[18,"O_APPEND","","move the flag bit to the end of the file before each write",17,null],[18,"O_CLOEXEC","","set close_on_exec",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["fileflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["fileflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[],[["fileflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[],["fileflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[],["fileflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["fileflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["fileflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["fileflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["fileflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["fileflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["fileflags",3]]]],[11,"new","","create a file struct",11,[[["arc",3],["openoptions",3],["inode",8],["string",3]],["arc",3]]],[11,"read","","read from file",11,[[]]],[11,"read_at","","read from file at given offset",11,[[]]],[11,"write","","write to file",11,[[],["lxresult",6]]],[11,"write_at","","write to file at given offset",11,[[],["lxresult",6]]],[11,"seek","","seek from given type and offset",11,[[["seekfrom",4]],["lxresult",6]]],[11,"set_len","","resize the file",11,[[],["lxresult",6]]],[11,"sync_all","","Sync all data and metadata",11,[[],["lxresult",6]]],[11,"sync_data","","Sync data (not include metadata)",11,[[],["lxresult",6]]],[11,"metadata","","get metadata of file",11,[[],[["lxresult",6],["metadata",3]]]],[11,"lookup_follow","","lookup the file following the link",11,[[],[["lxresult",6],["arc",3]]]],[11,"read_entry","","get the name of dir entry",11,[[],[["lxresult",6],["string",3]]]],[11,"poll","","wait for some event on a file",11,[[],[["lxresult",6],["pollstatus",3]]]],[11,"async_poll","","wait for some event on a file using async",11,[[]]],[11,"io_control","","manipulates the underlying device parameters of special…",11,[[],["lxresult",6]]],[11,"inode","","get INode of this file",11,[[],[["arc",3],["inode",8]]]],[11,"fcntl","","manipulate file descriptor unimplemented",11,[[],["lxresult",6]]],[11,"create_pair","","Create a pair of INode: (read, write)",18,[[]]],[11,"new","","create a Pseudo INode",19,[[["filetype",4]]]],[11,"new","","create a random INode",20,[[],["randominode",3]]],[11,"push","","push a char in Stdin buffer",21,[[]]],[11,"pop","","pop a char in Stdin buffer",21,[[]]],[11,"can_read","","specify whether the Stdin buffer is readable",21,[[]]],[8,"FileLike","","Generic file interface",null,null],[10,"read","","read to buffer",22,[[],[["box",3],["pin",3]]]],[10,"write","","write from buffer",22,[[],["lxresult",6]]],[10,"read_at","","read to buffer at given offset",22,[[],[["box",3],["pin",3]]]],[10,"write_at","","write from buffer at given offset",22,[[],["lxresult",6]]],[10,"poll","","wait for some event on a file descriptor",22,[[],[["lxresult",6],["pollstatus",3]]]],[10,"async_poll","","wait for some event on a file descriptor use async",22,[[],[["pin",3],["box",3]]]],[10,"ioctl","","manipulates the underlying device parameters of special…",22,[[],["lxresult",6]]],[10,"fcntl","","manipulate file descriptor",22,[[],["lxresult",6]]],[8,"INodeExt","","extension for INode",null,null],[10,"read_as_vec","","similar to read, but return a u8 vector",23,[[],[["result",6],["vec",3]]]],[11,"is","","Returns true if the trait object wraps an object of type…",22,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the…",22,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an `Rc`-ed object from an `Rc`-ed trait object if…",22,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object…",22,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait…",22,[[],["option",4]]],[11,"downcast_arc","","Returns an `Arc`-ed object from an `Arc`-ed trait object…",22,[[["arc",3]],[["result",4],["arc",3],["arc",3]]]],[18,"CWD","","Pathname is interpreted relative to the current working…",24,null],[0,"ipc","linux_object","Linux Inter-Process Communication",null,null],[3,"SemidDs","linux_object::ipc","semid data structure",null,null],[12,"perm","","Ownership and permissions",25,null],[12,"otime","","Last semop time",25,null],[12,"ctime","","Last change time",25,null],[12,"nsems","","number of semaphores in set",25,null],[3,"SemArray","","A System V semaphore set",null,null],[12,"semid_ds","","semid data structure",26,null],[3,"ShmidDs","","shmid data structure",null,null],[12,"perm","","Ownership and permissions",27,null],[12,"segsz","","Size of segment (bytes)",27,null],[12,"atime","","Last attach time",27,null],[12,"dtime","","Last detach time",27,null],[12,"ctime","","Last change time",27,null],[12,"cpid","","PID of creator",27,null],[12,"lpid","","PID of last shmat(2)/shmdt(2)",27,null],[12,"nattch","","number of current attaches",27,null],[3,"ShmIdentifier","","shared memory Identifier for process",null,null],[12,"addr","","Shared memory address",28,null],[12,"guard","","Shared memory buffer and data",28,null],[3,"ShmGuard","","shared memory buffer and data",null,null],[12,"shared_guard","","shared memory buffer",29,null],[12,"shmid_ds","","shared memory data",29,null],[3,"SemProc","","Semaphore table in a process",null,null],[3,"ShmProc","","Shared_memory table in a process",null,null],[3,"IpcPerm","","structure specifies the access permissions on the…",null,null],[12,"key","","Key supplied to semget(2)",30,null],[12,"uid","","Effective UID of owner",30,null],[12,"gid","","Effective GID of owner",30,null],[12,"cuid","","Effective UID of creator",30,null],[12,"cgid","","Effective GID of creator",30,null],[12,"mode","","Permissions",30,null],[12,"__seq","","Sequence number",30,null],[12,"__pad1","","pad1",30,null],[12,"__pad2","","pad2",30,null],[11,"remove","","remove semaphores",26,[[]]],[11,"otime","","set last semop time",26,[[]]],[11,"ctime","","set last change time",26,[[]]],[11,"set","","for IPC_SET see man semctl(2)",26,[[["semidds",3]]]],[11,"get_or_create","","Get the semaphore array with `key`. If not exist, create a…",26,[[],[["arc",3],["result",4],["lxerror",4]]]],[11,"set_addr","","set the shared memory address on attach",28,[[]]],[11,"new_shared_guard","","Get or create a ShmGuard",28,[[],[["result",4],["arc",3],["lxerror",4]]]],[11,"attach","","set last attach time",29,[[]]],[11,"detach","","set last detach time",29,[[]]],[11,"ctime","","set last change time",29,[[]]],[11,"set","","for IPC_SET see man shmctl(2)",29,[[["shmidds",3]]]],[11,"remove","","remove Shared memory",29,[[]]],[11,"add","","Insert the `array` and return its ID",31,[[["arc",3],["semarray",3]]]],[11,"remove","","Remove an `array` by ID",31,[[]]],[11,"get","","Get an semaphore set by `id`",31,[[],[["option",4],["arc",3]]]],[11,"add_undo","","Add an undo operation",31,[[]]],[11,"add","","Insert the `SharedGuard` and return its ID",32,[[["mutex",3],["arc",3]]]],[11,"get","","Get an semaphore set by `id`",32,[[],[["option",4],["shmidentifier",3]]]],[11,"set","","Used to set Virtual Addr",32,[[["shmidentifier",3]]]],[11,"get_id","","get id from virtaddr",32,[[],["option",4]]],[11,"pop","","Pop Shared Area",32,[[]]],[0,"loader","linux_object","Linux ELF Program Loader",null,null],[3,"LinuxElfLoader","linux_object::loader","Linux ELF Program Loader.",null,null],[12,"syscall_entry","","syscall entry",33,null],[12,"stack_pages","","stack page number",33,null],[12,"root_inode","","root inode of LinuxElfLoader",33,null],[11,"load","","load a Linux ElfFile and return a tuple of (entry,sp)",33,[[["arc",3],["string",3],["vec",3]],["lxresult",6]]],[0,"process","linux_object","Linux Process",null,null],[3,"LinuxProcess","linux_object::process","Linux specific process information.",null,null],[3,"RLimit","","resource limit",null,null],[12,"cur","","soft limit",34,null],[12,"max","","hard limit",34,null],[5,"wait_child","","Wait for state changes in a child of the calling process,…",null,[[["arc",3],["koid",6]]]],[5,"wait_child_any","","Wait for state changes in a child of the calling process.",null,[[["arc",3]]]],[6,"ExitCode","","The type of process exit code.",null,null],[8,"ProcessExt","","Process extension for linux",null,null],[10,"create_linux","","create Linux process",35,[[["arc",3],["arc",3],["filesystem",8]],[["arc",3],["zxresult",6]]]],[10,"linux","","get linux process",35,[[],["linuxprocess",3]]],[10,"fork_from","","fork from current linux process",35,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new process.",36,[[["arc",3],["filesystem",8]]]],[11,"get_futex","","Get futex object.",36,[[["virtaddr",6]],[["arc",3],["futex",3]]]],[11,"add_file","","Add a file to the file descriptor table.",36,[[["filelike",8],["arc",3]],[["lxresult",6],["filedesc",3]]]],[11,"add_file_at","","Add a file to the file descriptor table at given `fd`.",36,[[["filedesc",3],["filelike",8],["arc",3]],[["lxresult",6],["filedesc",3]]]],[11,"file_limit","","get and set file limit number",36,[[["rlimit",3],["option",4]],["rlimit",3]]],[11,"get_file","","Get the `File` with given `fd`.",36,[[["filedesc",3]],[["arc",3],["lxresult",6]]]],[11,"get_file_like","","Get the `FileLike` with given `fd`.",36,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"get_files","","get all files",36,[[],[["lxresult",6],["hashmap",3]]]],[11,"close_file","","Close file descriptor `fd`.",36,[[["filedesc",3]],["lxresult",6]]],[11,"root_inode","","Get root INode of the process.",36,[[],["arc",3]]],[11,"parent","","Get parent process.",36,[[],[["option",4],["arc",3]]]],[11,"current_working_directory","","Get current working directory.",36,[[],["string",3]]],[11,"change_directory","","Change working directory.",36,[[]]],[11,"execute_path","","Get execute path.",36,[[],["string",3]]],[11,"set_execute_path","","Set execute path.",36,[[]]],[11,"signal_action","","Get signal action.",36,[[["linuxsignal",4]],["signalaction",3]]],[11,"set_signal_action","","Set signal action.",36,[[["linuxsignal",4],["signalaction",3]]]],[11,"remove_cloexec_files","","Close file that FD_CLOEXEC is set",36,[[]]],[11,"semaphores_add","","Insert a `SemArray` and return its ID",36,[[["arc",3],["semarray",3]]]],[11,"semaphores_get","","Get an semaphore set by `id`",36,[[],[["option",4],["arc",3]]]],[11,"semaphores_add_undo","","Add an undo operation",36,[[]]],[11,"semaphores_remove","","Remove an `SemArray` by ID",36,[[]]],[11,"shm_get_id","","get ShmId from Virtual Addr",36,[[],["option",4]]],[11,"shm_get","","get the ShmIdentifier from shm_identifiers",36,[[],[["option",4],["shmidentifier",3]]]],[11,"shm_pop","","Delete the ShmIdentifier from shm_identifiers",36,[[]]],[11,"shm_add","","Insert the `SharedGuard` and return its ID",36,[[["mutex",3],["arc",3]]]],[11,"shm_set","","Set Virtual Addr for shared memory",36,[[["shmidentifier",3]]]],[0,"signal","linux_object","Linux signals",null,null],[3,"Sigset","linux_object::signal","Linux struct sigset_t",null,null],[3,"SignalAction","","Linux struct sigaction",null,null],[12,"handler","","",37,null],[12,"flags","","",37,null],[12,"restorer","","",37,null],[12,"mask","","",37,null],[3,"SigInfo","","",null,null],[12,"signo","","",38,null],[12,"errno","","",38,null],[12,"code","","",38,null],[12,"field","","",38,null],[3,"SignalActionFlags","","",null,null],[3,"MachineContext","","struct mcontext",null,null],[12,"r8","","",39,null],[12,"r9","","",39,null],[12,"r10","","",39,null],[12,"r11","","",39,null],[12,"r12","","",39,null],[12,"r13","","",39,null],[12,"r14","","",39,null],[12,"r15","","",39,null],[12,"rdi","","",39,null],[12,"rsi","","",39,null],[12,"rbp","","",39,null],[12,"rbx","","",39,null],[12,"rdx","","",39,null],[12,"rax","","",39,null],[12,"rcx","","",39,null],[12,"rsp","","",39,null],[12,"rip","","",39,null],[12,"eflags","","",39,null],[12,"cs","","",39,null],[12,"gs","","",39,null],[12,"fs","","",39,null],[12,"_pad","","",39,null],[12,"err","","",39,null],[12,"trapno","","",39,null],[12,"oldmask","","",39,null],[12,"cr2","","",39,null],[12,"fpstate","","",39,null],[12,"_reserved1","","",39,null],[3,"SignalUserContext","","See musl struct __ucontext",null,null],[12,"flags","","",40,null],[12,"link","","",40,null],[12,"stack","","",40,null],[12,"context","","",40,null],[12,"sig_mask","","",40,null],[3,"SignalFrame","","",null,null],[12,"ret_code_addr","","point to ret_code",41,null],[12,"info","","Signal Frame info",41,null],[12,"ucontext","","adapt interface, a little bit waste",41,null],[12,"ret_code","","call sys_sigreturn",41,null],[3,"SignalStackFlags","","",null,null],[3,"SignalStack","","Linux struct stack_t",null,null],[12,"sp","","",42,null],[12,"flags","","",42,null],[12,"size","","",42,null],[19,"SiginfoFields","","",null,null],[4,"SignalCode","","A code identifying the cause of the signal.",null,null],[13,"ASYNCNL","","",43,null],[13,"TKILL","","",43,null],[13,"SIGIO","","",43,null],[13,"ASYNCIO","","",43,null],[13,"MESGQ","","",43,null],[13,"TIMER","","",43,null],[13,"QUEUE","","",43,null],[13,"USER","","from user",43,null],[13,"KERNEL","","from kernel",43,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",44,null],[13,"SIGINT","","",44,null],[13,"SIGQUIT","","",44,null],[13,"SIGILL","","",44,null],[13,"SIGTRAP","","",44,null],[13,"SIGABRT","","",44,null],[13,"SIGBUS","","",44,null],[13,"SIGFPE","","",44,null],[13,"SIGKILL","","",44,null],[13,"SIGUSR1","","",44,null],[13,"SIGSEGV","","",44,null],[13,"SIGUSR2","","",44,null],[13,"SIGPIPE","","",44,null],[13,"SIGALRM","","",44,null],[13,"SIGTERM","","",44,null],[13,"SIGSTKFLT","","",44,null],[13,"SIGCHLD","","",44,null],[13,"SIGCONT","","",44,null],[13,"SIGSTOP","","",44,null],[13,"SIGTSTP","","",44,null],[13,"SIGTTIN","","",44,null],[13,"SIGTTOU","","",44,null],[13,"SIGURG","","",44,null],[13,"SIGXCPU","","",44,null],[13,"SIGXFSZ","","",44,null],[13,"SIGVTALRM","","",44,null],[13,"SIGPROF","","",44,null],[13,"SIGWINCH","","",44,null],[13,"SIGIO","","",44,null],[13,"SIGPWR","","",44,null],[13,"SIGSYS","","",44,null],[13,"SIGRT32","","",44,null],[13,"SIGRT33","","",44,null],[13,"SIGRT34","","",44,null],[13,"SIGRT35","","",44,null],[13,"SIGRT36","","",44,null],[13,"SIGRT37","","",44,null],[13,"SIGRT38","","",44,null],[13,"SIGRT39","","",44,null],[13,"SIGRT40","","",44,null],[13,"SIGRT41","","",44,null],[13,"SIGRT42","","",44,null],[13,"SIGRT43","","",44,null],[13,"SIGRT44","","",44,null],[13,"SIGRT45","","",44,null],[13,"SIGRT46","","",44,null],[13,"SIGRT47","","",44,null],[13,"SIGRT48","","",44,null],[13,"SIGRT49","","",44,null],[13,"SIGRT50","","",44,null],[13,"SIGRT51","","",44,null],[13,"SIGRT52","","",44,null],[13,"SIGRT53","","",44,null],[13,"SIGRT54","","",44,null],[13,"SIGRT55","","",44,null],[13,"SIGRT56","","",44,null],[13,"SIGRT57","","",44,null],[13,"SIGRT58","","",44,null],[13,"SIGRT59","","",44,null],[13,"SIGRT60","","",44,null],[13,"SIGRT61","","",44,null],[13,"SIGRT62","","",44,null],[13,"SIGRT63","","",44,null],[13,"SIGRT64","","",44,null],[11,"empty","","",45,[[]]],[11,"contains","","",45,[[["signal",4]]]],[11,"insert","","",45,[[["signal",4]]]],[11,"insert_set","","",45,[[["sigset",3]]]],[11,"remove","","",45,[[["signal",4]]]],[11,"remove_set","","",45,[[["sigset",3]]]],[18,"NOCLDSTOP","","",46,null],[18,"NOCLDWAIT","","",46,null],[18,"SIGINFO","","",46,null],[18,"ONSTACK","","",46,null],[18,"RESTART","","",46,null],[18,"NODEFER","","",46,null],[18,"RESETHAND","","",46,null],[18,"RESTORER","","",46,null],[11,"empty","","Returns an empty set of flags",46,[[],["signalactionflags",3]]],[11,"all","","Returns the set containing all flags.",46,[[],["signalactionflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",46,[[],[["option",4],["signalactionflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",46,[[],["signalactionflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",46,[[],["signalactionflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",46,[[["signalactionflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",46,[[["signalactionflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["signalactionflags",3]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["signalactionflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["signalactionflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",46,[[["signalactionflags",3]]]],[17,"SIG_ERR","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[18,"RTMIN","","",44,null],[18,"RTMAX","","",44,null],[11,"is_standard","","",44,[[]]],[18,"ONSTACK","","",47,null],[18,"DISABLE","","",47,null],[18,"AUTODISARM","","",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["signalstackflags",3]]],[11,"all","","Returns the set containing all flags.",47,[[],["signalstackflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",47,[[],[["option",4],["signalstackflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",47,[[],["signalstackflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[],["signalstackflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",47,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",47,[[["signalstackflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",47,[[["signalstackflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["signalstackflags",3]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["signalstackflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["signalstackflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",47,[[["signalstackflags",3]]]],[0,"sync","linux_object","Useful synchronization primitives.",null,null],[3,"Event","linux_object::sync","event bus Event flags",null,null],[3,"EventBus","","event bus struct",null,null],[3,"Semaphore","","A counting, blocking, semaphore.",null,null],[3,"SemaphoreGuard","","An RAII guard which will release a resource acquired from…",null,null],[5,"wait_for_event","","wait for a event async",null,[[["mutex",3],["arc",3],["event",3]]]],[18,"READABLE","","File: is readable",48,null],[18,"WRITABLE","","File: is writeable",48,null],[18,"ERROR","","File: has error",48,null],[18,"CLOSED","","File: is closed",48,null],[18,"PROCESS_QUIT","","Process: is Quit",48,null],[18,"CHILD_PROCESS_QUIT","","Process: child process is Quit",48,null],[18,"RECEIVE_SIGNAL","","Process: received signal",48,null],[18,"SEMAPHORE_REMOVED","","Semaphore: is removed",48,null],[18,"SEMAPHORE_CAN_ACQUIRE","","Semaphore: can acquired a resource of this semaphore",48,null],[11,"empty","","Returns an empty set of flags",48,[[],["event",3]]],[11,"all","","Returns the set containing all flags.",48,[[],["event",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",48,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",48,[[],[["option",4],["event",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",48,[[],["event",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",48,[[],["event",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",48,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",48,[[["event",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",48,[[["event",3]]]],[11,"insert","","Inserts the specified flags in-place.",48,[[["event",3]]]],[11,"remove","","Removes the specified flags in-place.",48,[[["event",3]]]],[11,"toggle","","Toggles the specified flags in-place.",48,[[["event",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",48,[[["event",3]]]],[11,"new","","create an event bus",49,[[],[["arc",3],["mutex",3]]]],[11,"set","","set event flag",49,[[["event",3]]]],[11,"clear","","clear all event flag",49,[[["event",3]]]],[11,"change","","change event flag",49,[[["event",3]]]],[11,"subscribe","","push a EventHandler into the callback vector",49,[[["eventhandler",6]]]],[11,"get_callback_len","","get the callback vector length",49,[[]]],[11,"new","","Creates a new semaphore with the initial count specified.",50,[[],["semaphore",3]]],[11,"remove","","Set the semaphore in removed statue",50,[[]]],[11,"acquire","","Acquires a resource of this semaphore, blocking the…",50,[[]]],[11,"release","","Release a resource from this semaphore.",50,[[]]],[11,"access","","Acquires a resource of this semaphore, returning an RAII…",50,[[]]],[11,"get","","Get the current count",50,[[]]],[11,"get_ncnt","","Get the current eventbus callback length",50,[[]]],[11,"get_pid","","Get the current pid",50,[[]]],[11,"set_pid","","Set the current pid",50,[[]]],[11,"set","","Set the current count",50,[[]]],[6,"EventHandler","","handler of event in the event bus",null,null],[0,"thread","linux_object","Linux Thread",null,null],[3,"LinuxThread","linux_object::thread","Linux specific thread information.",null,null],[12,"signal_mask","","Signal mask",51,null],[12,"signal_alternate_stack","","signal alternate stack",51,null],[8,"ThreadExt","","Thread extension for linux",null,null],[10,"create_linux","","create linux thread",52,[[["arc",3]],[["arc",3],["zxresult",6]]]],[10,"lock_linux","","lock and get Linux thread",52,[[],[["linuxthread",3],["mutexguard",3]]]],[10,"set_tid_address","","Set pointer to thread ID.",52,[[["useroutptr",6]]]],[8,"CurrentThreadExt","","CurrentThread extension for linux",null,null],[10,"exit_linux","","exit linux thread",53,[[]]],[0,"time","linux_object","Linux time objects",null,null],[3,"TimeSpec","linux_object::time","TimeSpec struct for clock_gettime, similar to Timespec",null,null],[12,"sec","","seconds",54,null],[12,"nsec","","nano seconds",54,null],[3,"TimeVal","","TimeVal struct for gettimeofday",null,null],[12,"sec","","seconds",55,null],[12,"usec","","microsecond",55,null],[3,"RUsage","","RUsage for sys_getrusage() ignore other fields for now",null,null],[12,"utime","","user CPU time used",56,null],[12,"stime","","system CPU time used",56,null],[3,"Tms","","Tms for times()",null,null],[12,"tms_utime","","user time",57,null],[12,"tms_stime","","system time",57,null],[12,"tms_cutime","","user time of children",57,null],[12,"tms_cstime","","system time of children",57,null],[11,"now","","create TimeVal",55,[[],["timeval",3]]],[11,"to_msec","","to msec",55,[[]]],[11,"now","","create TimeSpec",54,[[],["timespec",3]]],[11,"update","","update TimeSpec for a file inode TODO: more precise;…",54,[[["arc",3]]]],[11,"to_msec","","to msec",54,[[]]],[11,"from","linux_object::error","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","linux_object::fs::vfs","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",2,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",2,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",3,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",3,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",4,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",4,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",5,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",5,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",6,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",6,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",7,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",8,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",8,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_string","","",9,[[],["string",3]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",9,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",9,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"from","linux_object::fs","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"read_at","","",15,[[],[["deverror",3],["result",4]]]],[11,"write_at","","",15,[[],[["deverror",3],["result",4]]]],[11,"sync","","",15,[[],[["result",4],["deverror",3]]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",15,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",15,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",16,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",16,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",17,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",17,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",11,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",11,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",12,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",12,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_result","","",58,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",58,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",18,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",18,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",19,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",19,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",59,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",59,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",20,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",20,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",60,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",60,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",61,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",61,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",21,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",21,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_any_arc","","",62,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",62,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",62,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",24,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",24,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",13,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",13,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",14,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",14,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"from","linux_object::ipc","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",25,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",25,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",26,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",26,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"into_any_arc","","",27,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",27,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",27,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",28,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",28,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",29,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",29,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",31,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",31,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",32,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",32,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",30,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",30,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"from","linux_object::loader","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",33,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",33,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"from","linux_object::process","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",36,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",36,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",34,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",34,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"from","linux_object::signal","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"into_any_arc","","",45,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",45,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",45,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",37,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",37,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",38,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",38,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",46,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",46,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",39,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",39,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"into_any_arc","","",40,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",40,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",40,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"into_any_arc","","",41,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",41,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",41,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",47,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",47,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",42,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",42,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",63,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",63,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",43,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",43,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"into_any_arc","","",44,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",44,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",44,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"from","linux_object::sync","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",48,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",48,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_result","","",49,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",49,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",50,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",50,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",64,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",64,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"from","linux_object::thread","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",51,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",51,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"from","linux_object::time","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",54,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",54,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",55,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",55,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",56,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",56,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",57,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",57,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"hash","linux_object::fs::vfs","",6,[[]]],[11,"from","","",9,[[["error",3]],["fserror",4]]],[11,"from","","",9,[[["deverror",3]],["fserror",4]]],[11,"from","","",5,[[["metadata",3]],["metadata",3]]],[11,"cmp","","",6,[[["timespec",3]],["ordering",4]]],[11,"eq","","",9,[[["fserror",4]]]],[11,"eq","","",6,[[["timespec",3]]]],[11,"ne","","",6,[[["timespec",3]]]],[11,"eq","","",7,[[["filetype",4]]]],[11,"eq","","",5,[[["metadata",3]]]],[11,"ne","","",5,[[["metadata",3]]]],[11,"partial_cmp","","",6,[[["timespec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["timespec",3]]]],[11,"le","","",6,[[["timespec",3]]]],[11,"gt","","",6,[[["timespec",3]]]],[11,"ge","","",6,[[["timespec",3]]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",5,[[],["metadata",3]]],[11,"clone","","",7,[[],["filetype",4]]],[11,"clone","","",6,[[],["timespec",3]]],[11,"default","","",3,[[],["pollstatus",3]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",7,[[["filetype",4]],["filetype",4]]],[11,"read_as_vec","","",1,[[],[["result",6],["vec",3]]]],[11,"read","linux_object::fs","",11,[[],[["box",3],["pin",3]]]],[11,"write","","",11,[[],["lxresult",6]]],[11,"read_at","","",11,[[],[["box",3],["pin",3]]]],[11,"write_at","","",11,[[],["lxresult",6]]],[11,"poll","","",11,[[],[["lxresult",6],["pollstatus",3]]]],[11,"async_poll","","",11,[[],[["pin",3],["box",3]]]],[11,"ioctl","","",11,[[],["lxresult",6]]],[11,"fcntl","","",11,[[],["lxresult",6]]],[11,"deref","","",60,[[],["arc",3]]],[11,"deref","","",61,[[],["arc",3]]],[11,"deref","linux_object::sync","",64,[[]]],[11,"from","linux_object::error","",0,[[["zxerror",4]]]],[11,"from","","",0,[[["fserror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","linux_object::fs","",24,[[]]],[11,"from","","",24,[[]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::ipc","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::process","",34,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::time","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"sub","linux_object::fs","Returns the set difference of the two sets of flags.",16,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["fileflags",3]],["fileflags",3]]],[11,"sub","linux_object::signal","Returns the set difference of the two sets of flags.",46,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",47,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"sub","linux_object::sync","Returns the set difference of the two sets of flags.",48,[[["event",3]],["event",3]]],[11,"eq","linux_object::fs","",16,[[["fcntlflags",3]]]],[11,"ne","","",16,[[["fcntlflags",3]]]],[11,"eq","","",17,[[["fileflags",3]]]],[11,"ne","","",17,[[["fileflags",3]]]],[11,"eq","","",14,[[["pipeend",4]]]],[11,"eq","","",24,[[["filedesc",3]]]],[11,"ne","","",24,[[["filedesc",3]]]],[11,"eq","linux_object::signal","",46,[[["signalactionflags",3]]]],[11,"ne","","",46,[[["signalactionflags",3]]]],[11,"eq","","",44,[[["signal",4]]]],[11,"eq","","",47,[[["signalstackflags",3]]]],[11,"ne","","",47,[[["signalstackflags",3]]]],[11,"eq","linux_object::sync","",48,[[["event",3]]]],[11,"ne","","",48,[[["event",3]]]],[11,"cmp","linux_object::fs","",16,[[["fcntlflags",3]],["ordering",4]]],[11,"cmp","","",17,[[["fileflags",3]],["ordering",4]]],[11,"cmp","","",24,[[["filedesc",3]],["ordering",4]]],[11,"cmp","linux_object::signal","",46,[[["signalactionflags",3]],["ordering",4]]],[11,"cmp","","",47,[[["signalstackflags",3]],["ordering",4]]],[11,"cmp","linux_object::sync","",48,[[["event",3]],["ordering",4]]],[11,"partial_cmp","linux_object::fs","",16,[[["fcntlflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["fcntlflags",3]]]],[11,"le","","",16,[[["fcntlflags",3]]]],[11,"gt","","",16,[[["fcntlflags",3]]]],[11,"ge","","",16,[[["fcntlflags",3]]]],[11,"partial_cmp","","",17,[[["fileflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["fileflags",3]]]],[11,"le","","",17,[[["fileflags",3]]]],[11,"gt","","",17,[[["fileflags",3]]]],[11,"ge","","",17,[[["fileflags",3]]]],[11,"partial_cmp","","",24,[[["filedesc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["filedesc",3]]]],[11,"le","","",24,[[["filedesc",3]]]],[11,"gt","","",24,[[["filedesc",3]]]],[11,"ge","","",24,[[["filedesc",3]]]],[11,"partial_cmp","linux_object::signal","",46,[[["signalactionflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["signalactionflags",3]]]],[11,"le","","",46,[[["signalactionflags",3]]]],[11,"gt","","",46,[[["signalactionflags",3]]]],[11,"ge","","",46,[[["signalactionflags",3]]]],[11,"partial_cmp","","",47,[[["signalstackflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",47,[[["signalstackflags",3]]]],[11,"le","","",47,[[["signalstackflags",3]]]],[11,"gt","","",47,[[["signalstackflags",3]]]],[11,"ge","","",47,[[["signalstackflags",3]]]],[11,"partial_cmp","linux_object::sync","",48,[[["event",3]],[["ordering",4],["option",4]]]],[11,"lt","","",48,[[["event",3]]]],[11,"le","","",48,[[["event",3]]]],[11,"gt","","",48,[[["event",3]]]],[11,"ge","","",48,[[["event",3]]]],[11,"sub_assign","linux_object::fs","Disables all flags enabled in the set.",16,[[["fcntlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["fileflags",3]]]],[11,"sub_assign","linux_object::signal","Disables all flags enabled in the set.",46,[[["signalactionflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",47,[[["signalstackflags",3]]]],[11,"sub_assign","linux_object::sync","Disables all flags enabled in the set.",48,[[["event",3]]]],[11,"not","linux_object::fs","Returns the complement of this set of flags.",16,[[],["fcntlflags",3]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["fileflags",3]]],[11,"not","linux_object::signal","Returns the complement of this set of flags.",46,[[],["signalactionflags",3]]],[11,"not","","Returns the complement of this set of flags.",47,[[],["signalstackflags",3]]],[11,"not","linux_object::sync","Returns the complement of this set of flags.",48,[[],["event",3]]],[11,"bitand","linux_object::fs","Returns the intersection between the two sets of flags.",16,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["fileflags",3]],["fileflags",3]]],[11,"bitand","linux_object::signal","Returns the intersection between the two sets of flags.",46,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",47,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitand","linux_object::sync","Returns the intersection between the two sets of flags.",48,[[["event",3]],["event",3]]],[11,"bitor","linux_object::fs","Returns the union of the two sets of flags.",16,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["fileflags",3]],["fileflags",3]]],[11,"bitor","linux_object::signal","Returns the union of the two sets of flags.",46,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",47,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitor","linux_object::sync","Returns the union of the two sets of flags.",48,[[["event",3]],["event",3]]],[11,"bitxor","linux_object::fs","Returns the left flags, but with all the right flags…",16,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["fileflags",3]],["fileflags",3]]],[11,"bitxor","linux_object::signal","Returns the left flags, but with all the right flags…",46,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",47,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitxor","linux_object::sync","Returns the left flags, but with all the right flags…",48,[[["event",3]],["event",3]]],[11,"bitand_assign","linux_object::fs","Disables all flags disabled in the set.",16,[[["fcntlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["fileflags",3]]]],[11,"bitand_assign","linux_object::signal","Disables all flags disabled in the set.",46,[[["signalactionflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",47,[[["signalstackflags",3]]]],[11,"bitand_assign","linux_object::sync","Disables all flags disabled in the set.",48,[[["event",3]]]],[11,"bitor_assign","linux_object::fs","Adds the set of flags.",16,[[["fcntlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["fileflags",3]]]],[11,"bitor_assign","linux_object::signal","Adds the set of flags.",46,[[["signalactionflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",47,[[["signalstackflags",3]]]],[11,"bitor_assign","linux_object::sync","Adds the set of flags.",48,[[["event",3]]]],[11,"bitxor_assign","linux_object::fs","Toggles the set of flags.",16,[[["fcntlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["fileflags",3]]]],[11,"bitxor_assign","linux_object::signal","Toggles the set of flags.",46,[[["signalactionflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",47,[[["signalstackflags",3]]]],[11,"bitxor_assign","linux_object::sync","Toggles the set of flags.",48,[[["event",3]]]],[11,"drop","linux_object::fs","",18,[[]]],[11,"drop","linux_object::ipc","",31,[[]]],[11,"drop","linux_object::sync","",64,[[]]],[11,"index","linux_object::ipc","",26,[[],["semaphore",3]]],[11,"hash","linux_object::fs","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",24,[[]]],[11,"hash","linux_object::signal","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","linux_object::sync","",48,[[]]],[11,"try_from","linux_object::fs","",24,[[],["lxresult",6]]],[11,"try_from","linux_object::signal","",44,[[],["result",4]]],[11,"from_iter","linux_object::fs","",16,[[["intoiterator",8]],["fcntlflags",3]]],[11,"from_iter","","",17,[[["intoiterator",8]],["fileflags",3]]],[11,"from_iter","linux_object::signal","",46,[[["intoiterator",8]],["signalactionflags",3]]],[11,"from_iter","","",47,[[["intoiterator",8]],["signalstackflags",3]]],[11,"from_iter","linux_object::sync","",48,[[["intoiterator",8]],["event",3]]],[11,"into","linux_object::fs","",24,[[]]],[11,"into","","",24,[[]]],[11,"into","linux_object::time","",54,[[],["timespec",3]]],[11,"into","","",54,[[],["duration",3]]],[11,"into","","",54,[[],["timeval",3]]],[11,"fmt","linux_object::fs","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",48,[[["formatter",3]],["result",6]]],[11,"extend","linux_object::fs","",16,[[["intoiterator",8]]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"extend","linux_object::signal","",46,[[["intoiterator",8]]]],[11,"extend","","",47,[[["intoiterator",8]]]],[11,"extend","linux_object::sync","",48,[[["intoiterator",8]]]],[11,"clone","linux_object::fs","",16,[[],["fcntlflags",3]]],[11,"clone","","",17,[[],["fileflags",3]]],[11,"clone","","",14,[[],["pipeend",4]]],[11,"clone","","",18,[[],["pipe",3]]],[11,"clone","","",20,[[],["randominode",3]]],[11,"clone","","",24,[[],["filedesc",3]]],[11,"clone","linux_object::ipc","",25,[[],["semidds",3]]],[11,"clone","","",27,[[],["shmidds",3]]],[11,"clone","","",28,[[],["shmidentifier",3]]],[11,"clone","","",32,[[],["shmproc",3]]],[11,"clone","","",30,[[],["ipcperm",3]]],[11,"clone","","",31,[[]]],[11,"clone","linux_object::process","",34,[[],["rlimit",3]]],[11,"clone","linux_object::signal","",45,[[],["sigset",3]]],[11,"clone","","",37,[[],["signalaction",3]]],[11,"clone","","",63,[[],["siginfofields",19]]],[11,"clone","","",38,[[],["siginfo",3]]],[11,"clone","","",43,[[],["signalcode",4]]],[11,"clone","","",46,[[],["signalactionflags",3]]],[11,"clone","","",39,[[],["machinecontext",3]]],[11,"clone","","",44,[[],["signal",4]]],[11,"clone","","",40,[[],["signalusercontext",3]]],[11,"clone","","",41,[[],["signalframe",3]]],[11,"clone","","",47,[[],["signalstackflags",3]]],[11,"clone","","",42,[[],["signalstack",3]]],[11,"clone","linux_object::sync","",48,[[],["event",3]]],[11,"clone","linux_object::time","",54,[[],["timespec",3]]],[11,"clone","","",55,[[],["timeval",3]]],[11,"clone","","",57,[[],["tms",3]]],[11,"default","linux_object::fs","",21,[[],["stdin",3]]],[11,"default","","",62,[[],["stdout",3]]],[11,"default","linux_object::ipc","",31,[[],["semproc",3]]],[11,"default","","",32,[[],["shmproc",3]]],[11,"default","linux_object::process","",34,[[]]],[11,"default","linux_object::signal","",45,[[],["sigset",3]]],[11,"default","","",37,[[],["signalaction",3]]],[11,"default","","",63,[[]]],[11,"default","","",46,[[],["signalactionflags",3]]],[11,"default","","",42,[[]]],[11,"default","linux_object::sync","",48,[[],["event",3]]],[11,"default","","",49,[[],["eventbus",3]]],[11,"default","linux_object::time","",55,[[]]],[11,"default","","",54,[[]]],[11,"read_at","linux_object::fs","",15,[[],["result",6]]],[11,"write_at","","",15,[[],["result",6]]],[11,"sync","","",15,[[],["result",6]]],[11,"read_at","","read from pipe",18,[[],["result",6]]],[11,"write_at","","write to pipe",18,[[],["result",6]]],[11,"poll","","monitoring events and determine whether the pipe is…",18,[[],[["pollstatus",3],["result",6]]]],[11,"async_poll","","",18,[[],[["pin",3],["box",3]]]],[11,"as_any_ref","","return the any ref",18,[[],["any",8]]],[11,"read_at","","",19,[[],["result",6]]],[11,"write_at","","",19,[[],["result",6]]],[11,"poll","","",19,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",19,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",19,[[],["any",8]]],[11,"read_at","","",20,[[],["result",6]]],[11,"write_at","","",20,[[],["result",6]]],[11,"poll","","",20,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",20,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",20,[[],["any",8]]],[11,"read_at","","",21,[[],["result",6]]],[11,"write_at","","",21,[[],["result",6]]],[11,"poll","","",21,[[],[["pollstatus",3],["result",6]]]],[11,"async_poll","","",21,[[],[["pin",3],["box",3]]]],[11,"as_any_ref","","",21,[[],["any",8]]],[11,"read_at","","",62,[[],["result",6]]],[11,"write_at","","",62,[[],["result",6]]],[11,"poll","","",62,[[],[["pollstatus",3],["result",6]]]],[11,"io_control","","",62,[[],["result",6]]],[11,"as_any_ref","","",62,[[],["any",8]]],[11,"id","","",11,[[],["koid",6]]],[11,"type_name","","",11,[[]]],[11,"name","","",11,[[],["string",3]]],[11,"set_name","","",11,[[]]],[11,"signal","","",11,[[],["signal",3]]],[11,"signal_set","","",11,[[["signal",3]]]],[11,"signal_clear","","",11,[[["signal",3]]]],[11,"signal_change","","",11,[[["signal",3]]]],[11,"add_signal_callback","","",11,[[["signalhandler",6]]]],[11,"initialize","","",60,[[]]],[11,"initialize","","",61,[[]]],[11,"downcast_ref","linux_object::fs::vfs","Downcast the INode to specific struct",1,[[],["option",4]]],[11,"list","","Get all directory entries as a Vec",1,[[],[["fserror",4],["vec",3],["result",4]]]],[11,"lookup","","Lookup path from current INode, and do not follow symlinks",1,[[],[["result",4],["fserror",4],["arc",3]]]],[11,"lookup_follow","","Lookup path from current INode, and follow symlinks at…",1,[[],[["result",4],["fserror",4],["arc",3]]]],[11,"lookup_inode_at","linux_object::process","Lookup INode from the process.",36,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"lookup_inode","","Lookup INode from the process.",36,[[],[["lxresult",6],["arc",3]]]]],"p":[[4,"LxError"],[8,"INode"],[4,"IOCTLError"],[3,"PollStatus"],[3,"MMapArea"],[3,"Metadata"],[3,"Timespec"],[4,"FileType"],[3,"FsInfo"],[4,"FsError"],[8,"FileSystem"],[3,"File"],[3,"OpenOptions"],[4,"SeekFrom"],[4,"PipeEnd"],[3,"MemBuf"],[3,"FcntlFlags"],[3,"FileFlags"],[3,"Pipe"],[3,"Pseudo"],[3,"RandomINode"],[3,"Stdin"],[8,"FileLike"],[8,"INodeExt"],[3,"FileDesc"],[3,"SemidDs"],[3,"SemArray"],[3,"ShmidDs"],[3,"ShmIdentifier"],[3,"ShmGuard"],[3,"IpcPerm"],[3,"SemProc"],[3,"ShmProc"],[3,"LinuxElfLoader"],[3,"RLimit"],[8,"ProcessExt"],[3,"LinuxProcess"],[3,"SignalAction"],[3,"SigInfo"],[3,"MachineContext"],[3,"SignalUserContext"],[3,"SignalFrame"],[3,"SignalStack"],[4,"SignalCode"],[4,"Signal"],[3,"Sigset"],[3,"SignalActionFlags"],[3,"SignalStackFlags"],[3,"Event"],[3,"EventBus"],[3,"Semaphore"],[3,"LinuxThread"],[8,"ThreadExt"],[8,"CurrentThreadExt"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RUsage"],[3,"Tms"],[3,"PipeData"],[3,"RandomINodeData"],[3,"STDIN"],[3,"STDOUT"],[3,"Stdout"],[19,"SiginfoFields"],[3,"SemaphoreGuard"]]},\
"linux_syscall":{"doc":"Linux syscall implementations","i":[[3,"Syscall","linux_syscall","The struct of Syscall which stores the information about…",null,null],[12,"thread","","the thread making a syscall",0,null],[12,"syscall_entry","","the entry of current syscall",0,null],[12,"regs","","store the regs statues",0,null],[12,"thread_fn","","new thread function",0,null],[11,"sys_getcwd","","return a null-terminated string containing an absolute…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_chdir","","Change the current directory.",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_mkdir","","Make a directory.",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_mkdirat","","create directory relative to directory file descriptor",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_rmdir","","Remove a directory.",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_getdents64","","get directory entries TODO: get ino from dirent",0,[[["filedesc",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_link","","creates a new link (also known as a hard link) to an…",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_linkat","","create file link relative to directory file descriptors If…",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_unlink","","delete name/possibly file it refers to If that name was…",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_unlinkat","","remove directory entry relative to directory file…",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_rename","","change name/location of file",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_renameat","","rename file relative to directory file descriptors",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_readlink","","read value of symbolic link",0,[[["userinptr",6],["useroutptr",6]],["sysresult",6]]],[11,"sys_readlinkat","","read value of symbolic link relative to directory file…",0,[[["filedesc",3],["userinptr",6],["useroutptr",6]],["sysresult",6]]],[11,"sys_open","","Opens or creates a file, depending on the flags passed to…",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_openat","","open file relative to directory file descriptor",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_close","","Closes a file descriptor, so that it no longer refers to…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup2","","create a copy of the file descriptor oldfd.",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup","","create a copy of the file descriptor fd, and uses the…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_pipe","","Creates a pipe, a unidirectional data channel that can be…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_pipe2","","Creates a pipe, a unidirectional data channel that can be…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_flock","","apply or remove an advisory lock on an open file TODO:…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_read","","Reads from a specified file using a file descriptor.…",0,[[["filedesc",3],["useroutptr",6]]]],[11,"sys_write","","Writes to a specified file using a file descriptor. Before…",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_pread","","read from or write to a file descriptor at a given offset…",0,[[["filedesc",3],["useroutptr",6]]]],[11,"sys_pwrite","","writes up to count bytes from the buffer starting at buf…",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_readv","","works just like read except that multiple buffers are…",0,[[["filedesc",3],["userinptr",6],["iovecout",6]]]],[11,"sys_writev","","works just like write except that multiple buffers are…",0,[[["filedesc",3],["userinptr",6],["iovecin",6]],["sysresult",6]]],[11,"sys_lseek","","repositions the offset of the open file associated with…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_truncate","","cause the regular file named by path to be truncated to a…",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_ftruncate","","cause the regular file referenced by fd to be truncated to…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_sendfile","","copies data between one file descriptor and another.",0,[[["filedesc",3],["userinoutptr",6]]]],[11,"sys_copy_file_range","","copies data between one file descriptor and anothe, read…",0,[[["filedesc",3],["userinoutptr",6]]]],[11,"sys_sync","","causes all buffered modifications to file metadata and…",0,[[],["sysresult",6]]],[11,"sys_fsync","","transfers (\\\"flushes\\\") all modified in-core data of (i.e.,…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fdatasync","","is similar to fsync(), but does not flush modified…",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_ioctl","","Set parameters of device files.",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fcntl","","Manipulate a file descriptor.",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_access","","Checks whether the calling process can access the file…",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_faccessat","","Check user\'s permissions of a file relative to a directory…",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_utimensat","","change file timestamps with nanosecond precision",0,[[["filedesc",3],["userinptr",6],["userinoutptr",6]],["sysresult",6]]],[11,"sys_poll","","Wait for some event on a file descriptor",0,[[["userinoutptr",6],["pollfd",3]]]],[11,"sys_ppoll","","Wait for some event on a file descriptor",0,[[["userinptr",6],["pollfd",3],["timespec",3],["userinoutptr",6]]]],[11,"sys_pselect6","","similar to select, but have sigmask argument",0,[[["userinoutptr",6],["timeval",3],["userinptr",6]]]],[11,"sys_select","","allow a program to monitor multiple file descriptors,…",0,[[["userinoutptr",6],["timeval",3],["userinptr",6]]]],[11,"sys_lstat","","Works exactly like the stat syscall, but if the file in…",0,[[["userinptr",6],["useroutptr",6],["stat",3]],["sysresult",6]]],[11,"sys_fstat","","Works exactly like the stat syscall except a file…",0,[[["filedesc",3],["useroutptr",6],["stat",3]],["sysresult",6]]],[11,"sys_fstatat","","get file status relative to a directory file descriptor",0,[[["stat",3],["filedesc",3],["userinptr",6],["useroutptr",6]],["sysresult",6]]],[11,"sys_stat","","Returns information about a file in a structure named stat.",0,[[["userinptr",6],["useroutptr",6],["stat",3]],["sysresult",6]]],[11,"sys_semget","","returns the semaphore set identifier associated with the…",0,[[],["sysresult",6]]],[11,"sys_semop","","semaphore operations",0,[[["userinptr",6],["sembuf",3]]]],[11,"sys_semctl","","semaphore control operations",0,[[],["sysresult",6]]],[11,"sys_shmget","","allocates a shared memory segment",0,[[],["sysresult",6]]],[11,"sys_shmat","","attaches the shared memory segment identified by shmid to…",0,[[["virtaddr",6]],["sysresult",6]]],[11,"sys_shmdt","","detaches the shared memory segment located at the address…",0,[[["virtaddr",6]],["sysresult",6]]],[11,"sys_shmctl","","shared memory control",0,[[],["sysresult",6]]],[11,"sys_arch_prctl","","set architecture-specific thread state for x86_64 currently",0,[[],["sysresult",6]]],[11,"sys_uname","","get name and information about current kernel",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_sysinfo","","provides a simple way of getting overall system statistics",0,[[["useroutptr",6],["sysinfo",3]],["sysresult",6]]],[11,"sys_futex","","provides a method for waiting until a certain condition…",0,[[["userinptr",6],["timespec",3]]]],[11,"sys_prlimit64","","Combines and extends the functionality of setrlimit() and…",0,[[["userinptr",6],["rlimit",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_getrandom","","fills the buffer pointed to by `buf` with up to `buflen`…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_rt_sigaction","","Used to change the action taken by a process on receipt of…",0,[[["userinptr",6],["useroutptr",6],["signalaction",3]],["sysresult",6]]],[11,"sys_rt_sigprocmask","","Used to fetch and/or change the signal mask of the calling…",0,[[["userinptr",6],["useroutptr",6],["sigset",3]],["sysresult",6]]],[11,"sys_sigaltstack","","Allows a process to define a new alternate signal stack…",0,[[["userinptr",6],["signalstack",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_fork","","Fork the current process. Return the child\'s PID.",0,[[],["sysresult",6]]],[11,"sys_vfork","","creates a child process of the calling process, similar to…",0,[[]]],[11,"sys_clone","","Create a new thread in the current process. The new…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_wait4","","Wait for a child process exited.",0,[[["useroutptr",6]]]],[11,"sys_execve","","Replaces the current ** process ** with a new process image",0,[[["userinptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_gettid","","Get the current thread ID.",0,[[],["sysresult",6]]],[11,"sys_getpid","","Get the current process ID.",0,[[],["sysresult",6]]],[11,"sys_getppid","","Get the parent process ID.",0,[[],["sysresult",6]]],[11,"sys_exit","","Exit the current thread",0,[[],["sysresult",6]]],[11,"sys_exit_group","","Exit the current thread group (i.e. process)",0,[[],["sysresult",6]]],[11,"sys_nanosleep","","Allows the calling thread to sleep for an interval…",0,[[["userinptr",6],["timespec",3]]]],[11,"sys_set_tid_address","","set pointer to thread ID returns the caller\'s thread ID",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_clock_gettime","","finds the resolution (precision) of the specified clock…",0,[[["useroutptr",6],["timespec",3]],["sysresult",6]]],[11,"sys_gettimeofday","","get the time with second and microseconds",0,[[["userinptr",6],["useroutptr",6],["timeval",3]],["sysresult",6]]],[11,"sys_time","","get time in seconds",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_getrusage","","get resource usage currently only support ru_utime and…",0,[[["useroutptr",6],["rusage",3]],["sysresult",6]]],[11,"sys_times","","stores the current process times in the struct tms that…",0,[[["useroutptr",6],["tms",3]],["sysresult",6]]],[11,"sys_mmap","","creates a new mapping in the virtual address space of the…",0,[[["filedesc",3]]]],[11,"sys_mprotect","","changes the access protections for the calling process\'s…",0,[[],["sysresult",6]]],[11,"sys_munmap","","Deletes the mappings for the specified address range, and…",0,[[],["sysresult",6]]],[11,"syscall","","syscall entry function",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[3,"Syscall"]]},\
"zircon_loader":{"doc":"","i":[[3,"Images","zircon_loader","Program images to run.",null,null],[12,"userboot","","",0,null],[12,"vdso","","",0,null],[12,"zbi","","",0,null],[5,"run_userboot","","",null,[[["images",3]],[["process",3],["arc",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"vzip","","",0,[[]]]],"p":[[3,"Images"]]},\
"zircon_object":{"doc":"Zircon kernel objects","i":[[4,"ZxError","zircon_object","Zircon statuses are signed 32 bit integers. The space of…",null,null],[13,"OK","","Success.",0,null],[13,"INTERNAL","","The system encountered an otherwise unspecified error…",0,null],[13,"NOT_SUPPORTED","","The operation is not implemented, supported, or enabled.",0,null],[13,"NO_RESOURCES","","The system was not able to allocate some resource needed…",0,null],[13,"NO_MEMORY","","The system was not able to allocate memory needed for the…",0,null],[13,"INTERNAL_INTR_RETRY","","The system call was interrupted, but should be retried.…",0,null],[13,"INVALID_ARGS","","an argument is invalid, ex. null pointer",0,null],[13,"BAD_HANDLE","","A specified handle value does not refer to a handle.",0,null],[13,"WRONG_TYPE","","The subject of the operation is the wrong type to perform…",0,null],[13,"BAD_SYSCALL","","The specified syscall number is invalid.",0,null],[13,"OUT_OF_RANGE","","An argument is outside the valid range for this operation.",0,null],[13,"BUFFER_TOO_SMALL","","A caller provided buffer is too small for this operation.",0,null],[13,"BAD_STATE","","operation failed because the current state of the object…",0,null],[13,"TIMED_OUT","","The time limit for the operation elapsed before the…",0,null],[13,"SHOULD_WAIT","","The operation cannot be performed currently but…",0,null],[13,"CANCELED","","The in-progress operation (e.g. a wait) has been canceled.",0,null],[13,"PEER_CLOSED","","The operation failed because the remote end of the subject…",0,null],[13,"NOT_FOUND","","The requested entity is not found.",0,null],[13,"ALREADY_EXISTS","","An object with the specified identifier already exists.…",0,null],[13,"ALREADY_BOUND","","The operation failed because the named entity is already…",0,null],[13,"UNAVAILABLE","","The subject of the operation is currently unable to…",0,null],[13,"ACCESS_DENIED","","The caller did not have permission to perform the…",0,null],[13,"IO","","Otherwise unspecified error occurred during I/O.",0,null],[13,"IO_REFUSED","","The entity the I/O operation is being performed on…",0,null],[13,"IO_DATA_INTEGRITY","","The data in the operation failed an integrity check and is…",0,null],[13,"IO_DATA_LOSS","","The data in the operation is currently unavailable and may…",0,null],[13,"IO_NOT_PRESENT","","The device is no longer available (has been unplugged from…",0,null],[13,"IO_OVERRUN","","More data was received from the device than expected.…",0,null],[13,"IO_MISSED_DEADLINE","","An operation did not complete within the required…",0,null],[13,"IO_INVALID","","The data in the operation is invalid parameter or is out…",0,null],[13,"BAD_PATH","","Path name is too long.",0,null],[13,"NOT_DIR","","Object is not a directory or does not support directory…",0,null],[13,"NOT_FILE","","Object is not a regular file.",0,null],[13,"FILE_BIG","","This operation would cause a file to exceed a…",0,null],[13,"NO_SPACE","","Filesystem or device space is exhausted.",0,null],[13,"NOT_EMPTY","","Directory is not empty.",0,null],[13,"STOP","","Do not call again. Example: A notification callback will…",0,null],[13,"NEXT","","Advance to the next item. Example: A notification callback…",0,null],[13,"ASYNC","","Ownership of the item has moved to an asynchronous worker.",0,null],[13,"PROTOCOL_NOT_SUPPORTED","","Specified protocol is not supported.",0,null],[13,"ADDRESS_UNREACHABLE","","Host is unreachable.",0,null],[13,"ADDRESS_IN_USE","","Address is being used by someone else.",0,null],[13,"NOT_CONNECTED","","Socket is not connected.",0,null],[13,"CONNECTION_REFUSED","","Remote peer rejected the connection.",0,null],[13,"CONNECTION_RESET","","Connection was reset.",0,null],[13,"CONNECTION_ABORTED","","Connection was aborted.",0,null],[0,"debuglog","","Objects for Kernel Debuglog.",null,null],[3,"DebugLog","zircon_object::debuglog","Debuglog - Kernel debuglog",null,null],[4,"Severity","","Log entry severity. Used for coarse filtering of log…",null,null],[13,"Trace","","",1,null],[13,"Debug","","",1,null],[13,"Info","","",1,null],[13,"Warning","","",1,null],[13,"Error","","",1,null],[13,"Fatal","","",1,null],[17,"DLOG_MAX_LEN","","Max length of Dlog read buffer.",null,null],[11,"create","","Create a new `DebugLog`.",2,[[],["arc",3]]],[11,"read","","Read a log, return the actual read size.",2,[[]]],[11,"write","","Write a log.",2,[[["severity",4]]]],[0,"dev","zircon_object","Objects for Device Drivers.",null,null],[3,"BusTransactionInitiator","zircon_object::dev","Bus Transaction Initiator.",null,null],[3,"BtiInfo","","Information of BTI.",null,null],[3,"Interrupt","","Interrupts - Usermode I/O interrupt delivery.",null,null],[3,"InterruptFlags","","Bits for Interrupt.flags.",null,null],[3,"InterruptOptions","","Interrupt bind flags.",null,null],[3,"Iommu","","Iommu refers to DummyIommu in zircon.",null,null],[3,"IommuPerms","","IOMMU permission flags.",null,null],[3,"MmioPcieAddressProvider","","Systems that have memory mapped Config Spaces.",null,null],[3,"PCIeBusDriver","","PCIE Bus Driver.",null,null],[3,"PcieDeviceInfo","","Info returned to dev manager for PCIe devices when probing.",null,null],[12,"vendor_id","","",3,null],[12,"device_id","","",3,null],[12,"base_class","","",3,null],[12,"sub_class","","",3,null],[12,"program_interface","","",3,null],[12,"revision_id","","",3,null],[12,"bus_id","","",3,null],[12,"dev_id","","",3,null],[12,"func_id","","",3,null],[3,"PcieDeviceKObject","","PCIE Device Entity.",null,null],[3,"PioPcieAddressProvider","","Systems that have PIO mapped Config Spaces.",null,null],[3,"PciEcamRegion","","ECAM Region.",null,null],[12,"phys_base","","Physical address of the memory mapped config region.",4,null],[12,"size","","Size (in bytes) of the memory mapped config region.",4,null],[12,"bus_start","","Inclusive ID of the first bus controlled by this region.",4,null],[12,"bus_end","","Inclusive ID of the last bus controlled by this region.",4,null],[3,"MappedEcamRegion","","Mapped ECAM Region.",null,null],[3,"PinnedMemoryToken","","Pinned Memory Token.",null,null],[3,"ResourceFlags","","Bits for Resource.flags.",null,null],[3,"Resource","","Address space rights and accounting.",null,null],[3,"ResourceInfo","","Information of a resource.",null,null],[4,"PcieIrqMode","","Enumeration which defines the IRQ modes a PCIe device may…",null,null],[13,"Disabled","","All IRQs are disabled. 0 total IRQs are supported in this…",5,null],[13,"Legacy","","Devices may support up to 1 legacy IRQ in total. Exclusive…",5,null],[13,"Msi","","Devices may support up to 32 MSI IRQs in total. IRQs may…",5,null],[13,"MsiX","","Devices may support up to 2048 MSI-X IRQs in total. IRQs…",5,null],[13,"Count","","",5,null],[4,"PciAddrSpace","","Type of PCI address space.",null,null],[13,"MMIO","","Memory mapping I/O.",6,null],[13,"PIO","","Port I/O.",6,null],[4,"ResourceKind","","ResourceKind definition from…",null,null],[13,"MMIO","","",7,null],[13,"IRQ","","",7,null],[13,"IOPORT","","",7,null],[13,"HYPERVISOR","","",7,null],[13,"ROOT","","",7,null],[13,"VMEX","","",7,null],[13,"SMC","","",7,null],[13,"COUNT","","",7,null],[5,"pio_config_read","","",null,[[],["zxresult",6]]],[5,"pio_config_write","","",null,[[],["zxresult",6]]],[11,"create","","Create a new bus transaction initiator.",8,[[["arc",3],["iommu",3]],["arc",3]]],[11,"get_info","","Get information of BTI.",8,[[],["btiinfo",3]]],[11,"pin","","Pin memory and grant access to it to the BTI.",8,[[["vmobject",3],["iommuperms",3],["arc",3],["arc",3]],[["zxresult",6],["arc",3]]]],[11,"release_quarantine","","Releases all quarantined PMTs.",8,[[]]],[11,"new_virtual","","Create a new virtual interrupt.",9,[[],["arc",3]]],[11,"new_physical","","Create a new physical interrupt.",9,[[["interruptoptions",3]],[["arc",3],["zxresult",6]]]],[11,"new_pci","","Create a new PCI interrupt.",9,[[["arc",3],["ipcinode",8]],[["arc",3],["zxresult",6]]]],[11,"bind","","Bind the interrupt object to a port.",9,[[["arc",3]],["zxresult",6]]],[11,"unbind","","Unbind the interrupt object from a port.",9,[[["arc",3]],["zxresult",6]]],[11,"trigger","","Triggers a virtual interrupt object.",9,[[],["zxresult",6]]],[11,"ack","","Acknowledge the interrupt and re-arm it.",9,[[],["zxresult",6]]],[11,"destroy","","Destroy the interrupt.",9,[[],["zxresult",6]]],[11,"wait","","Wait until the interrupt is triggered.",9,[[["arc",3]]]],[18,"VIRTUAL","","The interrupt is virtual.",10,null],[18,"UNMASK_PREWAIT","","The interrupt should be unmasked before waiting on the…",10,null],[18,"UNMASK_PREWAIT_UNLOCKED","","The same as INTERRUPT_UNMASK_PREWAIT except release the…",10,null],[18,"MASK_POSTWAIT","","The interrupt should be masked following waiting.",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["interruptflags",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["interruptflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[],[["interruptflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[],["interruptflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[],["interruptflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["interruptflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["interruptflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["interruptflags",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["interruptflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["interruptflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["interruptflags",3]]]],[18,"REMAP_IRQ","","Remap interrupt request(IRQ).",11,null],[18,"MODE_DEFAULT","","Default mode.",11,null],[18,"MODE_EDGE_LOW","","Falling edge triggered.",11,null],[18,"MODE_EDGE_HIGH","","Rising edge triggered.",11,null],[18,"MODE_LEVEL_LOW","","Low level triggered.",11,null],[18,"MODE_LEVEL_HIGH","","High level triggered.",11,null],[18,"MODE_EDGE_BOTH","","Falling/rising edge triggered.",11,null],[18,"VIRTUAL","","Virtual interrupt.",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["interruptoptions",3]]],[11,"all","","Returns the set containing all flags.",11,[[],["interruptoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",11,[[],[["interruptoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",11,[[],["interruptoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[],["interruptoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",11,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",11,[[["interruptoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",11,[[["interruptoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["interruptoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["interruptoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["interruptoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",11,[[["interruptoptions",3]]]],[11,"to_mode","","Extract the mode bits.",11,[[]]],[11,"create","","Create a new `IOMMU`.",12,[[],["arc",3]]],[11,"is_valid_bus_txn_id","","Check if a `bus_txn_id` is valid for this IOMMU.",12,[[]]],[11,"minimum_contiguity","","Returns the number of bytes that Map() can guarantee, upon…",12,[[]]],[11,"aspace_size","","The number of bytes in the address space (UINT64_MAX if…",12,[[]]],[11,"map","","Grant a device access to the range of pages given by…",12,[[["arc",3],["iommuperms",3],["vmobject",3]],["zxresult",6]]],[11,"map_contiguous","","Same as `map`, but with additional guarantee that this…",12,[[["arc",3],["iommuperms",3],["vmobject",3]],["zxresult",6]]],[18,"PERM_READ","","Read Permission.",13,null],[18,"PERM_WRITE","","Write Permission.",13,null],[18,"PERM_EXECUTE","","Execute Permission.",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["iommuperms",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["iommuperms",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[],[["option",4],["iommuperms",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[],["iommuperms",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[],["iommuperms",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["iommuperms",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["iommuperms",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["iommuperms",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["iommuperms",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["iommuperms",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["iommuperms",3]]]],[11,"add_bus_region","","Add bus region.",14,[[["pciaddrspace",4]],["zxresult",6]]],[11,"sub_bus_region","","Subtract bus region.",14,[[["pciaddrspace",4]],["zxresult",6]]],[11,"set_address_translation_provider","","A PcieAddressProvider translates a BDF address to an…",14,[[["arc",3],["pcieaddressprovider",8]],["zxresult",6]]],[11,"add_root","","Add a root bus to the driver and attempt to scan it for…",14,[[["pciirqswizzlelut",3]],["zxresult",6]]],[11,"start_bus_driver","","Start the bus driver.",14,[[],["zxresult",6]]],[11,"get_nth_device","","Get the \\\"Nth\\\" device.",14,[[],["zxresult",6]]],[11,"get_config","","Get a device\'s config.",14,[[],["option",4]]],[11,"link_device_to_upstream","","Link a device to an upstream node.",14,[[["arc",3],["ipcinode",8],["weak",3]]]],[11,"find_legacy_irq_handler","","Find the legacy IRQ handler.",14,[[],[["zxresult",6],["arc",3]]]],[11,"add_ecam","","Add a ECAM region.",15,[[["pciecamregion",3]],["zxresult",6]]],[11,"new","","Create a new PcieDeviceKObject.",16,[[["arc",3],["ipcinode",8]],[["arc",3],["pciedevicekobject",3]]]],[11,"get_bar","","Get PcieBarInfo.",16,[[],[["pciebarinfo",3],["zxresult",6]]]],[11,"map_interrupt","","Map the interrupt to the IRQ.",16,[[],[["zxresult",6],["arc",3]]]],[11,"enable_mmio","","Enable MMIO.",16,[[],["zxresult",6]]],[11,"enable_pio","","Enable PIO.",16,[[],["zxresult",6]]],[11,"enable_master","","Enable bus mastering.",16,[[],["zxresult",6]]],[11,"get_irq_mode_capabilities","","Check whether `mode` is capable PCI device\'s IRQ modes.",16,[[["pcieirqmode",4]],[["pcieirqmodecaps",3],["zxresult",6]]]],[11,"set_irq_mode","","Set IRQ mode.",16,[[["pcieirqmode",4]],["zxresult",6]]],[11,"config_read","","Read the device\'s config.",16,[[],["zxresult",6]]],[11,"config_write","","Write the device\'s config.",16,[[],["zxresult",6]]],[11,"encode_addrs","","Encode the mapped addresses.",17,[[],[["zxresult",6],["vec",3]]]],[11,"unpin","","Unpin pages and revoke device access to them.",17,[[]]],[18,"EXCLUSIVE","","Exclusive resource.",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["resourceflags",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["resourceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[],[["resourceflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[],["resourceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[],["resourceflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["resourceflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["resourceflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["resourceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["resourceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["resourceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["resourceflags",3]]]],[11,"create","","Create a new `Resource`.",19,[[["resourcekind",4],["resourceflags",3]],["arc",3]]],[11,"validate","","Validate the resource is the given kind or it is the root…",19,[[["resourcekind",4]],["zxresult",6]]],[11,"validate_ranged_resource","","Validate the resource is the given kind or it is the root…",19,[[["resourcekind",4]],["zxresult",6]]],[11,"check_exclusive","","Returns `Err(ZxError::INVALID_ARGS)` if the resource is…",19,[[["resourceflags",3]],["zxresult",6]]],[11,"get_info","","Get information of the resource.",19,[[],["resourceinfo",3]]],[0,"pci_init_args","","`sys_pci_init` args.",null,null],[3,"PciIrqSwizzleLut","zircon_object::dev::pci_init_args","",null,null],[3,"PciInitArgsIrqs","","",null,null],[12,"global_irq","","",20,null],[12,"level_triggered","","",20,null],[12,"active_high","","",20,null],[12,"padding1","","",20,null],[3,"PciInitArgsHeader","","",null,null],[12,"dev_pin_to_global_irq","","",21,null],[12,"num_irqs","","",21,null],[12,"irqs","","",21,null],[12,"addr_window_count","","",21,null],[3,"PciInitArgsAddrWindows","","",null,null],[12,"base","","",22,null],[12,"size","","",22,null],[12,"bus_start","","",22,null],[12,"bus_end","","",22,null],[12,"cfg_space_type","","",22,null],[12,"has_ecam","","",22,null],[12,"padding1","","",22,null],[17,"PCI_INIT_ARG_MAX_ECAM_WINDOWS","","",null,null],[17,"PCI_INIT_ARG_MAX_SIZE","","",null,null],[17,"PCI_MAX_DEVICES_PER_BUS","zircon_object::dev","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_DEVICE","","",null,null],[17,"PCI_MAX_LEGACY_IRQ_PINS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_BUS","","",null,null],[17,"PCI_MAX_IRQS","","",null,null],[17,"PCI_NO_IRQ_MAPPING","","",null,null],[17,"PCIE_PIO_ADDR_SPACE_MASK","","",null,null],[17,"PCIE_MAX_BUSSES","","",null,null],[17,"PCIE_ECAM_BYTES_PER_BUS","","",null,null],[17,"PCIE_INVALID_VENDOR_ID","","",null,null],[17,"PCI_CFG_SPACE_TYPE_PIO","","",null,null],[17,"PCI_CFG_SPACE_TYPE_MMIO","","",null,null],[17,"PCIE_IRQRET_MASK","","",null,null],[17,"PCIE_MAX_MSI_IRQS","","",null,null],[0,"hypervisor","zircon_object","Objects for Virtual Machine Monitor (hypervisor).",null,null],[4,"TrapKind","zircon_object::hypervisor","",null,null],[13,"GuestTrapBell","","Asynchronous trap caused by MMIO.",23,null],[13,"GuestTrapMem","","Synchronous traps caused by MMIO.",23,null],[13,"GuestTrapIo","","Synchronous traps caused by I/O instructions.",23,null],[13,"_Invalid","","Invalid",23,null],[3,"VcpuIo","","",null,null],[12,"access_size","","",24,null],[12,"_padding1","","",24,null],[12,"data","","",24,null],[4,"VcpuReadWriteKind","","",null,null],[13,"VcpuState","","",25,null],[13,"VcpuIo","","",25,null],[3,"VcpuState","","",null,null],[12,"rax","","",26,null],[12,"rcx","","",26,null],[12,"rdx","","",26,null],[12,"rbx","","",26,null],[12,"rsp","","",26,null],[12,"rbp","","",26,null],[12,"rsi","","",26,null],[12,"rdi","","",26,null],[12,"r8","","",26,null],[12,"r9","","",26,null],[12,"r10","","",26,null],[12,"r11","","",26,null],[12,"r12","","",26,null],[12,"r13","","",26,null],[12,"r14","","",26,null],[12,"r15","","",26,null],[12,"rflags","","",26,null],[3,"Guest","","A guest is a virtual machine that can be run within the…",null,null],[3,"Vcpu","","Virtual CPU within a Guest, which allows for execution…",null,null],[3,"VmmPageTable","","Virtual Machine Manager\'s Page Table.",null,null],[11,"new","","Create a new Guest.",27,[[],[["arc",3],["zxresult",6]]]],[11,"set_trap","","Sets a trap within a guest, which generates a packet when…",27,[[["option",4],["weak",3]],["zxresult",6]]],[11,"vmar","","Get the VMAR of the Guest.",27,[[],[["arc",3],["vmaddressregion",3]]]],[11,"new","","Create a new VCPU within a guest.",28,[[["guest",3],["arc",3],["arc",3],["thread",3]],[["arc",3],["zxresult",6]]]],[11,"same_thread","","Check whether `current_thread` is the thread of the VCPU.",28,[[["arc",3]]]],[11,"virtual_interrupt","","Inject a virtual interrupt.",28,[[],["zxresult",6]]],[11,"resume","","Resume execution of the VCPU.",28,[[],[["portpacket",3],["zxresult",6]]]],[11,"read_state","","Read state from the VCPU.",28,[[],[["vcpustate",3],["zxresult",6]]]],[11,"write_state","","Write state to the VCPU.",28,[[["vcpustate",3]],["zxresult",6]]],[11,"write_io_state","","Write IO state to the VCPU.",28,[[["vcpuio",3]],["zxresult",6]]],[17,"GUEST_PHYSICAL_ASPACE_BASE","","The base of the Guest\'s physical address space.",null,null],[17,"GUEST_PHYSICAL_ASPACE_SIZE","","The size of the Guest\'s physical address space.",null,null],[11,"new","","Create a new VmmPageTable.",29,[[]]],[0,"ipc","zircon_object","Objects for IPC.",null,null],[3,"Channel","zircon_object::ipc","Bidirectional interprocess communication",null,null],[3,"MessagePacket","","The message transferred in the channel. See Channel for…",null,null],[12,"data","","The data carried by the message packet",30,null],[12,"handles","","See Channel for details.",30,null],[3,"Fifo","","First-In First-Out inter-process queue.",null,null],[3,"Socket","","Bidirectional streaming IPC transport.",null,null],[3,"SocketFlags","","Signals that waitable kernel objects expose to applications.",null,null],[3,"SocketInfo","","The information of a socket",null,null],[11,"create","","Create a channel and return a pair of its endpoints",31,[[]]],[11,"check_and_read","","Read a packet from the channel if check is ok, otherwise…",31,[[],[["messagepacket",3],["zxresult",6]]]],[11,"read","","Read a packet from the channel",31,[[],[["messagepacket",3],["zxresult",6]]]],[11,"write","","Write a packet to the channel",31,[[["messagepacket",3]],["zxresult",6]]],[11,"call","","Send a message to a channel and await a reply.",31,[[["messagepacket",3],["arc",3]]]],[11,"set_txid","","Set txid (the first 4 bytes)",30,[[]]],[11,"get_txid","","Get txid (the first 4 bytes)",30,[[]]],[11,"create","","Create a FIFO.",32,[[]]],[11,"write","","Write data to the FIFO.",32,[[],["zxresult",6]]],[11,"read","","Read data from the FIFO.",32,[[],["zxresult",6]]],[18,"SHUTDOWN_WRITE","","Via this option to `socket_shutdown()`, one end of the…",33,null],[18,"SHUTDOWN_READ","","Via this option to `socket_shutdown()`, one end of the…",33,null],[18,"SHUTDOWN_MASK","","Valid flags of `socket_shutdown()`.",33,null],[18,"DATAGRAM","","Create a datagram socket. See `read` and `write` for…",33,null],[18,"CREATE_MASK","","Valid flags of `socket_create()`.",33,null],[18,"SOCKET_PEEK","","Leave the message in the socket.",33,null],[11,"empty","","Returns an empty set of flags",33,[[],["socketflags",3]]],[11,"all","","Returns the set containing all flags.",33,[[],["socketflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",33,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",33,[[],[["option",4],["socketflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",33,[[],["socketflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",33,[[],["socketflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",33,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",33,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",33,[[["socketflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",33,[[["socketflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",33,[[["socketflags",3]]]],[11,"remove","","Removes the specified flags in-place.",33,[[["socketflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",33,[[["socketflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",33,[[["socketflags",3]]]],[11,"create","","Create a socket.",34,[[],["zxresult",6]]],[11,"write","","Write data to the socket. If successful, the number of…",34,[[],["zxresult",6]]],[11,"read","","Read data from the socket. If successful, the number of…",34,[[],["zxresult",6]]],[11,"get_info","","Get information of the socket.",34,[[],["socketinfo",3]]],[11,"shutdown","","Prevent reading or writing.",34,[[],["zxresult",6]]],[11,"set_read_threshold","","Set the read threshold of the socket.",34,[[],["zxresult",6]]],[11,"set_write_threshold","","Set the write threshold of the socket.",34,[[],["zxresult",6]]],[11,"get_rx_tx_threshold","","Get the read and write thresholds of the socket.",34,[[]]],[0,"object","zircon_object","Kernel object basis.",null,null],[3,"Handle","zircon_object::object","A Handle is how a specific process refers to a specific…",null,null],[12,"object","","The object referred to by the handle.",35,null],[12,"rights","","The handle\'s associated rights.",35,null],[3,"HandleBasicInfo","","Information about a handle and the object it refers to.",null,null],[3,"HandleInfo","","Information about a handle itself, including its…",null,null],[12,"handle","","The handle\'s value in user space.",36,null],[3,"Rights","","Rights are associated with handles and convey privileges…",null,null],[3,"Signal","","Signals that waitable kernel objects expose to applications.",null,null],[3,"KObjectBase","","The base struct of a kernel object.",null,null],[12,"id","","The object\'s KoID.",37,null],[3,"DummyObject","","Empty kernel object. Just for test.",null,null],[5,"obj_type","","Get an object\'s type.",null,[[["arc",3]]]],[5,"wait_signal_many","","Asynchronous wait signal for multiple objects.",null,[[]]],[11,"new","","Create a new handle referring to the given object with…",35,[[["rights",3],["arc",3],["kernelobject",8]]]],[11,"get_info","","Get information about the provided handle and the object…",35,[[],["handlebasicinfo",3]]],[11,"get_handle_info","","Get information about the handle itself.",35,[[],["handleinfo",3]]],[18,"DUPLICATE","","Allows handle duplication via `zx_handle_duplicate()`.",38,null],[18,"TRANSFER","","Allows handle transfer via `zx_channel_write()`.",38,null],[18,"READ","","Allows reading of data from containers (channels, sockets,…",38,null],[18,"WRITE","","Allows writing of data to containers (channels, sockets,…",38,null],[18,"EXECUTE","","Allows mapping as executable if `Rights::MAP` is also…",38,null],[18,"MAP","","Allows mapping of a VM object into an address space.",38,null],[18,"GET_PROPERTY","","Allows property inspection via `zx_object_get_property()`.",38,null],[18,"SET_PROPERTY","","Allows property modification via `zx_object_set_property()`.",38,null],[18,"ENUMERATE","","Allows enumerating child objects via…",38,null],[18,"DESTROY","","Allows termination of task objects via `zx_task_kill()`.",38,null],[18,"SET_POLICY","","Allows policy modification via `zx_job_set_policy()`.",38,null],[18,"GET_POLICY","","Allows policy inspection via `zx_job_get_policy()`.",38,null],[18,"SIGNAL","","Allows use of `zx_object_signal()`.",38,null],[18,"SIGNAL_PEER","","Allows use of `zx_object_signal_peer()`.",38,null],[18,"WAIT","","Allows use of `zx_object_wait_one()`,…",38,null],[18,"INSPECT","","Allows inspection via `zx_object_get_info()`.",38,null],[18,"MANAGE_JOB","","Allows creation of processes, subjobs, etc.",38,null],[18,"MANAGE_PROCESS","","Allows creation of threads, etc.",38,null],[18,"MANAGE_THREAD","","Allows suspending/resuming threads, etc.",38,null],[18,"APPLY_PROFILE","","Not used.",38,null],[18,"SAME_RIGHTS","","Used to duplicate a handle with the same rights.",38,null],[18,"BASIC","","TRANSFER | DUPLICATE | WAIT | INSPECT",38,null],[18,"IO","","READ ｜ WRITE",38,null],[18,"PROPERTY","","GET_PROPERTY ｜ SET_PROPERTY",38,null],[18,"POLICY","","GET_POLICY ｜ SET_POLICY",38,null],[18,"DEFAULT_CHANNEL","","BASIC & !Self::DUPLICATE | IO | SIGNAL | SIGNAL_PEER",38,null],[18,"DEFAULT_PROCESS","","BASIC | IO | PROPERTY | ENUMERATE | DESTROY | SIGNAL |…",38,null],[18,"DEFAULT_THREAD","","BASIC | IO | PROPERTY | DESTROY | SIGNAL | MANAGE_THREAD",38,null],[18,"DEFAULT_VMO","","BASIC | IO | PROPERTY | MAP | SIGNAL",38,null],[18,"DEFAULT_VMAR","","BASIC | WAIT",38,null],[18,"DEFAULT_JOB","","BASIC | IO | PROPERTY | POLICY | ENUMERATE | DESTROY |…",38,null],[18,"DEFAULT_RESOURCE","","TRANSFER | DUPLICATE | WRITE | INSPECT",38,null],[18,"DEFAULT_DEBUGLOG","","BASIC | WRITE | SIGNAL",38,null],[18,"DEFAULT_SUSPEND_TOKEN","","TRANSFER | INSPECT",38,null],[18,"DEFAULT_PORT","","(BASIC & !WAIT) | IO",38,null],[18,"DEFAULT_TIMER","","BASIC | WRITE | SIGNAL",38,null],[18,"DEFAULT_EVENT","","BASIC | SIGNAL",38,null],[18,"DEFAULT_EVENTPAIR","","BASIC | SIGNAL ｜ SIGNAL_PEER",38,null],[18,"DEFAULT_FIFO","","BASIC | IO | SIGNAL | SIGNAL_PEER",38,null],[18,"DEFAULT_SOCKET","","BASIC | IO | PROPERTY | SIGNAL | SIGNAL_PEER",38,null],[18,"DEFAULT_STREAM","","BASIC | PROPERTY | SIGNAL",38,null],[18,"DEFAULT_BTI","","(BASIC & !WAIT) | IO | MAP",38,null],[18,"DEFAULT_INTERRUPT","","BASIC | IO | SIGNAL",38,null],[18,"DEFAULT_DEVICE","","BASIC | IO",38,null],[18,"DEFAULT_PCI_INTERRUPT","","BASIC | IO | SIGNAL",38,null],[18,"DEFAULT_EXCEPTION","","TRANSFER | PROPERTY | INSPECT",38,null],[18,"DEFAULT_GUEST","","TRANSFER | DUPLICATE | WRITE | INSPECT | MANAGE_PROCESS",38,null],[18,"DEFAULT_VCPU","","BASIC | IO | EXECUTE | SIGNAL",38,null],[11,"empty","","Returns an empty set of flags",38,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",38,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",38,[[],[["rights",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",38,[[],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",38,[[],["rights",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",38,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",38,[[["rights",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",38,[[["rights",3]]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",38,[[["rights",3]]]],[18,"READABLE","","",39,null],[18,"WRITABLE","","",39,null],[18,"PEER_CLOSED","","",39,null],[18,"SIGNALED","","",39,null],[18,"HANDLE_CLOSED","","",39,null],[18,"KERNEL_ALL","","",39,null],[18,"USER_ALL","","",39,null],[18,"CLOCK_STARTED","","",39,null],[18,"SOCKET_PEER_WRITE_DISABLED","","",39,null],[18,"SOCKET_WRITE_DISABLED","","",39,null],[18,"SOCKET_CONTROL_READABLE","","",39,null],[18,"SOCKET_CONTROL_WRITABLE","","",39,null],[18,"SCOEKT_ACCEPT","","",39,null],[18,"SOCKET_SHARE","","",39,null],[18,"SOCKET_READ_THRESHOLD","","",39,null],[18,"SOCKET_WRITE_THRESHOLD","","",39,null],[18,"TASK_TERMINATED","","",39,null],[18,"JOB_TERMINATED","","",39,null],[18,"JOB_NO_JOBS","","",39,null],[18,"JOB_NO_PROCESSES","","",39,null],[18,"PROCESS_TERMINATED","","",39,null],[18,"THREAD_TERMINATED","","",39,null],[18,"THREAD_RUNNING","","",39,null],[18,"THREAD_SUSPENDED","","",39,null],[18,"VMO_ZERO_CHILDREN","","",39,null],[18,"INTERRUPT_SIGNAL","","",39,null],[18,"SIGCHLD","","",39,null],[18,"USER_SIGNAL_0","","",39,null],[18,"USER_SIGNAL_1","","",39,null],[18,"USER_SIGNAL_2","","",39,null],[18,"USER_SIGNAL_3","","",39,null],[18,"USER_SIGNAL_4","","",39,null],[18,"USER_SIGNAL_5","","",39,null],[18,"USER_SIGNAL_6","","",39,null],[18,"USER_SIGNAL_7","","",39,null],[11,"empty","","Returns an empty set of flags",39,[[],["signal",3]]],[11,"all","","Returns the set containing all flags.",39,[[],["signal",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",39,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",39,[[],[["option",4],["signal",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",39,[[],["signal",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",39,[[],["signal",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",39,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",39,[[["signal",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",39,[[["signal",3]]]],[11,"insert","","Inserts the specified flags in-place.",39,[[["signal",3]]]],[11,"remove","","Removes the specified flags in-place.",39,[[["signal",3]]]],[11,"toggle","","Toggles the specified flags in-place.",39,[[["signal",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",39,[[["signal",3]]]],[11,"verify_user_signal","","Verify whether `number` only sets the bits specified in…",39,[[["signal",3]],[["signal",3],["zxresult",6]]]],[6,"HandleValue","","The value refers to a Handle in user space.",null,null],[6,"KoID","","The type of kernel object ID.",null,null],[6,"SignalHandler","","The type of kernel object signal handler.",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[8,"KernelObject","","Common interface of a kernel object.",null,null],[10,"id","","Get object\'s KoID.",40,[[],["koid",6]]],[10,"type_name","","Get the name of the type of the kernel object.",40,[[]]],[10,"name","","Get object\'s name.",40,[[],["string",3]]],[10,"set_name","","Set object\'s name.",40,[[]]],[10,"signal","","Get the signal status.",40,[[],["signal",3]]],[10,"signal_set","","Assert `signal`.",40,[[["signal",3]]]],[10,"signal_clear","","Deassert `signal`.",40,[[["signal",3]]]],[10,"signal_change","","Change signal status: first `clear` then `set` indicated…",40,[[["signal",3]]]],[10,"add_signal_callback","","Add `callback` for signal status changes.",40,[[["signalhandler",6]]]],[11,"get_child","","Attempt to find a child of the object with given KoID.",40,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"peer","","Attempt to get the object\'s peer.",40,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","If the object is related to another (such as the other end…",40,[[],["koid",6]]],[11,"allowed_signals","","Get object\'s allowed signals.",40,[[],["signal",3]]],[11,"is","","Returns true if the trait object wraps an object of type…",40,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the…",40,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an `Rc`-ed object from an `Rc`-ed trait object if…",40,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object…",40,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait…",40,[[],["option",4]]],[11,"downcast_arc","","Returns an `Arc`-ed object from an `Arc`-ed trait object…",40,[[["arc",3]],[["result",4],["arc",3],["arc",3]]]],[11,"new","","Create a new kernel object base.",37,[[]]],[11,"with_signal","","Create a kernel object base with initial `signal`.",37,[[["signal",3]]]],[11,"with_name","","Create a kernel object base with `name`.",37,[[]]],[11,"with","","Create a kernel object base with both signal and name",37,[[["signal",3]]]],[11,"name","","Get object\'s name.",37,[[],["string",3]]],[11,"set_name","","Set object\'s name.",37,[[]]],[11,"signal","","Get the signal status.",37,[[],["signal",3]]],[11,"signal_change","","Change signal status: first `clear` then `set` indicated…",37,[[["signal",3]]]],[11,"signal_set","","Assert `signal`.",37,[[["signal",3]]]],[11,"signal_clear","","Deassert `signal`.",37,[[["signal",3]]]],[11,"add_signal_callback","","Add `callback` for signal status changes.",37,[[["signalhandler",6]]]],[11,"wait_signal","","Asynchronous wait for one of `signal`.",40,[[["arc",3],["signal",3]]]],[11,"send_signal_to_port_async","","Once one of the `signal` asserted, push a packet with…",40,[[["arc",3],["arc",3],["signal",3]]]],[11,"new","","Create a new `DummyObject`.",41,[[],["arc",3]]],[0,"signal","zircon_object","Objects for signaling and waiting.",null,null],[3,"Event","zircon_object::signal","Signalable event for concurrent programming",null,null],[3,"EventPair","","Mutually signalable pair of events for concurrent…",null,null],[3,"Futex","","A primitive for creating userspace synchronization tools.",null,null],[3,"PortPacket","","A packet sent through a port.",null,null],[12,"key","","",42,null],[12,"type_","","",42,null],[12,"status","","",42,null],[12,"data","","",42,null],[3,"PacketSignal","","",null,null],[12,"trigger","","",43,null],[12,"observed","","",43,null],[12,"count","","",43,null],[12,"timestamp","","",43,null],[12,"_reserved1","","",43,null],[3,"PacketGuestBell","","",null,null],[12,"addr","","",44,null],[12,"_reserved0","","",44,null],[12,"_reserved1","","",44,null],[12,"_reserved2","","",44,null],[3,"PacketGuestMem","","",null,null],[12,"addr","","",45,null],[12,"inst_len","","",45,null],[12,"inst_buf","","",45,null],[12,"default_operand_size","","",45,null],[12,"_reserved","","",45,null],[3,"PacketGuestIo","","",null,null],[12,"port","","",46,null],[12,"access_size","","",46,null],[12,"input","","",46,null],[12,"data","","",46,null],[12,"_reserved0","","",46,null],[12,"_reserved1","","",46,null],[12,"_reserved2","","",46,null],[3,"PacketGuestVcpuInterrupt","","",null,null],[3,"PacketGuestVcpuStartup","","",null,null],[3,"PacketGuestVcpu","","",null,null],[12,"data","","",47,null],[12,"type_","","",47,null],[12,"_padding1","","",47,null],[12,"_reserved","","",47,null],[3,"PacketInterrupt","","",null,null],[12,"timestamp","","",48,null],[12,"_reserved0","","",48,null],[12,"_reserved1","","",48,null],[12,"_reserved2","","",48,null],[3,"PortPacketRepr","","A high-level representation of a packet sent through a port.",null,null],[12,"key","","",49,null],[12,"status","","",49,null],[12,"data","","",49,null],[3,"Port","","Signaling and mailbox primitive",null,null],[3,"PortOptions","","If you need this port to be bound to an interrupt, pass…",null,null],[3,"Timer","","An object that may be signaled at some point in the future",null,null],[19,"Payload","","The data carried by a packet",null,null],[19,"PacketGuestVcpuData","","",null,null],[4,"PacketType","","The type of a packet.",null,null],[13,"User","","",50,null],[13,"SignalOne","","",50,null],[13,"SignalRep","","",50,null],[13,"GuestBell","","",50,null],[13,"GuestMem","","",50,null],[13,"GuestIo","","",50,null],[13,"GuestVcpu","","",50,null],[13,"Interrupt","","",50,null],[13,"PageRequest","","",50,null],[4,"PacketGuestVcpuType","","",null,null],[13,"VcpuInterrupt","","",51,null],[13,"VcpuStartup","","",51,null],[4,"PayloadRepr","","A high-level representation of a packet payload.",null,null],[13,"User","","",52,null],[13,"Signal","","",52,null],[13,"GuestBell","","",52,null],[13,"GuestMem","","",52,null],[13,"GuestIo","","",52,null],[13,"GuestVcpu","","",52,null],[13,"Interrupt","","",52,null],[4,"Slack","","Slack specifies how much a timer or event is allowed to…",null,null],[13,"Center","","slack is centered around deadline",53,null],[13,"Early","","slack interval is (deadline - slack, deadline]",53,null],[13,"Late","","slack interval is [deadline, deadline + slack)",53,null],[11,"new","","Create a new `Event`.",54,[[],["arc",3]]],[11,"create","","Create a pair of event.",55,[[]]],[11,"peer","","Get the peer event.",55,[[],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new Futex.",56,[[["atomici32",3]],["arc",3]]],[11,"wait","","Wait on a futex.",56,[[["arc",3]]]],[11,"wake","","Wake some number of threads waiting on a futex.",56,[[]]],[11,"owner","","Get the owner of the futex.",56,[[],[["arc",3],["option",4]]]],[11,"wait_with_owner","","Wait on a futex.",56,[[["arc",3],["arc",3],["option",4]]]],[11,"wake_single_owner","","Wake exactly one thread from the futex wait queue.",56,[[]]],[11,"requeue","","Requeuing is a generalization of waking.",56,[[["arc",3],["arc",3],["option",4]],["zxresult",6]]],[11,"new","","Create a new `Port`.",57,[[],[["arc",3],["zxresult",6]]]],[11,"push","","Push a `packet` into the port.",57,[[]]],[11,"push_user","","Push a `User` type `packet` into the port.",57,[[],["zxresult",6]]],[11,"wait","","Asynchronous wait until at least one packet is available,…",57,[[["arc",3]]]],[11,"can_bind_to_interrupt","","Check whether the port can be bound to an interrupt.",57,[[]]],[18,"BIND_TO_INTERUPT","","Allow this port to be bound to an interrupt.",58,null],[11,"empty","","Returns an empty set of flags",58,[[],["portoptions",3]]],[11,"all","","Returns the set containing all flags.",58,[[],["portoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",58,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",58,[[],[["portoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",58,[[],["portoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",58,[[],["portoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",58,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",58,[[["portoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",58,[[["portoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",58,[[["portoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",58,[[["portoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",58,[[["portoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",58,[[["portoptions",3]]]],[11,"new","","Create a new `Timer`.",59,[[],["arc",3]]],[11,"with_slack","","Create a new `Timer` with slack.",59,[[["slack",4]],["arc",3]]],[11,"one_shot","","Create a one-shot timer.",59,[[["duration",3]],["arc",3]]],[11,"set","","Starts a one-shot timer that will fire when `deadline`…",59,[[["arc",3],["duration",3]]]],[11,"cancel","","Cancel the pending timer started by `set`.",59,[[]]],[6,"PacketUser","","",null,null],[0,"task","zircon_object","Objects for Task Management.",null,null],[3,"Exceptionate","zircon_object::task","Kernel-owned exception channel endpoint.",null,null],[3,"ExceptionReport","","Data reported to an exception handler for most exceptions.",null,null],[3,"ExceptionObject","","The exception object received from the exception channel.",null,null],[3,"Job","","Control a group of processes",null,null],[3,"JobInfo","","Information of a job.",null,null],[3,"JobPolicy","","Security and resource policies of a job.",null,null],[3,"BasicPolicy","","The policy type.",null,null],[12,"condition","","Condition when the policy is applied.",60,null],[12,"action","","",60,null],[3,"TimerSlackPolicy","","Timer slack policy.",null,null],[3,"Process","","Process abstraction",null,null],[3,"ProcessInfo","","Information of a process.",null,null],[12,"return_code","","",61,null],[12,"started","","",61,null],[12,"has_exited","","",61,null],[12,"debugger_attached","","",61,null],[12,"padding1","","",61,null],[3,"SuspendToken","","Suspend the given task.",null,null],[3,"Thread","","Runnable / computation entity",null,null],[3,"ThreadFlag","","Thread flags.",null,null],[3,"CurrentThread","","A handle to current thread.",null,null],[3,"ThreadInfo","","The thread information.",null,null],[4,"ExceptionType","","Type of exception",null,null],[13,"General","","",62,null],[13,"FatalPageFault","","",62,null],[13,"UndefinedInstruction","","",62,null],[13,"SoftwareBreakpoint","","",62,null],[13,"HardwareBreakpoint","","",62,null],[13,"UnalignedAccess","","",62,null],[13,"Synth","","",62,null],[13,"ThreadStarting","","",62,null],[13,"ThreadExiting","","",62,null],[13,"PolicyError","","",62,null],[13,"ProcessStarting","","",62,null],[4,"SetPolicyOptions","","Control the effect in the case of conflict between the…",null,null],[13,"Absolute","","Policy is applied for all conditions in policy or the call…",63,null],[13,"Relative","","Policy is applied for the conditions not specifically…",63,null],[4,"PolicyCondition","","The condition when a policy is applied.",null,null],[13,"BadHandle","","A process under this job is attempting to issue a syscall…",64,null],[13,"WrongObject","","A process under this job is attempting to issue a syscall…",64,null],[13,"VmarWx","","A process under this job is attempting to map an address…",64,null],[13,"NewAny","","A special condition that stands for all of the above…",64,null],[13,"NewVMO","","A process under this job is attempting to create a new vm…",64,null],[13,"NewChannel","","A process under this job is attempting to create a new…",64,null],[13,"NewEvent","","A process under this job is attempting to create a new…",64,null],[13,"NewEventPair","","A process under this job is attempting to create a new…",64,null],[13,"NewPort","","A process under this job is attempting to create a new port.",64,null],[13,"NewSocket","","A process under this job is attempting to create a new…",64,null],[13,"NewFIFO","","A process under this job is attempting to create a new fifo.",64,null],[13,"NewTimer","","A process under this job is attempting to create a new…",64,null],[13,"NewProcess","","A process under this job is attempting to create a new…",64,null],[13,"NewProfile","","A process under this job is attempting to create a new…",64,null],[13,"AmbientMarkVMOExec","","A process under this job is attempting to use…",64,null],[4,"PolicyAction","","The action taken when the condition happens specified by a…",null,null],[13,"Allow","","Allow condition.",65,null],[13,"Deny","","Prevent condition.",65,null],[13,"AllowException","","Generate an exception via the debug port. An exception…",65,null],[13,"DenyException","","Just like `AllowException`, but after resuming condition…",65,null],[13,"Kill","","Terminate the process.",65,null],[4,"Status","","Status of a process.",null,null],[13,"Init","","Initial state, no thread present in process.",66,null],[13,"Running","","First thread has started and is running.",66,null],[13,"Exited","","Process has exited with the code.",66,null],[4,"ThreadStateKind","","Possible values for \\\"kind\\\" in zx_thread_read_state and…",null,null],[13,"General","","",67,null],[13,"FloatPoint","","",67,null],[13,"Vector","","",67,null],[13,"Debug","","",67,null],[13,"SingleStep","","",67,null],[13,"FS","","",67,null],[13,"GS","","",67,null],[4,"ThreadState","","The thread state.",null,null],[13,"New","","The thread has been created but it has not started running…",68,null],[13,"Running","","The thread is running user code normally.",68,null],[13,"Suspended","","Stopped due to `zx_task_suspend()`.",68,null],[13,"Blocked","","In a syscall or handling an exception.",68,null],[13,"Dying","","The thread is in the process of being terminated, but it…",68,null],[13,"Dead","","The thread has stopped running.",68,null],[13,"BlockedException","","The thread is stopped in an exception.",68,null],[13,"BlockedSleeping","","The thread is stopped in `zx_nanosleep()`.",68,null],[13,"BlockedFutex","","The thread is stopped in `zx_futex_wait()`.",68,null],[13,"BlockedPort","","The thread is stopped in `zx_port_wait()`.",68,null],[13,"BlockedChannel","","The thread is stopped in `zx_channel_call()`.",68,null],[13,"BlockedWaitOne","","The thread is stopped in `zx_object_wait_one()`.",68,null],[13,"BlockedWaitMany","","The thread is stopped in `zx_object_wait_many()`.",68,null],[13,"BlockedInterrupt","","The thread is stopped in `zx_interrupt_wait()`.",68,null],[13,"BlockedPager","","Pager.",68,null],[5,"check_timer_policy","","Check whether the policy is valid.",null,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"create_channel","","Create an exception channel endpoint for user.",69,[[["rights",3]],[["zxresult",6],["arc",3]]]],[11,"is_synth","","Is the exception type generated by kernel instead of the…",62,[[]]],[11,"get_thread_handle","","Create a handle for the exception\'s thread.",70,[[],["handle",3]]],[11,"get_process_handle","","Create a handle for the exception\'s process.",70,[[],[["zxresult",6],["handle",3]]]],[11,"state","","Get whether closing the exception handle will finish…",70,[[]]],[11,"set_state","","Set whether closing the exception handle will finish…",70,[[],["zxresult",6]]],[11,"strategy","","Get whether the debugger gets a \'second chance\' at…",70,[[]]],[11,"set_strategy","","Set whether the debugger gets a \'second chance\' at…",70,[[],["zxresult",6]]],[11,"root","","Create the root job.",71,[[],["arc",3]]],[11,"create_child","","Create a new child job object.",71,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"policy","","Get the policy of the job.",71,[[],["jobpolicy",3]]],[11,"parent","","Get the parent job.",71,[[],[["arc",3],["option",4]]]],[11,"set_policy_basic","","Sets one or more security and/or resource policies to an…",71,[[["setpolicyoptions",4]],["zxresult",6]]],[11,"set_policy_timer_slack","","Sets timer slack policy to an empty job.",71,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"get_info","","Get information of this job.",71,[[],["jobinfo",3]]],[11,"check_root_job","","Check whether this job is root job.",71,[[],["zxresult",6]]],[11,"process_ids","","Get KoIDs of Processes.",71,[[],[["vec",3],["koid",6]]]],[11,"children_ids","","Get KoIDs of children Jobs.",71,[[],[["vec",3],["koid",6]]]],[11,"is_empty","","Return true if this job has no processes and no child jobs.",71,[[]]],[11,"get_action","","Get the action of a policy `condition`.",72,[[["policycondition",4]],[["policyaction",4],["option",4]]]],[11,"apply","","Apply a basic policy.",72,[[["basicpolicy",3]]]],[11,"merge","","Merge the policy with `parent`\'s.",72,[[]]],[11,"create","","Create a new process in the `job`.",73,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new process with extension info.",73,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"start","","Start the first thread in the process.",73,[[["threadfn",6],["option",4],["arc",3],["handle",3]],["zxresult",6]]],[11,"exit","","Exit current process with `retcode`. The process do not…",73,[[]]],[11,"check_policy","","Check whether `condition` is allowed in the parent job\'s…",73,[[["policycondition",4]],["zxresult",6]]],[11,"set_critical_at_job","","Set a process as critical to the job.",73,[[["arc",3]],["zxresult",6]]],[11,"status","","Get process status.",73,[[],["status",4]]],[11,"ext","","Get the extension.",73,[[],["box",3]]],[11,"vmar","","Get the `VmAddressRegion` of the process.",73,[[],[["arc",3],["vmaddressregion",3]]]],[11,"job","","Get the job of the process.",73,[[],[["job",3],["arc",3]]]],[11,"add_handle","","Add a handle to the process",73,[[["handle",3]],["handlevalue",6]]],[11,"add_handles","","Add all handles to the process",73,[[["handle",3],["vec",3]],[["vec",3],["handlevalue",6]]]],[11,"remove_handle","","Remove a handle from the process",73,[[["handlevalue",6]],[["zxresult",6],["handle",3]]]],[11,"remove_handles","","Remove all handles from the process.",73,[[],[["zxresult",6],["vec",3]]]],[11,"remove_object","","Remove a handle referring to a kernel object of the given…",73,[[["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_futex","","Get a futex from the process",73,[[["atomici32",3]],[["arc",3],["futex",3]]]],[11,"dup_handle_operating_rights","","Duplicate a handle with new `rights`, return the new…",73,[[["handlevalue",6]],[["handlevalue",6],["zxresult",6]]]],[11,"get_object_with_rights","","Get the kernel object corresponding to this…",73,[[["rights",3],["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_object_and_rights","","Get the kernel object corresponding to this `handle_value`…",73,[[["handlevalue",6]],["zxresult",6]]],[11,"get_dyn_object_with_rights","","Get the kernel object corresponding to this…",73,[[["rights",3],["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_dyn_object_and_rights","","Get the kernel object corresponding to this `handle_value`…",73,[[["handlevalue",6]],["zxresult",6]]],[11,"get_object","","Get the kernel object corresponding to this `handle_value`",73,[[["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_handle_info","","Get the handle\'s information corresponding to…",73,[[["handlevalue",6]],[["zxresult",6],["handlebasicinfo",3]]]],[11,"get_info","","Get information of this process.",73,[[],["processinfo",3]]],[11,"set_debug_addr","","Set the debug address.",73,[[]]],[11,"get_debug_addr","","Get the debug address.",73,[[]]],[11,"set_dyn_break_on_load","","Set the address where the dynamic loader will issue a…",73,[[]]],[11,"get_dyn_break_on_load","","Get the address where the dynamic loader will issue a…",73,[[]]],[11,"get_cancel_token","","Get an one-shot `Receiver` for receiving cancel message of…",73,[[["handlevalue",6]],[["receiver",3],["zxresult",6]]]],[11,"thread_ids","","Get KoIDs of Threads.",73,[[],[["vec",3],["koid",6]]]],[11,"wait_for_exit","","Wait for process exit and get return code.",73,[[["arc",3]]]],[11,"create","","Create a `SuspendToken` which can suspend the given task.",74,[[["arc",3]],["arc",3]]],[18,"VCPU","","The thread currently has a VCPU.",75,null],[11,"empty","","Returns an empty set of flags",75,[[],["threadflag",3]]],[11,"all","","Returns the set containing all flags.",75,[[],["threadflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",75,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",75,[[],[["threadflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",75,[[],["threadflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",75,[[],["threadflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",75,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",75,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",75,[[["threadflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",75,[[["threadflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",75,[[["threadflag",3]]]],[11,"remove","","Removes the specified flags in-place.",75,[[["threadflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",75,[[["threadflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",75,[[["threadflag",3]]]],[11,"create","","Create a new thread.",76,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new thread with extension info.",76,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"proc","","Get the process.",76,[[],["arc",3]]],[11,"ext","","Get the extension info.",76,[[],["box",3]]],[11,"start","","Start execution on the thread.",76,[[["arc",3],["threadfn",6]],["zxresult",6]]],[11,"start_with_regs","","Start execution with given registers.",76,[[["arc",3],["threadfn",6],["generalregs",3]],["zxresult",6]]],[11,"read_state","","Read one aspect of thread state.",76,[[["threadstatekind",4]],["zxresult",6]]],[11,"write_state","","Write one aspect of thread state.",76,[[["threadstatekind",4]],["zxresult",6]]],[11,"get_thread_info","","Get the thread\'s information.",76,[[],["threadinfo",3]]],[11,"get_thread_exception_info","","Get the thread\'s exception report.",76,[[],[["zxresult",6],["exceptionreport",3]]]],[11,"state","","Get the thread state.",76,[[],["threadstate",4]]],[11,"time_add","","Add the parameter to the time this thread has run on cpu.",76,[[]]],[11,"get_time","","Get the time this thread has run on cpu.",76,[[]]],[11,"is_first_thread","","Whether this thread is the first thread of a process.",76,[[]]],[11,"flags","","Get the thread\'s flags.",76,[[],["threadflag",3]]],[11,"update_flags","","Apply `f` to the thread\'s flags.",76,[[]]],[11,"set_fsbase","","Set the thread local fsbase register on x86_64.",76,[[],["zxresult",6]]],[11,"set_gsbase","","Set the thread local gsbase register on x86_64.",76,[[],["zxresult",6]]],[11,"exit","","Exit the current thread.",77,[[]]],[11,"wait_for_run","","Wait until the thread is ready to run (not suspended), and…",77,[[]]],[11,"end_running","","The thread ends running and takes back the context.",77,[[["usercontext",3],["box",3]]]],[11,"with_context","","Access saved context of current thread.",77,[[]]],[11,"blocking_run","","Run async future and change state while blocking.",77,[[["threadstate",4],["duration",3],["receiver",3],["option",4]]]],[11,"handle_exception","","Create an exception on this thread and wait for the…",77,[[["exceptiontype",4]]]],[6,"ThreadFn","","The type of a new thread function.",null,null],[17,"TASK_RETCODE_SYSCALL_KILL","","The return code set when a task is killed via…",null,null],[8,"IntoResult","","`into_result` returns `Self` if the type parameter is…",null,null],[10,"into_result","","Performs the conversion.",78,[[],["zxresult",6]]],[8,"Task","","Task (Thread, Process, or Job)",null,null],[10,"kill","","Kill the task. The task do not terminate immediately when…",79,[[]]],[10,"suspend","","Suspend the task. Currently only thread or process handles…",79,[[]]],[10,"resume","","Resume the task",79,[[]]],[10,"exceptionate","","Get the exceptionate.",79,[[],[["arc",3],["exceptionate",3]]]],[10,"debug_exceptionate","","Get the debug exceptionate.",79,[[],[["arc",3],["exceptionate",3]]]],[0,"util","zircon_object","Utilities.",null,null],[0,"elf_loader","zircon_object::util","ELF loading of Zircon and Linux.",null,null],[8,"VmarExt","zircon_object::util::elf_loader","Extensional ELF loading methods for `VmAddressRegion`.",null,null],[10,"load_from_elf","","Create `VMObject` from all LOAD segments of `elf` and map…",80,[[["elffile",3]],[["zxresult",6],["arc",3]]]],[10,"map_from_elf","","Same as `load_from_elf`, but the `vmo` is an existing one…",80,[[["arc",3],["elffile",3],["vmobject",3]],["zxresult",6]]],[8,"ElfExt","","Extensional ELF loading methods for `ElfFile`.",null,null],[10,"load_segment_size","","Get total size of all LOAD segments.",81,[[]]],[10,"get_symbol_address","","Get address of the given `symbol`.",81,[[],["option",4]]],[10,"get_interpreter","","Get the program interpreter path name.",81,[[],["result",4]]],[10,"dynsym","","Get the symbol table for dynamic linking (.dynsym section).",81,[[],["result",4]]],[10,"relocate","","Relocate according to the dynamic relocation section…",81,[[],["result",4]]],[0,"kcounter","zircon_object::util","Kernel counter.",null,null],[3,"KCounter","zircon_object::util::kcounter","Kernel counter.",null,null],[3,"KCounterDescriptor","","Kernel counter descriptor.",null,null],[12,"counter","","The counter.",82,null],[12,"name","","The counter\'s name.",82,null],[3,"KCounterDescriptorArray","","Kernel counter descriptor array.",null,null],[12,"0","","",83,null],[11,"new","","Create a new KCounter.",84,[[]]],[11,"add","","Add a value to the counter.",84,[[]]],[11,"get","","Get the value of counter.",84,[[]]],[11,"get","","Get kcounter descriptor array from symbols.",83,[[]]],[0,"vm","zircon_object","Objects for Virtual Memory Management.",null,null],[4,"CachePolicy","zircon_object::vm","",null,null],[13,"Cached","","",85,null],[13,"Uncached","","",85,null],[13,"UncachedDevice","","",85,null],[13,"WriteCombining","","",85,null],[3,"MMUFlags","","",null,null],[3,"Stream","","A readable, writable, seekable interface to some…",null,null],[3,"StreamInfo","","Information of a Stream",null,null],[3,"VmarFlags","","Creation flags for VmAddressRegion.",null,null],[3,"VmAddressRegion","","Virtual Memory Address Regions",null,null],[3,"VmarInfo","","Information of a VmAddressRegion.",null,null],[3,"VmMapping","","Virtual Memory Mapping",null,null],[3,"TaskStatsInfo","","Statistics about resources (e.g., memory) used by a task.",null,null],[3,"VmObject","","Virtual memory containers",null,null],[3,"VmoInfo","","Describes a VMO.",null,null],[12,"flags","","Flags.",86,null],[12,"rights","","If `flags & ZX_INFO_VMO_VIA_HANDLE`, the handle rights.…",86,null],[3,"VmoInfoFlags","","Values used by ZX_INFO_PROCESS_VMOS.",null,null],[3,"KERNEL_ASPACE","","Kernel address space.",null,null],[4,"SeekOrigin","","Enumeration of possible methods to modify the seek within…",null,null],[13,"Start","","Set the seek offset relative to the start of the stream.",87,null],[13,"Current","","Set the seek offset relative to the current seek offset of…",87,null],[13,"End","","Set the seek offset relative to the end of the stream, as…",87,null],[5,"vmo_page_bytes","","The amount of memory committed to VMOs.",null,[[]]],[5,"page_aligned","","Check whether `x` is a multiple of `PAGE_SIZE`.",null,[[]]],[5,"check_aligned","","Check whether `x` is a multiple of `align`.",null,[[]]],[5,"pages","","How many pages the `size` needs. To avoid overflow and…",null,[[]]],[5,"ceil","","How many `align` the `x` needs.",null,[[]]],[5,"roundup_pages","","Round up `size` to a multiple of `PAGE_SIZE`.",null,[[]]],[5,"round_down_pages","","Round down `size` to a multiple of `PAGE_SIZE`.",null,[[]]],[5,"kernel_allocate_physical","","Allocate memory in kernel address space at given physical…",null,[[["mmuflags",3],["physaddr",6],["cachepolicy",4]],[["virtaddr",6],["zxresult",6]]]],[11,"create","","Create a stream from a VMO",88,[[["arc",3],["vmobject",3]],["arc",3]]],[11,"read","","Read data from the stream at the current seek offset",88,[[],["zxresult",6]]],[11,"read_at","","Read data from the stream at a given offset",88,[[],["zxresult",6]]],[11,"write","","write data to the stream at the current seek offset or…",88,[[],["zxresult",6]]],[11,"write_at","","Write data to the stream at a given offset",88,[[],["zxresult",6]]],[11,"seek","","Modify the current seek offset of the stream",88,[[["seekorigin",4]],["zxresult",6]]],[11,"get_info","","Get information of the socket.",88,[[],["streaminfo",3]]],[18,"COMPACT","","When randomly allocating subregions, reduce sprawl by…",89,null],[18,"SPECIFIC","","Request that the new region be at the specified offset in…",89,null],[18,"SPECIFIC_OVERWRITE","","Like SPECIFIC, but permits overwriting existing mappings.…",89,null],[18,"CAN_MAP_SPECIFIC","","Allow VmMappings to be created inside the new region with…",89,null],[18,"CAN_MAP_READ","","Allow VmMappings to be created inside the region with read…",89,null],[18,"CAN_MAP_WRITE","","Allow VmMappings to be created inside the region with…",89,null],[18,"CAN_MAP_EXECUTE","","Allow VmMappings to be created inside the region with…",89,null],[18,"REQUIRE_NON_RESIZABLE","","Require that VMO backing the mapping is non-resizable.",89,null],[18,"ALLOW_FAULTS","","Treat the offset as an upper limit when allocating a VMO…",89,null],[18,"CAN_MAP_RXW","","Allow VmMappings to be created inside the region with…",89,null],[18,"ROOT_FLAGS","","Creation flags for root VmAddressRegion",89,null],[11,"empty","","Returns an empty set of flags",89,[[],["vmarflags",3]]],[11,"all","","Returns the set containing all flags.",89,[[],["vmarflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",89,[[],[["vmarflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",89,[[],["vmarflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",89,[[],["vmarflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",89,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",89,[[["vmarflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",89,[[["vmarflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["vmarflags",3]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["vmarflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["vmarflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",89,[[["vmarflags",3]]]],[11,"new_root","","Create a new root VMAR.",90,[[],["arc",3]]],[11,"new_kernel","","Create a kernel root VMAR.",90,[[],["arc",3]]],[11,"new_guest","","Create a VMAR for guest physical memory.",90,[[],["arc",3]]],[11,"allocate_at","","Create a child VMAR at the `offset`.",90,[[["arc",3],["vmarflags",3]],[["arc",3],["zxresult",6]]]],[11,"allocate","","Create a child VMAR with optional `offset`.",90,[[["arc",3],["vmarflags",3],["option",4]],[["arc",3],["zxresult",6]]]],[11,"map_at","","Map the `vmo` into this VMAR at given `offset`.",90,[[["arc",3],["mmuflags",3],["vmobject",3]],[["virtaddr",6],["zxresult",6]]]],[11,"map","","Map the `vmo` into this VMAR.",90,[[["arc",3],["mmuflags",3],["option",4],["vmobject",3]],[["virtaddr",6],["zxresult",6]]]],[11,"map_ext","","Map the `vmo` into this VMAR.",90,[[["arc",3],["mmuflags",3],["option",4],["vmobject",3]],[["virtaddr",6],["zxresult",6]]]],[11,"unmap","","Unmaps all VMO mappings and destroys all sub-regions…",90,[[["virtaddr",6]],["zxresult",6]]],[11,"protect","","Change protections on a subset of the region of memory in…",90,[[["mmuflags",3]],["zxresult",6]]],[11,"destroy","","Unmap all mappings within the VMAR, and destroy all…",90,[[["arc",3]],["zxresult",6]]],[11,"clear","","Unmap all mappings and destroy all sub-regions of VMAR.",90,[[],["zxresult",6]]],[11,"table_phys","","Get physical address of the underlying page table.",90,[[],["physaddr",6]]],[11,"addr","","Get start address of this VMAR.",90,[[]]],[11,"is_dead","","Whether this VMAR is dead.",90,[[]]],[11,"is_alive","","Whether this VMAR is alive.",90,[[]]],[11,"get_info","","Get information of this VmAddressRegion",90,[[],["vmarinfo",3]]],[11,"get_flags","","Get VmarFlags of this VMAR.",90,[[],["vmarflags",3]]],[11,"dump","","Dump all mappings recursively.",90,[[]]],[11,"vdso_base_addr","","Get base address of vdso.",90,[[],["option",4]]],[11,"handle_page_fault","","Handle page fault happened on this VMAR.",90,[[["mmuflags",3],["virtaddr",6]],["zxresult",6]]],[11,"fork_from","","Clone the entire address space and VMOs from source VMAR.…",90,[[["arc",3]],["zxresult",6]]],[11,"get_task_stats","","Returns statistics about memory used by a task.",90,[[],["taskstatsinfo",3]]],[11,"read_memory","","Read from address space.",90,[[],["zxresult",6]]],[11,"write_memory","","Write to address space.",90,[[],["zxresult",6]]],[11,"find_mapping","","Find mapping of vaddr",90,[[],[["option",4],["arc",3]]]],[11,"get_flags","","Get MMUFlags of this VmMapping.",91,[[],[["zxresult",6],["mmuflags",3]]]],[11,"new_paged","","Create a new VMO backing on physical memory allocated in…",92,[[],["arc",3]]],[11,"new_paged_with_resizable","","Create a new VMO, which can be resizable, backing on…",92,[[],["arc",3]]],[11,"new_physical","","Create a new VMO representing a piece of contiguous…",92,[[["physaddr",6]],["arc",3]]],[11,"new_contiguous","","Create a VM object referring to a specific contiguous…",92,[[],[["arc",3],["zxresult",6]]]],[11,"create_child","","Create a child VMO.",92,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_slice","","Create a child slice as an VMO",92,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"set_len","","Set the length of this VMO if resizable.",92,[[],["zxresult",6]]],[11,"set_content_size_and_resize","","Set the size of the content stored in the VMO in bytes,…",92,[[],["zxresult",6]]],[11,"get_info","","Get information of this VMO.",92,[[],["vmoinfo",3]]],[11,"set_cache_policy","","Set the cache policy.",92,[[["cachepolicy",4]],["zxresult",6]]],[11,"is_resizable","","Returns true if the object size can be changed.",92,[[]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous range…",92,[[]]],[18,"TYPE_PHYSICAL","","The VMO points to a physical address range, and does not…",93,null],[18,"TYPE_PAGED","","The VMO is backed by RAM, consuming memory. Mutually…",93,null],[18,"RESIZABLE","","The VMO is resizable.",93,null],[18,"IS_COW_CLONE","","The VMO is a child, and is a copy-on-write clone.",93,null],[18,"VIA_HANDLE","","When reading a list of VMOs pointed to by a process,…",93,null],[18,"VIA_MAPPING","","When reading a list of VMOs pointed to by a process,…",93,null],[18,"PAGER_BACKED","","The VMO is a pager owned VMO created by…",93,null],[18,"CONTIGUOUS","","The VMO is contiguous.",93,null],[11,"empty","","Returns an empty set of flags",93,[[],["vmoinfoflags",3]]],[11,"all","","Returns the set containing all flags.",93,[[],["vmoinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",93,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",93,[[],[["option",4],["vmoinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",93,[[],["vmoinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",93,[[],["vmoinfoflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",93,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",93,[[["vmoinfoflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",93,[[["vmoinfoflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",93,[[["vmoinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",93,[[["vmoinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",93,[[["vmoinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",93,[[["vmoinfoflags",3]]]],[6,"PhysAddr","","Physical Address",null,null],[6,"VirtAddr","","Virtual Address",null,null],[6,"DevVAddr","","Device Address",null,null],[17,"KERNEL_ASPACE_BASE","","The base of kernel address space In x86 fuchsia this is…",null,null],[17,"KERNEL_ASPACE_SIZE","","The size of kernel address space",null,null],[17,"USER_ASPACE_BASE","","The base of user address space",null,null],[17,"USER_ASPACE_SIZE","","The size of user address space",null,null],[17,"PAGE_SIZE","","Size of a page",null,null],[17,"PAGE_SIZE_LOG2","","log2(PAGE_SIZE)",null,null],[8,"VMObjectTrait","","Virtual Memory Object Trait",null,null],[10,"read","","Read memory to `buf` from VMO at `offset`.",94,[[],["zxresult",6]]],[10,"write","","Write memory from `buf` to VMO at `offset`.",94,[[],["zxresult",6]]],[10,"len","","Get the length of VMO.",94,[[]]],[10,"set_len","","Set the length of VMO.",94,[[],["zxresult",6]]],[10,"content_size","","Get the size of the content stored in the VMO in bytes.",94,[[]]],[10,"set_content_size","","Set the size of the content stored in the VMO in bytes.",94,[[],["zxresult",6]]],[10,"commit_page","","Commit a page.",94,[[["mmuflags",3]],[["zxresult",6],["physaddr",6]]]],[10,"commit_pages_with","","Commit pages with an external function f. the vmo is…",94,[[["fnmut",8]],["zxresult",6]]],[10,"commit","","Commit allocating physical memory.",94,[[],["zxresult",6]]],[10,"decommit","","Decommit allocated physical memory.",94,[[],["zxresult",6]]],[10,"create_child","","Create a child VMO.",94,[[["koid",6]],[["zxresult",6],["arc",3]]]],[10,"append_mapping","","Append a mapping to the VMO\'s mapping list.",94,[[["weak",3],["vmmapping",3]]]],[10,"remove_mapping","","Remove a mapping from the VMO\'s mapping list.",94,[[["weak",3],["vmmapping",3]]]],[10,"complete_info","","Complete the VmoInfo.",94,[[["vmoinfo",3]]]],[10,"cache_policy","","Get the cache policy.",94,[[],["cachepolicy",4]]],[10,"set_cache_policy","","Set the cache policy.",94,[[["cachepolicy",4]],["zxresult",6]]],[10,"share_count","","Returns an estimate of the number of unique VmAspaces that…",94,[[]]],[10,"committed_pages_in_range","","Count committed pages of the VMO.",94,[[]]],[11,"pin","","Pin the given range of the VMO.",94,[[],["zxresult",6]]],[11,"unpin","","Unpin the given range of the VMO.",94,[[],["zxresult",6]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous range…",94,[[]]],[11,"is_paged","","Returns true if the object is backed by RAM.",94,[[]]],[10,"zero","","Resets the range of bytes in the VMO from `offset` to…",94,[[],["zxresult",6]]],[6,"ZxResult","zircon_object","The type returned by kernel objects methods.",null,null],[14,"impl_kobject","","Macro to auto implement `KernelObject` trait.",null,null],[14,"define_count_helper","","Define a pair of kcounter (create, destroy), and a helper…",null,null],[14,"kcounter","","Define a new KCounter.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::debuglog","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::dev","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"into_any","","",10,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"into_any","","",11,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"into_any","","",13,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"into_any","","",3,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_any","","",96,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_any","","",97,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"into_any_arc","","",97,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"into_any","","",18,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"into_any","","",5,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"into_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::dev::pci_init_args","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"into_any","","",99,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::hypervisor","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"into_any","","",23,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::ipc","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_any","","",30,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_any","","",33,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::object","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"into_any","","",35,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_any","","",101,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"into_any","","",38,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"into_any","","",39,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::signal","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"into_any","","",43,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"into_any","","",44,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"into_any","","",45,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"into_any","","",46,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"into_any","","",102,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"into_any","","",103,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"into_any","","",47,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"into_any","","",48,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"into_any","","",49,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any","","",57,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"into_any","","",58,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_any","","",104,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"into_any_arc","","",104,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"into_any","","",105,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"into_any_arc","","",105,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"into_any","","",50,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"into_any","","",51,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"into_any","","",52,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"into_any","","",53,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::task","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_any","","",69,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any_arc","","",69,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"into_any","","",106,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_any","","",70,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any_arc","","",71,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_any","","",107,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"into_any_arc","","",107,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"into_any","","",72,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"into_any","","",60,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"into_any","","",108,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"into_any_arc","","",108,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_any","","",73,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any_arc","","",73,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_any","","",76,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"into_any","","",75,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"into_any","","",109,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"into_any","","",62,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"into_any","","",63,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"into_any","","",64,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"into_any","","",65,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"into_any","","",66,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"into_any","","",67,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"into_any","","",68,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::util::kcounter","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_any","","",84,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any_arc","","",84,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_any","","",82,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_any","","",83,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","zircon_object::vm","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"into_any","","",85,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any_arc","","",85,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"into_any","","",110,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_any","","",111,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"into_any","","",89,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_any","","",90,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"into_any_arc","","",90,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"into_any","","",112,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_any","","",113,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_any","","",92,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_any","","",86,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"into_any","","",93,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"into_any_arc","","",93,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"into_any","","",114,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"into_any_arc","","",114,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["arc",3],["any",8]]]],[11,"clone","","",110,[[],["mmuflags",3]]],[11,"clone","","",85,[[],["cachepolicy",4]]],[11,"extend","","",110,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",110,[[["mmuflags",3]],["mmuflags",3]]],[11,"try_from","","",85,[[],[["result",4],["cachepolicy",4]]]],[11,"cmp","","",110,[[["mmuflags",3]],["ordering",4]]],[11,"not","","Returns the complement of this set of flags.",110,[[],["mmuflags",3]]],[11,"eq","","",110,[[["mmuflags",3]]]],[11,"ne","","",110,[[["mmuflags",3]]]],[11,"eq","","",85,[[["cachepolicy",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",110,[[["mmuflags",3]],["mmuflags",3]]],[11,"fmt","","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",110,[[["mmuflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",110,[[["mmuflags",3]]]],[11,"le","","",110,[[["mmuflags",3]]]],[11,"gt","","",110,[[["mmuflags",3]]]],[11,"ge","","",110,[[["mmuflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",110,[[["mmuflags",3]]]],[11,"hash","","",110,[[]]],[11,"bitor_assign","","Adds the set of flags.",110,[[["mmuflags",3]]]],[11,"bitor","","Returns the union of the two sets of flags.",110,[[["mmuflags",3]],["mmuflags",3]]],[11,"from_iter","","",110,[[],["mmuflags",3]]],[11,"fmt","","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",110,[[["mmuflags",3]]]],[11,"fmt","","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",110,[[["mmuflags",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",110,[[["mmuflags",3]],["mmuflags",3]]],[11,"clone","zircon_object::hypervisor","",23,[[],["trapkind",4]]],[11,"try_from","","",25,[[],[["vcpureadwritekind",4],["result",4]]]],[11,"try_from","","",23,[[],[["result",4],["trapkind",4],["rvmerror",4]]]],[11,"eq","","",23,[[["trapkind",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",26,[[],["vcpustate",3]]],[11,"id","zircon_object::debuglog","",2,[[],["koid",6]]],[11,"type_name","","",2,[[]]],[11,"name","","",2,[[],["string",3]]],[11,"set_name","","",2,[[]]],[11,"signal","","",2,[[],["signal",3]]],[11,"signal_set","","",2,[[["signal",3]]]],[11,"signal_clear","","",2,[[["signal",3]]]],[11,"signal_change","","",2,[[["signal",3]]]],[11,"add_signal_callback","","",2,[[["signalhandler",6]]]],[11,"id","zircon_object::dev","",8,[[],["koid",6]]],[11,"type_name","","",8,[[]]],[11,"name","","",8,[[],["string",3]]],[11,"set_name","","",8,[[]]],[11,"signal","","",8,[[],["signal",3]]],[11,"signal_set","","",8,[[["signal",3]]]],[11,"signal_clear","","",8,[[["signal",3]]]],[11,"signal_change","","",8,[[["signal",3]]]],[11,"add_signal_callback","","",8,[[["signalhandler",6]]]],[11,"id","","",9,[[],["koid",6]]],[11,"type_name","","",9,[[]]],[11,"name","","",9,[[],["string",3]]],[11,"set_name","","",9,[[]]],[11,"signal","","",9,[[],["signal",3]]],[11,"signal_set","","",9,[[["signal",3]]]],[11,"signal_clear","","",9,[[["signal",3]]]],[11,"signal_change","","",9,[[["signal",3]]]],[11,"add_signal_callback","","",9,[[["signalhandler",6]]]],[11,"id","","",12,[[],["koid",6]]],[11,"type_name","","",12,[[]]],[11,"name","","",12,[[],["string",3]]],[11,"set_name","","",12,[[]]],[11,"signal","","",12,[[],["signal",3]]],[11,"signal_set","","",12,[[["signal",3]]]],[11,"signal_clear","","",12,[[["signal",3]]]],[11,"signal_change","","",12,[[["signal",3]]]],[11,"add_signal_callback","","",12,[[["signalhandler",6]]]],[11,"id","","",16,[[],["koid",6]]],[11,"type_name","","",16,[[]]],[11,"name","","",16,[[],["string",3]]],[11,"set_name","","",16,[[]]],[11,"signal","","",16,[[],["signal",3]]],[11,"signal_set","","",16,[[["signal",3]]]],[11,"signal_clear","","",16,[[["signal",3]]]],[11,"signal_change","","",16,[[["signal",3]]]],[11,"add_signal_callback","","",16,[[["signalhandler",6]]]],[11,"id","","",17,[[],["koid",6]]],[11,"type_name","","",17,[[]]],[11,"name","","",17,[[],["string",3]]],[11,"set_name","","",17,[[]]],[11,"signal","","",17,[[],["signal",3]]],[11,"signal_set","","",17,[[["signal",3]]]],[11,"signal_clear","","",17,[[["signal",3]]]],[11,"signal_change","","",17,[[["signal",3]]]],[11,"add_signal_callback","","",17,[[["signalhandler",6]]]],[11,"id","","",19,[[],["koid",6]]],[11,"type_name","","",19,[[]]],[11,"name","","",19,[[],["string",3]]],[11,"set_name","","",19,[[]]],[11,"signal","","",19,[[],["signal",3]]],[11,"signal_set","","",19,[[["signal",3]]]],[11,"signal_clear","","",19,[[["signal",3]]]],[11,"signal_change","","",19,[[["signal",3]]]],[11,"add_signal_callback","","",19,[[["signalhandler",6]]]],[11,"id","zircon_object::hypervisor","",27,[[],["koid",6]]],[11,"type_name","","",27,[[]]],[11,"name","","",27,[[],["string",3]]],[11,"set_name","","",27,[[]]],[11,"signal","","",27,[[],["signal",3]]],[11,"signal_set","","",27,[[["signal",3]]]],[11,"signal_clear","","",27,[[["signal",3]]]],[11,"signal_change","","",27,[[["signal",3]]]],[11,"add_signal_callback","","",27,[[["signalhandler",6]]]],[11,"id","","",28,[[],["koid",6]]],[11,"type_name","","",28,[[]]],[11,"name","","",28,[[],["string",3]]],[11,"set_name","","",28,[[]]],[11,"signal","","",28,[[],["signal",3]]],[11,"signal_set","","",28,[[["signal",3]]]],[11,"signal_clear","","",28,[[["signal",3]]]],[11,"signal_change","","",28,[[["signal",3]]]],[11,"add_signal_callback","","",28,[[["signalhandler",6]]]],[11,"id","zircon_object::ipc","",31,[[],["koid",6]]],[11,"type_name","","",31,[[]]],[11,"name","","",31,[[],["string",3]]],[11,"set_name","","",31,[[]]],[11,"signal","","",31,[[],["signal",3]]],[11,"signal_set","","",31,[[["signal",3]]]],[11,"signal_clear","","",31,[[["signal",3]]]],[11,"signal_change","","",31,[[["signal",3]]]],[11,"add_signal_callback","","",31,[[["signalhandler",6]]]],[11,"peer","","",31,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",31,[[],["koid",6]]],[11,"id","","",32,[[],["koid",6]]],[11,"type_name","","",32,[[]]],[11,"name","","",32,[[],["string",3]]],[11,"set_name","","",32,[[]]],[11,"signal","","",32,[[],["signal",3]]],[11,"signal_set","","",32,[[["signal",3]]]],[11,"signal_clear","","",32,[[["signal",3]]]],[11,"signal_change","","",32,[[["signal",3]]]],[11,"add_signal_callback","","",32,[[["signalhandler",6]]]],[11,"peer","","",32,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",32,[[],["koid",6]]],[11,"id","","",34,[[],["koid",6]]],[11,"type_name","","",34,[[]]],[11,"name","","",34,[[],["string",3]]],[11,"set_name","","",34,[[]]],[11,"signal","","",34,[[],["signal",3]]],[11,"signal_set","","",34,[[["signal",3]]]],[11,"signal_clear","","",34,[[["signal",3]]]],[11,"signal_change","","",34,[[["signal",3]]]],[11,"add_signal_callback","","",34,[[["signalhandler",6]]]],[11,"peer","","",34,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",34,[[],["koid",6]]],[11,"id","zircon_object::object","",41,[[],["koid",6]]],[11,"type_name","","",41,[[]]],[11,"name","","",41,[[],["string",3]]],[11,"set_name","","",41,[[]]],[11,"signal","","",41,[[],["signal",3]]],[11,"signal_set","","",41,[[["signal",3]]]],[11,"signal_clear","","",41,[[["signal",3]]]],[11,"signal_change","","",41,[[["signal",3]]]],[11,"add_signal_callback","","",41,[[["signalhandler",6]]]],[11,"id","zircon_object::signal","",54,[[],["koid",6]]],[11,"type_name","","",54,[[]]],[11,"name","","",54,[[],["string",3]]],[11,"set_name","","",54,[[]]],[11,"signal","","",54,[[],["signal",3]]],[11,"signal_set","","",54,[[["signal",3]]]],[11,"signal_clear","","",54,[[["signal",3]]]],[11,"signal_change","","",54,[[["signal",3]]]],[11,"add_signal_callback","","",54,[[["signalhandler",6]]]],[11,"allowed_signals","","",54,[[],["signal",3]]],[11,"id","","",55,[[],["koid",6]]],[11,"type_name","","",55,[[]]],[11,"name","","",55,[[],["string",3]]],[11,"set_name","","",55,[[]]],[11,"signal","","",55,[[],["signal",3]]],[11,"signal_set","","",55,[[["signal",3]]]],[11,"signal_clear","","",55,[[["signal",3]]]],[11,"signal_change","","",55,[[["signal",3]]]],[11,"add_signal_callback","","",55,[[["signalhandler",6]]]],[11,"allowed_signals","","",55,[[],["signal",3]]],[11,"peer","","",55,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",55,[[],["koid",6]]],[11,"id","","",56,[[],["koid",6]]],[11,"type_name","","",56,[[]]],[11,"name","","",56,[[],["string",3]]],[11,"set_name","","",56,[[]]],[11,"signal","","",56,[[],["signal",3]]],[11,"signal_set","","",56,[[["signal",3]]]],[11,"signal_clear","","",56,[[["signal",3]]]],[11,"signal_change","","",56,[[["signal",3]]]],[11,"add_signal_callback","","",56,[[["signalhandler",6]]]],[11,"id","","",57,[[],["koid",6]]],[11,"type_name","","",57,[[]]],[11,"name","","",57,[[],["string",3]]],[11,"set_name","","",57,[[]]],[11,"signal","","",57,[[],["signal",3]]],[11,"signal_set","","",57,[[["signal",3]]]],[11,"signal_clear","","",57,[[["signal",3]]]],[11,"signal_change","","",57,[[["signal",3]]]],[11,"add_signal_callback","","",57,[[["signalhandler",6]]]],[11,"id","","",59,[[],["koid",6]]],[11,"type_name","","",59,[[]]],[11,"name","","",59,[[],["string",3]]],[11,"set_name","","",59,[[]]],[11,"signal","","",59,[[],["signal",3]]],[11,"signal_set","","",59,[[["signal",3]]]],[11,"signal_clear","","",59,[[["signal",3]]]],[11,"signal_change","","",59,[[["signal",3]]]],[11,"add_signal_callback","","",59,[[["signalhandler",6]]]],[11,"id","zircon_object::task","",70,[[],["koid",6]]],[11,"type_name","","",70,[[]]],[11,"name","","",70,[[],["string",3]]],[11,"set_name","","",70,[[]]],[11,"signal","","",70,[[],["signal",3]]],[11,"signal_set","","",70,[[["signal",3]]]],[11,"signal_clear","","",70,[[["signal",3]]]],[11,"signal_change","","",70,[[["signal",3]]]],[11,"add_signal_callback","","",70,[[["signalhandler",6]]]],[11,"id","","",71,[[],["koid",6]]],[11,"type_name","","",71,[[]]],[11,"name","","",71,[[],["string",3]]],[11,"set_name","","",71,[[]]],[11,"signal","","",71,[[],["signal",3]]],[11,"signal_set","","",71,[[["signal",3]]]],[11,"signal_clear","","",71,[[["signal",3]]]],[11,"signal_change","","",71,[[["signal",3]]]],[11,"add_signal_callback","","",71,[[["signalhandler",6]]]],[11,"get_child","","",71,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",71,[[],["koid",6]]],[11,"id","","",73,[[],["koid",6]]],[11,"type_name","","",73,[[]]],[11,"name","","",73,[[],["string",3]]],[11,"set_name","","",73,[[]]],[11,"signal","","",73,[[],["signal",3]]],[11,"signal_set","","",73,[[["signal",3]]]],[11,"signal_clear","","",73,[[["signal",3]]]],[11,"signal_change","","",73,[[["signal",3]]]],[11,"add_signal_callback","","",73,[[["signalhandler",6]]]],[11,"get_child","","",73,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",73,[[],["koid",6]]],[11,"id","","",74,[[],["koid",6]]],[11,"type_name","","",74,[[]]],[11,"name","","",74,[[],["string",3]]],[11,"set_name","","",74,[[]]],[11,"signal","","",74,[[],["signal",3]]],[11,"signal_set","","",74,[[["signal",3]]]],[11,"signal_clear","","",74,[[["signal",3]]]],[11,"signal_change","","",74,[[["signal",3]]]],[11,"add_signal_callback","","",74,[[["signalhandler",6]]]],[11,"id","","",76,[[],["koid",6]]],[11,"type_name","","",76,[[]]],[11,"name","","",76,[[],["string",3]]],[11,"set_name","","",76,[[]]],[11,"signal","","",76,[[],["signal",3]]],[11,"signal_set","","",76,[[["signal",3]]]],[11,"signal_clear","","",76,[[["signal",3]]]],[11,"signal_change","","",76,[[["signal",3]]]],[11,"add_signal_callback","","",76,[[["signalhandler",6]]]],[11,"related_koid","","",76,[[],["koid",6]]],[11,"id","zircon_object::vm","",88,[[],["koid",6]]],[11,"type_name","","",88,[[]]],[11,"name","","",88,[[],["string",3]]],[11,"set_name","","",88,[[]]],[11,"signal","","",88,[[],["signal",3]]],[11,"signal_set","","",88,[[["signal",3]]]],[11,"signal_clear","","",88,[[["signal",3]]]],[11,"signal_change","","",88,[[["signal",3]]]],[11,"add_signal_callback","","",88,[[["signalhandler",6]]]],[11,"id","","",90,[[],["koid",6]]],[11,"type_name","","",90,[[]]],[11,"name","","",90,[[],["string",3]]],[11,"set_name","","",90,[[]]],[11,"signal","","",90,[[],["signal",3]]],[11,"signal_set","","",90,[[["signal",3]]]],[11,"signal_clear","","",90,[[["signal",3]]]],[11,"signal_change","","",90,[[["signal",3]]]],[11,"add_signal_callback","","",90,[[["signalhandler",6]]]],[11,"id","","",92,[[],["koid",6]]],[11,"type_name","","",92,[[]]],[11,"name","","",92,[[],["string",3]]],[11,"set_name","","",92,[[]]],[11,"signal","","",92,[[],["signal",3]]],[11,"signal_set","","",92,[[["signal",3]]]],[11,"signal_clear","","",92,[[["signal",3]]]],[11,"signal_change","","",92,[[["signal",3]]]],[11,"add_signal_callback","","",92,[[["signalhandler",6]]]],[11,"into_result","zircon_object","",115,[[],["zxresult",6]]],[11,"kill","zircon_object::task","Kill the job. The job do not terminate immediately when…",71,[[]]],[11,"suspend","","",71,[[]]],[11,"resume","","",71,[[]]],[11,"exceptionate","","",71,[[],[["arc",3],["exceptionate",3]]]],[11,"debug_exceptionate","","",71,[[],[["arc",3],["exceptionate",3]]]],[11,"kill","","",73,[[]]],[11,"suspend","","",73,[[]]],[11,"resume","","",73,[[]]],[11,"exceptionate","","",73,[[],[["arc",3],["exceptionate",3]]]],[11,"debug_exceptionate","","",73,[[],[["arc",3],["exceptionate",3]]]],[11,"kill","","",76,[[]]],[11,"suspend","","",76,[[]]],[11,"resume","","",76,[[]]],[11,"exceptionate","","",76,[[],[["arc",3],["exceptionate",3]]]],[11,"debug_exceptionate","","",76,[[],[["arc",3],["exceptionate",3]]]],[11,"load_from_elf","zircon_object::vm","",90,[[["elffile",3]],[["zxresult",6],["arc",3]]]],[11,"map_from_elf","","",90,[[["arc",3],["elffile",3],["vmobject",3]],["zxresult",6]]],[11,"deref","zircon_object::task","",77,[[]]],[11,"deref","zircon_object::vm","",92,[[]]],[11,"deref","","",114,[[],["arc",3]]],[11,"from","zircon_object","",0,[[["error",4]]]],[11,"from","zircon_object::signal","",44,[[["bellpacket",3]]]],[11,"from","","",46,[[["iopacket",3]]]],[11,"from","","",45,[[["mmiopacket",3]]]],[11,"from","zircon_object","",0,[[["rvmerror",4]]]],[11,"from","zircon_object::signal","",42,[[["portpacketrepr",3]]]],[11,"from","","",49,[[["portpacket",3]]]],[11,"fmt","zircon_object::debuglog","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev::pci_init_args","",22,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object","",0,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::hypervisor","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::ipc","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::signal","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",71,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::util::kcounter","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object::vm","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"sub","zircon_object::dev","Returns the set difference of the two sets of flags.",10,[[["interruptflags",3]],["interruptflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["iommuperms",3]],["iommuperms",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["resourceflags",3]],["resourceflags",3]]],[11,"sub","zircon_object::ipc","Returns the set difference of the two sets of flags.",33,[[["socketflags",3]],["socketflags",3]]],[11,"sub","zircon_object::object","Returns the set difference of the two sets of flags.",38,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",39,[[["signal",3]],["signal",3]]],[11,"sub","zircon_object::signal","Returns the set difference of the two sets of flags.",58,[[["portoptions",3]],["portoptions",3]]],[11,"sub","zircon_object::task","Returns the set difference of the two sets of flags.",75,[[["threadflag",3]],["threadflag",3]]],[11,"sub","zircon_object::vm","Returns the set difference of the two sets of flags.",89,[[["vmarflags",3]],["vmarflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",93,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"eq","zircon_object::dev","",10,[[["interruptflags",3]]]],[11,"ne","","",10,[[["interruptflags",3]]]],[11,"eq","","",11,[[["interruptoptions",3]]]],[11,"ne","","",11,[[["interruptoptions",3]]]],[11,"eq","","",13,[[["iommuperms",3]]]],[11,"ne","","",13,[[["iommuperms",3]]]],[11,"eq","","",5,[[["pcieirqmode",4]]]],[11,"eq","","",6,[[["pciaddrspace",4]]]],[11,"eq","","",7,[[["resourcekind",4]]]],[11,"eq","","",18,[[["resourceflags",3]]]],[11,"ne","","",18,[[["resourceflags",3]]]],[11,"eq","zircon_object","",0,[[["zxerror",4]]]],[11,"eq","zircon_object::ipc","",33,[[["socketflags",3]]]],[11,"ne","","",33,[[["socketflags",3]]]],[11,"eq","","",100,[[["socketinfo",3]]]],[11,"ne","","",100,[[["socketinfo",3]]]],[11,"eq","zircon_object::object","",38,[[["rights",3]]]],[11,"ne","","",38,[[["rights",3]]]],[11,"eq","","",39,[[["signal",3]]]],[11,"ne","","",39,[[["signal",3]]]],[11,"eq","zircon_object::signal","",50,[[["packettype",4]]]],[11,"eq","","",43,[[["packetsignal",3]]]],[11,"ne","","",43,[[["packetsignal",3]]]],[11,"eq","","",44,[[["packetguestbell",3]]]],[11,"ne","","",44,[[["packetguestbell",3]]]],[11,"eq","","",45,[[["packetguestmem",3]]]],[11,"ne","","",45,[[["packetguestmem",3]]]],[11,"eq","","",46,[[["packetguestio",3]]]],[11,"ne","","",46,[[["packetguestio",3]]]],[11,"eq","","",51,[[["packetguestvcputype",4]]]],[11,"eq","","",102,[[["packetguestvcpuinterrupt",3]]]],[11,"ne","","",102,[[["packetguestvcpuinterrupt",3]]]],[11,"eq","","",103,[[["packetguestvcpustartup",3]]]],[11,"ne","","",103,[[["packetguestvcpustartup",3]]]],[11,"eq","","",48,[[["packetinterrupt",3]]]],[11,"ne","","",48,[[["packetinterrupt",3]]]],[11,"eq","","",49,[[["portpacketrepr",3]]]],[11,"ne","","",49,[[["portpacketrepr",3]]]],[11,"eq","","",52,[[["payloadrepr",4]]]],[11,"ne","","",52,[[["payloadrepr",4]]]],[11,"eq","","",47,[[]]],[11,"eq","","",58,[[["portoptions",3]]]],[11,"ne","","",58,[[["portoptions",3]]]],[11,"eq","zircon_object::task","",62,[[["exceptiontype",4]]]],[11,"eq","","",65,[[["policyaction",4]]]],[11,"eq","","",66,[[["status",4]]]],[11,"ne","","",66,[[["status",4]]]],[11,"eq","","",75,[[["threadflag",3]]]],[11,"ne","","",75,[[["threadflag",3]]]],[11,"eq","","",68,[[["threadstate",4]]]],[11,"eq","zircon_object::vm","",89,[[["vmarflags",3]]]],[11,"ne","","",89,[[["vmarflags",3]]]],[11,"eq","","",93,[[["vmoinfoflags",3]]]],[11,"ne","","",93,[[["vmoinfoflags",3]]]],[11,"cmp","zircon_object::dev","",10,[[["interruptflags",3]],["ordering",4]]],[11,"cmp","","",11,[[["interruptoptions",3]],["ordering",4]]],[11,"cmp","","",13,[[["iommuperms",3]],["ordering",4]]],[11,"cmp","","",18,[[["resourceflags",3]],["ordering",4]]],[11,"cmp","zircon_object::ipc","",33,[[["socketflags",3]],["ordering",4]]],[11,"cmp","zircon_object::object","",38,[[["rights",3]],["ordering",4]]],[11,"cmp","","",39,[[["signal",3]],["ordering",4]]],[11,"cmp","zircon_object::signal","",58,[[["portoptions",3]],["ordering",4]]],[11,"cmp","zircon_object::task","",75,[[["threadflag",3]],["ordering",4]]],[11,"cmp","zircon_object::vm","",89,[[["vmarflags",3]],["ordering",4]]],[11,"cmp","","",93,[[["vmoinfoflags",3]],["ordering",4]]],[11,"partial_cmp","zircon_object::dev","",10,[[["interruptflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["interruptflags",3]]]],[11,"le","","",10,[[["interruptflags",3]]]],[11,"gt","","",10,[[["interruptflags",3]]]],[11,"ge","","",10,[[["interruptflags",3]]]],[11,"partial_cmp","","",11,[[["interruptoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["interruptoptions",3]]]],[11,"le","","",11,[[["interruptoptions",3]]]],[11,"gt","","",11,[[["interruptoptions",3]]]],[11,"ge","","",11,[[["interruptoptions",3]]]],[11,"partial_cmp","","",13,[[["iommuperms",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["iommuperms",3]]]],[11,"le","","",13,[[["iommuperms",3]]]],[11,"gt","","",13,[[["iommuperms",3]]]],[11,"ge","","",13,[[["iommuperms",3]]]],[11,"partial_cmp","","",18,[[["resourceflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["resourceflags",3]]]],[11,"le","","",18,[[["resourceflags",3]]]],[11,"gt","","",18,[[["resourceflags",3]]]],[11,"ge","","",18,[[["resourceflags",3]]]],[11,"partial_cmp","zircon_object::ipc","",33,[[["socketflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["socketflags",3]]]],[11,"le","","",33,[[["socketflags",3]]]],[11,"gt","","",33,[[["socketflags",3]]]],[11,"ge","","",33,[[["socketflags",3]]]],[11,"partial_cmp","zircon_object::object","",38,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["rights",3]]]],[11,"le","","",38,[[["rights",3]]]],[11,"gt","","",38,[[["rights",3]]]],[11,"ge","","",38,[[["rights",3]]]],[11,"partial_cmp","","",39,[[["signal",3]],[["ordering",4],["option",4]]]],[11,"lt","","",39,[[["signal",3]]]],[11,"le","","",39,[[["signal",3]]]],[11,"gt","","",39,[[["signal",3]]]],[11,"ge","","",39,[[["signal",3]]]],[11,"partial_cmp","zircon_object::signal","",58,[[["portoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",58,[[["portoptions",3]]]],[11,"le","","",58,[[["portoptions",3]]]],[11,"gt","","",58,[[["portoptions",3]]]],[11,"ge","","",58,[[["portoptions",3]]]],[11,"partial_cmp","zircon_object::task","",75,[[["threadflag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",75,[[["threadflag",3]]]],[11,"le","","",75,[[["threadflag",3]]]],[11,"gt","","",75,[[["threadflag",3]]]],[11,"ge","","",75,[[["threadflag",3]]]],[11,"partial_cmp","zircon_object::vm","",89,[[["vmarflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",89,[[["vmarflags",3]]]],[11,"le","","",89,[[["vmarflags",3]]]],[11,"gt","","",89,[[["vmarflags",3]]]],[11,"ge","","",89,[[["vmarflags",3]]]],[11,"partial_cmp","","",93,[[["vmoinfoflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",93,[[["vmoinfoflags",3]]]],[11,"le","","",93,[[["vmoinfoflags",3]]]],[11,"gt","","",93,[[["vmoinfoflags",3]]]],[11,"ge","","",93,[[["vmoinfoflags",3]]]],[11,"sub_assign","zircon_object::dev","Disables all flags enabled in the set.",10,[[["interruptflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[["interruptoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["iommuperms",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["resourceflags",3]]]],[11,"sub_assign","zircon_object::ipc","Disables all flags enabled in the set.",33,[[["socketflags",3]]]],[11,"sub_assign","zircon_object::object","Disables all flags enabled in the set.",38,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",39,[[["signal",3]]]],[11,"sub_assign","zircon_object::signal","Disables all flags enabled in the set.",58,[[["portoptions",3]]]],[11,"sub_assign","zircon_object::task","Disables all flags enabled in the set.",75,[[["threadflag",3]]]],[11,"sub_assign","zircon_object::vm","Disables all flags enabled in the set.",89,[[["vmarflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",93,[[["vmoinfoflags",3]]]],[11,"not","zircon_object::dev","Returns the complement of this set of flags.",10,[[],["interruptflags",3]]],[11,"not","","Returns the complement of this set of flags.",11,[[],["interruptoptions",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["iommuperms",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["resourceflags",3]]],[11,"not","zircon_object::ipc","Returns the complement of this set of flags.",33,[[],["socketflags",3]]],[11,"not","zircon_object::object","Returns the complement of this set of flags.",38,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",39,[[],["signal",3]]],[11,"not","zircon_object::signal","Returns the complement of this set of flags.",58,[[],["portoptions",3]]],[11,"not","zircon_object::task","Returns the complement of this set of flags.",75,[[],["threadflag",3]]],[11,"not","zircon_object::vm","Returns the complement of this set of flags.",89,[[],["vmarflags",3]]],[11,"not","","Returns the complement of this set of flags.",93,[[],["vmoinfoflags",3]]],[11,"bitand","zircon_object::dev","Returns the intersection between the two sets of flags.",10,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitand","zircon_object::ipc","Returns the intersection between the two sets of flags.",33,[[["socketflags",3]],["socketflags",3]]],[11,"bitand","zircon_object::object","Returns the intersection between the two sets of flags.",38,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",39,[[["signal",3]],["signal",3]]],[11,"bitand","zircon_object::signal","Returns the intersection between the two sets of flags.",58,[[["portoptions",3]],["portoptions",3]]],[11,"bitand","zircon_object::task","Returns the intersection between the two sets of flags.",75,[[["threadflag",3]],["threadflag",3]]],[11,"bitand","zircon_object::vm","Returns the intersection between the two sets of flags.",89,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",93,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitor","zircon_object::dev","Returns the union of the two sets of flags.",10,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitor","zircon_object::ipc","Returns the union of the two sets of flags.",33,[[["socketflags",3]],["socketflags",3]]],[11,"bitor","zircon_object::object","Returns the union of the two sets of flags.",38,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",39,[[["signal",3]],["signal",3]]],[11,"bitor","zircon_object::signal","Returns the union of the two sets of flags.",58,[[["portoptions",3]],["portoptions",3]]],[11,"bitor","zircon_object::task","Returns the union of the two sets of flags.",75,[[["threadflag",3]],["threadflag",3]]],[11,"bitor","zircon_object::vm","Returns the union of the two sets of flags.",89,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",93,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitxor","zircon_object::dev","Returns the left flags, but with all the right flags…",10,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",11,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",18,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitxor","zircon_object::ipc","Returns the left flags, but with all the right flags…",33,[[["socketflags",3]],["socketflags",3]]],[11,"bitxor","zircon_object::object","Returns the left flags, but with all the right flags…",38,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",39,[[["signal",3]],["signal",3]]],[11,"bitxor","zircon_object::signal","Returns the left flags, but with all the right flags…",58,[[["portoptions",3]],["portoptions",3]]],[11,"bitxor","zircon_object::task","Returns the left flags, but with all the right flags…",75,[[["threadflag",3]],["threadflag",3]]],[11,"bitxor","zircon_object::vm","Returns the left flags, but with all the right flags…",89,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",93,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitand_assign","zircon_object::dev","Disables all flags disabled in the set.",10,[[["interruptflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[["interruptoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["iommuperms",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["resourceflags",3]]]],[11,"bitand_assign","zircon_object::ipc","Disables all flags disabled in the set.",33,[[["socketflags",3]]]],[11,"bitand_assign","zircon_object::object","Disables all flags disabled in the set.",38,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",39,[[["signal",3]]]],[11,"bitand_assign","zircon_object::signal","Disables all flags disabled in the set.",58,[[["portoptions",3]]]],[11,"bitand_assign","zircon_object::task","Disables all flags disabled in the set.",75,[[["threadflag",3]]]],[11,"bitand_assign","zircon_object::vm","Disables all flags disabled in the set.",89,[[["vmarflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",93,[[["vmoinfoflags",3]]]],[11,"bitor_assign","zircon_object::dev","Adds the set of flags.",10,[[["interruptflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",11,[[["interruptoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["iommuperms",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["resourceflags",3]]]],[11,"bitor_assign","zircon_object::ipc","Adds the set of flags.",33,[[["socketflags",3]]]],[11,"bitor_assign","zircon_object::object","Adds the set of flags.",38,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",39,[[["signal",3]]]],[11,"bitor_assign","zircon_object::signal","Adds the set of flags.",58,[[["portoptions",3]]]],[11,"bitor_assign","zircon_object::task","Adds the set of flags.",75,[[["threadflag",3]]]],[11,"bitor_assign","zircon_object::vm","Adds the set of flags.",89,[[["vmarflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",93,[[["vmoinfoflags",3]]]],[11,"bitxor_assign","zircon_object::dev","Toggles the set of flags.",10,[[["interruptflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[["interruptoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["iommuperms",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["resourceflags",3]]]],[11,"bitxor_assign","zircon_object::ipc","Toggles the set of flags.",33,[[["socketflags",3]]]],[11,"bitxor_assign","zircon_object::object","Toggles the set of flags.",38,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",39,[[["signal",3]]]],[11,"bitxor_assign","zircon_object::signal","Toggles the set of flags.",58,[[["portoptions",3]]]],[11,"bitxor_assign","zircon_object::task","Toggles the set of flags.",75,[[["threadflag",3]]]],[11,"bitxor_assign","zircon_object::vm","Toggles the set of flags.",89,[[["vmarflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",93,[[["vmoinfoflags",3]]]],[11,"drop","zircon_object::dev","",9,[[]]],[11,"drop","","",17,[[]]],[11,"drop","zircon_object::hypervisor","",28,[[]]],[11,"drop","zircon_object::ipc","",31,[[]]],[11,"drop","","",32,[[]]],[11,"drop","","",34,[[]]],[11,"drop","zircon_object::signal","",55,[[]]],[11,"drop","zircon_object::task","",70,[[]]],[11,"drop","","",71,[[]]],[11,"drop","","",74,[[]]],[11,"drop","","Terminate the current running thread.",77,[[]]],[11,"drop","zircon_object::vm","",91,[[]]],[11,"drop","","",92,[[]]],[11,"hash","zircon_object::dev","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",18,[[]]],[11,"hash","zircon_object::ipc","",33,[[]]],[11,"hash","zircon_object::object","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","zircon_object::signal","",58,[[]]],[11,"hash","zircon_object::task","",75,[[]]],[11,"hash","zircon_object::vm","",89,[[]]],[11,"hash","","",93,[[]]],[11,"try_from","zircon_object::dev","",5,[[],["result",4]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_from","zircon_object::object","",38,[[],["zxresult",6]]],[11,"try_from","zircon_object::task","",67,[[],["result",4]]],[11,"try_from","zircon_object::vm","",87,[[],["result",4]]],[11,"from_iter","zircon_object::dev","",10,[[["intoiterator",8]],["interruptflags",3]]],[11,"from_iter","","",11,[[["intoiterator",8]],["interruptoptions",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["iommuperms",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["resourceflags",3]]],[11,"from_iter","zircon_object::ipc","",33,[[["intoiterator",8]],["socketflags",3]]],[11,"from_iter","zircon_object::object","",38,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",39,[[["intoiterator",8]],["signal",3]]],[11,"from_iter","zircon_object::signal","",58,[[["intoiterator",8]],["portoptions",3]]],[11,"from_iter","zircon_object::task","",75,[[["intoiterator",8]],["threadflag",3]]],[11,"from_iter","zircon_object::vm","",89,[[["intoiterator",8]],["vmarflags",3]]],[11,"from_iter","","",93,[[["intoiterator",8]],["vmoinfoflags",3]]],[11,"fmt","zircon_object::dev","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",33,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",75,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",33,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",75,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",33,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",75,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",33,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",75,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"extend","zircon_object::dev","",10,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"extend","zircon_object::ipc","",33,[[["intoiterator",8]]]],[11,"extend","zircon_object::object","",38,[[["intoiterator",8]]]],[11,"extend","","",39,[[["intoiterator",8]]]],[11,"extend","zircon_object::signal","",58,[[["intoiterator",8]]]],[11,"extend","zircon_object::task","",75,[[["intoiterator",8]]]],[11,"extend","zircon_object::vm","",89,[[["intoiterator",8]]]],[11,"extend","","",93,[[["intoiterator",8]]]],[11,"clone","zircon_object::dev","",10,[[],["interruptflags",3]]],[11,"clone","","",11,[[],["interruptoptions",3]]],[11,"clone","","",13,[[],["iommuperms",3]]],[11,"clone","","",3,[[],["pciedeviceinfo",3]]],[11,"clone","","",5,[[],["pcieirqmode",4]]],[11,"clone","zircon_object::dev::pci_init_args","",99,[[],["pciirqswizzlelut",3]]],[11,"clone","zircon_object::dev","",7,[[],["resourcekind",4]]],[11,"clone","","",18,[[],["resourceflags",3]]],[11,"clone","zircon_object","",0,[[],["zxerror",4]]],[11,"clone","zircon_object::ipc","",33,[[],["socketflags",3]]],[11,"clone","zircon_object::object","",35,[[],["handle",3]]],[11,"clone","","",38,[[],["rights",3]]],[11,"clone","","",39,[[],["signal",3]]],[11,"clone","zircon_object::signal","",50,[[],["packettype",4]]],[11,"clone","","",43,[[],["packetsignal",3]]],[11,"clone","","",44,[[],["packetguestbell",3]]],[11,"clone","","",45,[[],["packetguestmem",3]]],[11,"clone","","",46,[[],["packetguestio",3]]],[11,"clone","","",51,[[],["packetguestvcputype",4]]],[11,"clone","","",105,[[],["packetguestvcpudata",19]]],[11,"clone","","",102,[[],["packetguestvcpuinterrupt",3]]],[11,"clone","","",103,[[],["packetguestvcpustartup",3]]],[11,"clone","","",47,[[],["packetguestvcpu",3]]],[11,"clone","","",48,[[],["packetinterrupt",3]]],[11,"clone","","",49,[[],["portpacketrepr",3]]],[11,"clone","","",52,[[],["payloadrepr",4]]],[11,"clone","","",58,[[],["portoptions",3]]],[11,"clone","","",53,[[],["slack",4]]],[11,"clone","zircon_object::task","",106,[[],["exceptionreport",3]]],[11,"clone","","",62,[[],["exceptiontype",4]]],[11,"clone","","",72,[[],["jobpolicy",3]]],[11,"clone","","",63,[[],["setpolicyoptions",4]]],[11,"clone","","",60,[[],["basicpolicy",3]]],[11,"clone","","",64,[[],["policycondition",4]]],[11,"clone","","",65,[[],["policyaction",4]]],[11,"clone","","",108,[[],["timerslackpolicy",3]]],[11,"clone","","",66,[[],["status",4]]],[11,"clone","","",67,[[],["threadstatekind",4]]],[11,"clone","","",75,[[],["threadflag",3]]],[11,"clone","","",68,[[],["threadstate",4]]],[11,"clone","zircon_object::vm","",89,[[],["vmarflags",3]]],[11,"clone","","",93,[[],["vmoinfoflags",3]]],[11,"default","zircon_object::dev","",95,[[],["btiinfo",3]]],[11,"default","","",15,[[],["mmiopcieaddressprovider",3]]],[11,"default","","",96,[[],["piopcieaddressprovider",3]]],[11,"default","","",5,[[]]],[11,"default","","",98,[[],["resourceinfo",3]]],[11,"default","zircon_object::ipc","",30,[[],["messagepacket",3]]],[11,"default","","",33,[[],["socketflags",3]]],[11,"default","zircon_object::object","",101,[[],["handlebasicinfo",3]]],[11,"default","","",36,[[],["handleinfo",3]]],[11,"default","","",38,[[],["rights",3]]],[11,"default","","",39,[[],["signal",3]]],[11,"default","","",37,[[]]],[11,"default","zircon_object::signal","",44,[[],["packetguestbell",3]]],[11,"default","","",45,[[],["packetguestmem",3]]],[11,"default","","",46,[[],["packetguestio",3]]],[11,"default","zircon_object::task","",107,[[],["jobinfo",3]]],[11,"default","","",72,[[],["jobpolicy",3]]],[11,"default","","",66,[[]]],[11,"default","","",61,[[],["processinfo",3]]],[11,"default","","",75,[[],["threadflag",3]]],[11,"default","","",68,[[]]],[11,"default","zircon_object::vm","",111,[[],["streaminfo",3]]],[11,"default","","",113,[[],["taskstatsinfo",3]]],[11,"default","","",86,[[],["vmoinfo",3]]],[11,"default","","",93,[[],["vmoinfoflags",3]]],[11,"map","zircon_object::hypervisor","",29,[[["mmuflags",3],["guestphysaddr",6],["hostphysaddr",6]],["result",4]]],[11,"unmap","","",29,[[["guestphysaddr",6]],["result",4]]],[11,"protect","","",29,[[["mmuflags",3],["guestphysaddr",6]],["result",4]]],[11,"query","","",29,[[["guestphysaddr",6]],[["result",4],["hostphysaddr",6]]]],[11,"table_phys","","",29,[[],["hostphysaddr",6]]],[11,"initialize","zircon_object::vm","",114,[[]]],[11,"configure_interrupt","zircon_object::dev::pci_init_args","",21,[[],["zxresult",6]]],[18,"CACHE_1","zircon_object::vm","",110,null],[18,"CACHE_2","","",110,null],[18,"READ","","",110,null],[18,"WRITE","","",110,null],[18,"EXECUTE","","",110,null],[18,"USER","","",110,null],[18,"RXW","","",110,null],[11,"empty","","Returns an empty set of flags",110,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",110,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",110,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",110,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",110,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",110,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",110,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",110,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",110,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",110,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",110,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",110,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",110,[[["mmuflags",3]]]],[11,"pin","","Pin the given range of the VMO.",94,[[],["zxresult",6]]],[11,"unpin","","Unpin the given range of the VMO.",94,[[],["zxresult",6]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous range…",94,[[]]],[11,"is_paged","","Returns true if the object is backed by RAM.",94,[[]]]],"p":[[4,"ZxError"],[4,"Severity"],[3,"DebugLog"],[3,"PcieDeviceInfo"],[3,"PciEcamRegion"],[4,"PcieIrqMode"],[4,"PciAddrSpace"],[4,"ResourceKind"],[3,"BusTransactionInitiator"],[3,"Interrupt"],[3,"InterruptFlags"],[3,"InterruptOptions"],[3,"Iommu"],[3,"IommuPerms"],[3,"PCIeBusDriver"],[3,"MmioPcieAddressProvider"],[3,"PcieDeviceKObject"],[3,"PinnedMemoryToken"],[3,"ResourceFlags"],[3,"Resource"],[3,"PciInitArgsIrqs"],[3,"PciInitArgsHeader"],[3,"PciInitArgsAddrWindows"],[4,"TrapKind"],[3,"VcpuIo"],[4,"VcpuReadWriteKind"],[3,"VcpuState"],[3,"Guest"],[3,"Vcpu"],[3,"VmmPageTable"],[3,"MessagePacket"],[3,"Channel"],[3,"Fifo"],[3,"SocketFlags"],[3,"Socket"],[3,"Handle"],[3,"HandleInfo"],[3,"KObjectBase"],[3,"Rights"],[3,"Signal"],[8,"KernelObject"],[3,"DummyObject"],[3,"PortPacket"],[3,"PacketSignal"],[3,"PacketGuestBell"],[3,"PacketGuestMem"],[3,"PacketGuestIo"],[3,"PacketGuestVcpu"],[3,"PacketInterrupt"],[3,"PortPacketRepr"],[4,"PacketType"],[4,"PacketGuestVcpuType"],[4,"PayloadRepr"],[4,"Slack"],[3,"Event"],[3,"EventPair"],[3,"Futex"],[3,"Port"],[3,"PortOptions"],[3,"Timer"],[3,"BasicPolicy"],[3,"ProcessInfo"],[4,"ExceptionType"],[4,"SetPolicyOptions"],[4,"PolicyCondition"],[4,"PolicyAction"],[4,"Status"],[4,"ThreadStateKind"],[4,"ThreadState"],[3,"Exceptionate"],[3,"ExceptionObject"],[3,"Job"],[3,"JobPolicy"],[3,"Process"],[3,"SuspendToken"],[3,"ThreadFlag"],[3,"Thread"],[3,"CurrentThread"],[8,"IntoResult"],[8,"Task"],[8,"VmarExt"],[8,"ElfExt"],[3,"KCounterDescriptor"],[3,"KCounterDescriptorArray"],[3,"KCounter"],[4,"CachePolicy"],[3,"VmoInfo"],[4,"SeekOrigin"],[3,"Stream"],[3,"VmarFlags"],[3,"VmAddressRegion"],[3,"VmMapping"],[3,"VmObject"],[3,"VmoInfoFlags"],[8,"VMObjectTrait"],[3,"BtiInfo"],[3,"PioPcieAddressProvider"],[3,"MappedEcamRegion"],[3,"ResourceInfo"],[3,"PciIrqSwizzleLut"],[3,"SocketInfo"],[3,"HandleBasicInfo"],[3,"PacketGuestVcpuInterrupt"],[3,"PacketGuestVcpuStartup"],[19,"Payload"],[19,"PacketGuestVcpuData"],[3,"ExceptionReport"],[3,"JobInfo"],[3,"TimerSlackPolicy"],[3,"ThreadInfo"],[3,"MMUFlags"],[3,"StreamInfo"],[3,"VmarInfo"],[3,"TaskStatsInfo"],[3,"KERNEL_ASPACE"],[6,"ZxResult"]]},\
"zircon_syscall":{"doc":"Zircon syscall implementations","i":[[3,"Syscall","zircon_syscall","",null,null],[12,"thread","","",0,null],[12,"thread_fn","","",0,null],[11,"sys_channel_read","","Read/Receive a message from a channel.  ",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_channel_write","","Write a message to a channel.  ",0,[[["userinptr",6],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_channel_create","","Create a new channel.   ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_channel_call_noretry","","",0,[[["userinptr",6],["handlevalue",6],["useroutptr",6],["deadline",3],["channelcallargs",3]]]],[11,"sys_channel_call_finish","","",0,[[["userinptr",6],["useroutptr",6],["deadline",3],["channelcallargs",3]],["zxresult",6]]],[11,"sys_channel_write_etc","","Write a message to a channel.  ",0,[[["userinptr",6],["handlevalue",6],["userinoutptr",6],["handledisposition",3]],["zxresult",6]]],[11,"sys_cprng_draw_once","","Draw random bytes from the kernel CPRNG.",0,[[["useroutptr",6]],["zxresult",6]]],[11,"sys_iommu_create","","Create a new object in the kernel representing an IOMMU…",0,[[["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_create","","Creates a new bus transaction initiator.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_pin","","Pin pages and grant devices access to them.  ",0,[[["useroutptr",6],["devvaddr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pmt_unpin","","Unpins pages that were previously pinned by…",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_release_quarantine","","Releases all quarantined PMTs for the given BTI.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pc_firmware_tables","","",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_create","","Creates an interrupt object which represents a physical or…",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_bind","","Binds or unbinds an interrupt object to a port.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_trigger","","Triggers a virtual interrupt object.  ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_ack","","Acknowledge an interrupt and re-arm it.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_destroy","","Destroys an interrupt object.  ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_wait","","A blocking syscall which causes the caller to wait until…",0,[[["useroutptr",6],["handlevalue",6]]]],[11,"sys_debug_write","","Write debug info to the serial port.  ",0,[[["userinptr",6]],["zxresult",6]]],[11,"sys_debug_read","","Read debug info from the serial port.  ",0,[[["useroutptr",6],["useroutptr",6],["handlevalue",6]]]],[11,"sys_debuglog_create","","Create a kernel managed debuglog reader or writer.    ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_debuglog_write","","Write log entry to debuglog.   ",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_debuglog_read","","Read log entries from debuglog.  ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_create_exception_channel","","Creates a channel which will receive exceptions from the…",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_exception_get_thread","","Create a handle for the exception\'s thread.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_exception_get_process","","Create a handle for the exception\'s process.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_create","","Creates a fifo, which is actually a pair of fifos of…",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_write","","Write data to a fifo.",0,[[["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_read","","Read data from a fifo.",0,[[["useroutptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_futex_wait","","Wait on a futex.",0,[[["handlevalue",6],["atomici32",3],["userinptr",6],["deadline",3]]]],[11,"sys_futex_requeue","","Wake some waiters and requeue other waiters.",0,[[["atomici32",3],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_futex_wake","","Wake some number of threads waiting on a futex.",0,[[["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_futex_wake_single_owner","","Wake some number of threads waiting on a futex, and move…",0,[[["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_handle_duplicate","","Creates a duplicate of handle.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_close","","Close a handle and reclaim the underlying object if no…",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_close_many","","Close a number of handles.  ",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_replace","","Creates a replacement for handle.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_guest_create","","Creates a guest virtual machine.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_guest_set_trap","","Set a trap within a guest.  ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_create","","Create a VCPU within a guest.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_resume","","Resume execution of a VCPU.  ",0,[[["portpacket",3],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_interrupt","","Raise an interrupt on a VCPU and may be called from any…",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_read_state","","Read the state of a VCPU.  ",0,[[["useroutptr",6],["vcpustate",3],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_write_state","","Write the state of a VCPU.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_get_property","","Ask for various properties of various kernel objects.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_set_property","","Set various properties of various kernel objects.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_one","","A blocking syscall waits for signals on an object.",0,[[["useroutptr",6],["signal",3],["handlevalue",6],["deadline",3]]]],[11,"sys_object_get_info","","Query information about an object.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_signal_peer","","Asserts and deasserts the userspace-accessible signal bits…",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_async","","A non-blocking syscall subscribes for signals on an object.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_signal","","Signal an object.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_many","","Wait for signals on multiple objects.",0,[[["userwaititem",3],["deadline",3],["userinoutptr",6]]]],[11,"sys_object_get_child","","Find the child of an object by its kid.",0,[[["koid",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_add_subtract_io_range","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_cfg_pio_rw","","",0,[[["userinoutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_init","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_map_interrupt","","",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_get_nth_device","","",0,[[["handlevalue",6],["pciedeviceinfo",3],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pci_get_bar","","",0,[[["useroutptr",6],["handlevalue",6],["useroutptr",6],["pcibar",3]],["zxresult",6]]],[11,"sys_pci_enable_bus_master","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_query_irq_mode","","",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_set_irq_mode","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_config_read","","",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_config_write","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_port_create","","Create an IO port.  ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_port_wait","","Wait for a packet arrival in a port.  ",0,[[["portpacket",3],["handlevalue",6],["deadline",3],["useroutptr",6]]]],[11,"sys_port_queue","","Queue a packet to a port.  ",0,[[["portpacket",3],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_resource_create","","Create a resource object for use with other DDK syscalls.  ",0,[[["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_timer_create","","Create a timer.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_event_create","","Create an event.  ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_eventpair_create","","Create an event pair.  ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_timer_set","","Start a timer.",0,[[["deadline",3],["handlevalue",6]],["zxresult",6]]],[11,"sys_timer_cancel","","Cancel a timer.  ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_create","","Create a socket.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_write","","Write data to a socket.",0,[[["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_read","","Read data from a socket.  ",0,[[["useroutptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_shutdown","","Prevent future reading or writing on a socket.   ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_create","","Create a stream from a VMO.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_writev","","Write data to a stream at the current seek offset.   ",0,[[["handlevalue",6],["userinptr",6],["iovecin",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_stream_writev_at","","Write data to a stream at the given offset.   ",0,[[["handlevalue",6],["userinptr",6],["iovecin",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_stream_readv","","Read data from a stream at the current seek offset.   ",0,[[["iovecout",6],["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_stream_readv_at","","Read data from a stream at the given offset.   ",0,[[["iovecout",6],["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_stream_seek","","Modify the seek offset.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_system_get_event","","Retrieve a handle to a system event.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_create","","Create a new process.",0,[[["userinptr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_process_exit","","Exits the currently running process.",0,[[],["zxresult",6]]],[11,"sys_thread_create","","Creates a thread within the specified process.",0,[[["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_start","","Start execution on a process.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_read_state","","Read one aspect of thread state.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_write_state","","Write one aspect of thread state.",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_job_set_critical","","Sets process as critical to job.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_start","","Start execution on a thread.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_exit","","Terminate the current running thread.",0,[[],["zxresult",6]]],[11,"sys_task_suspend_token","","Suspend the given task.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_task_kill","","Kill the provided task (job, process, or thread).",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_job_create","","Create a new child job object given a parent job.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_job_set_policy","","Sets one or more security and/or resource policies to an…",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_process_read_memory","","Read from the given process\'s address space.",0,[[["useroutptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_write_memory","","Write into the given process\'s address space.",0,[[["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_create","","Create a new clock object.  ",0,[[["handlevalue",6],["useroutptr",6],["userinptr",6]],["zxresult",6]]],[11,"sys_clock_get","","Acquire the current time.",0,[[["useroutptr",6]],["zxresult",6]]],[11,"sys_clock_read","","Perform a basic read of the clock.  ",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_adjust","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_update","","Make adjustments to a clock object.",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_nanosleep","","Sleep for some number of nanoseconds.",0,[[["deadline",3]]]],[11,"sys_vmar_allocate","","Allocate a new subregion.",0,[[["useroutptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_map","","Add a memory mapping.",0,[[["useroutptr",6],["virtaddr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_destroy","","Destroy a virtual memory address region.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_protect","","Set protection of virtual memory pages.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_unmap","","Unmap virtual memory pages.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create","","Create a new virtual memory object(VMO).",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_read","","Read bytes from a VMO.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_write","","Write bytes to a VMO.",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_replace_as_executable","","Add execute rights to a VMO.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_get_size","","Obtain the current size of a VMO object.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create_child","","Create a child of an existing VMO (new virtual memory…",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create_physical","","Create a VM object referring to a specific contiguous…",0,[[["physaddr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create_contiguous","","Create a VM object referring to a specific contiguous…",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_set_size","","Resize a VMO object.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_op_range","","Perform an operation on a range of a VMO.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_cache_policy","","Set the caching policy for pages held by a VMO.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"syscall","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[3,"Syscall"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);