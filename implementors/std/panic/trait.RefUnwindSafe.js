(function() {var implementors = {};
implementors["kernel_hal"] = [{"text":"impl RefUnwindSafe for VectorRegs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for U128","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterruptManager","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SleepFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerialFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MMUFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CachePolicy","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for UserPtr&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for IoVec&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for IoVecs&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Out","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InOut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VdsoConstants","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VersionString","synthetic":true,"types":[]}];
implementors["kernel_hal_unix"] = [{"text":"impl RefUnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PageTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PhysFrame","synthetic":true,"types":[]}];
implementors["linux_object"] = [{"text":"impl RefUnwindSafe for LxError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MemBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FcntlFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileFlags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for File","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenOptions","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PipeData","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pipe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pseudo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomINodeData","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RandomINode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for STDIN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for STDOUT","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Stdin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stdout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileDesc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeekFrom","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PipeEnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemidDs","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SemArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShmidDs","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShmIdentifier","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShmGuard","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SemProc","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShmProc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpcPerm","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LinuxElfLoader","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LinuxProcess","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RLimit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sigset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalActionFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MachineContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalUserContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalStackFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalStack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SiginfoFields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignalCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventBus","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SemaphoreGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinuxThread","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeVal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RUsage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tms","synthetic":true,"types":[]}];
implementors["linux_syscall"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for Syscall&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["zircon_loader"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Images&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["zircon_object"] = [{"text":"impl RefUnwindSafe for ZxError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DebugLog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Severity","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BusTransactionInitiator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BtiInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Interrupt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterruptFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterruptOptions","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Iommu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IommuPerms","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MmioPcieAddressProvider","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PCIeBusDriver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PcieDeviceInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PcieDeviceKObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PioPcieAddressProvider","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PciEcamRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MappedEcamRegion","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PinnedMemoryToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceFlags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Resource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PcieIrqMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PciAddrSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PciIrqSwizzleLut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PciInitArgsIrqs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PciInitArgsHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PciInitArgsAddrWindows","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Guest","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Vcpu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmmPageTable","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Channel","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MessagePacket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fifo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SocketInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandleBasicInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HandleInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rights","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for KObjectBase","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DummyObject","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventPair","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Futex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PortPacket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketSignal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestBell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestMem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestIo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestVcpuInterrupt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestVcpuStartup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestVcpu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketInterrupt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PortPacketRepr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Port","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PortOptions","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Timer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestVcpuData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PacketGuestVcpuType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PayloadRepr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Slack","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Exceptionate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExceptionReport","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExceptionObject","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Job","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JobInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JobPolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BasicPolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimerSlackPolicy","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Process","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProcessInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SuspendToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadFlag","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CurrentThread","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExceptionType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetPolicyOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolicyCondition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolicyAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadStateKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KCounter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KCounterDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KCounterDescriptorArray","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Stream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmarFlags","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VmAddressRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmarInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VmMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TaskStatsInfo","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VmObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmoInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VmoInfoFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KERNEL_ASPACE","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeekOrigin","synthetic":true,"types":[]}];
implementors["zircon_syscall"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for Syscall&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()