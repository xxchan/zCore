(function() {var implementors = {};
implementors["kernel_hal"] = [{"text":"impl UnwindSafe for VectorRegs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for U128","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterruptManager","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SleepFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerialFuture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MMUFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CachePolicy","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; UnwindSafe for UserPtr&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for IoVec&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; UnwindSafe for IoVecs&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for In","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Out","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InOut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VdsoConstants","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VersionString","synthetic":true,"types":[]}];
implementors["kernel_hal_unix"] = [{"text":"impl UnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PhysFrame","synthetic":true,"types":[]}];
implementors["linux_object"] = [{"text":"impl UnwindSafe for LxError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MemBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FcntlFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileFlags","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for File","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenOptions","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PipeData","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Pipe","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pseudo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RandomINodeData","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RandomINode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for STDIN","synthetic":true,"types":[]},{"text":"impl UnwindSafe for STDOUT","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Stdin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stdout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileDesc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeekFrom","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PipeEnd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SemidDs","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SemArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShmidDs","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShmIdentifier","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShmGuard","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SemProc","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ShmProc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpcPerm","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LinuxElfLoader","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LinuxProcess","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sigset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SigInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalActionFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MachineContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalUserContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalStackFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalStack","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SiginfoFields","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignalCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EventBus","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Semaphore","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SemaphoreGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinuxThread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeVal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RUsage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tms","synthetic":true,"types":[]}];
implementors["linux_syscall"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for Syscall&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["zircon_loader"] = [{"text":"impl&lt;T&gt; UnwindSafe for Images&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["zircon_object"] = [{"text":"impl UnwindSafe for ZxError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DebugLog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Severity","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BusTransactionInitiator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BtiInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Interrupt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterruptFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterruptOptions","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Iommu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IommuPerms","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MmioPcieAddressProvider","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PCIeBusDriver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PcieDeviceInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PcieDeviceKObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PioPcieAddressProvider","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PciEcamRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MappedEcamRegion","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PinnedMemoryToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceFlags","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Resource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PcieIrqMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PciAddrSpace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ResourceKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PciIrqSwizzleLut","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PciInitArgsIrqs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PciInitArgsHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PciInitArgsAddrWindows","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Guest","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Vcpu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VmmPageTable","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Channel","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for MessagePacket","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Fifo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Socket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SocketInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandleBasicInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HandleInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Rights","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signal","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for KObjectBase","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DummyObject","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EventPair","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Futex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PortPacket","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketSignal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestBell","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestMem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestIo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestVcpuInterrupt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestVcpuStartup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestVcpu","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketInterrupt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PortPacketRepr","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Port","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PortOptions","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Timer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Payload","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestVcpuData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PacketGuestVcpuType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PayloadRepr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Slack","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Exceptionate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExceptionReport","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExceptionObject","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Job","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JobInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JobPolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BasicPolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimerSlackPolicy","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Process","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProcessInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SuspendToken","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadFlag","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CurrentThread","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExceptionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SetPolicyOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolicyCondition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PolicyAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadStateKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KCounter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KCounterDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KCounterDescriptorArray","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Stream","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VmarFlags","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VmAddressRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VmarInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VmMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TaskStatsInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VmObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VmoInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VmoInfoFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KERNEL_ASPACE","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SeekOrigin","synthetic":true,"types":[]}];
implementors["zircon_syscall"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for Syscall&lt;'a&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()