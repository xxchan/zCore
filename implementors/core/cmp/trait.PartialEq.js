(function() {var implementors = {};
implementors["kernel_hal"] = [{"text":"impl PartialEq&lt;MMUFlags&gt; for MMUFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;CachePolicy&gt; for CachePolicy","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Error&gt; for Error","synthetic":false,"types":[]}];
implementors["linux_object"] = [{"text":"impl PartialEq&lt;FcntlFlags&gt; for FcntlFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;FileFlags&gt; for FileFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PipeEnd&gt; for PipeEnd","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;FileDesc&gt; for FileDesc","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;SignalActionFlags&gt; for SignalActionFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Signal&gt; for Signal","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;SignalStackFlags&gt; for SignalStackFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Event&gt; for Event","synthetic":false,"types":[]}];
implementors["zircon_object"] = [{"text":"impl PartialEq&lt;InterruptFlags&gt; for InterruptFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;InterruptOptions&gt; for InterruptOptions","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;IommuPerms&gt; for IommuPerms","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PcieIrqMode&gt; for PcieIrqMode","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PciAddrSpace&gt; for PciAddrSpace","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ResourceKind&gt; for ResourceKind","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ResourceFlags&gt; for ResourceFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ZxError&gt; for ZxError","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;SocketFlags&gt; for SocketFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;SocketInfo&gt; for SocketInfo","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Rights&gt; for Rights","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Signal&gt; for Signal","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketType&gt; for PacketType","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketSignal&gt; for PacketSignal","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestBell&gt; for PacketGuestBell","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestMem&gt; for PacketGuestMem","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestIo&gt; for PacketGuestIo","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestVcpuType&gt; for PacketGuestVcpuType","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestVcpuInterrupt&gt; for PacketGuestVcpuInterrupt","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestVcpuStartup&gt; for PacketGuestVcpuStartup","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketInterrupt&gt; for PacketInterrupt","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PortPacketRepr&gt; for PortPacketRepr","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PayloadRepr&gt; for PayloadRepr","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PacketGuestVcpu&gt; for PacketGuestVcpu","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PortOptions&gt; for PortOptions","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ExceptionType&gt; for ExceptionType","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PolicyAction&gt; for PolicyAction","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Status&gt; for Status","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ThreadFlag&gt; for ThreadFlag","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ThreadState&gt; for ThreadState","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;VmarFlags&gt; for VmarFlags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;VmoInfoFlags&gt; for VmoInfoFlags","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()