(function() {var implementors = {};
implementors["kernel_hal"] = [{"text":"impl Clone for MMUFlags","synthetic":false,"types":[]},{"text":"impl Clone for CachePolicy","synthetic":false,"types":[]},{"text":"impl Clone for VectorRegs","synthetic":false,"types":[]},{"text":"impl Clone for U128","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["linux_object"] = [{"text":"impl Clone for FcntlFlags","synthetic":false,"types":[]},{"text":"impl Clone for FileFlags","synthetic":false,"types":[]},{"text":"impl Clone for PipeEnd","synthetic":false,"types":[]},{"text":"impl Clone for Pipe","synthetic":false,"types":[]},{"text":"impl Clone for RandomINode","synthetic":false,"types":[]},{"text":"impl Clone for FileDesc","synthetic":false,"types":[]},{"text":"impl Clone for SemidDs","synthetic":false,"types":[]},{"text":"impl Clone for ShmidDs","synthetic":false,"types":[]},{"text":"impl Clone for ShmIdentifier","synthetic":false,"types":[]},{"text":"impl Clone for ShmProc","synthetic":false,"types":[]},{"text":"impl Clone for IpcPerm","synthetic":false,"types":[]},{"text":"impl Clone for SemProc","synthetic":false,"types":[]},{"text":"impl Clone for RLimit","synthetic":false,"types":[]},{"text":"impl Clone for Sigset","synthetic":false,"types":[]},{"text":"impl Clone for SignalAction","synthetic":false,"types":[]},{"text":"impl Clone for SiginfoFields","synthetic":false,"types":[]},{"text":"impl Clone for SigInfo","synthetic":false,"types":[]},{"text":"impl Clone for SignalCode","synthetic":false,"types":[]},{"text":"impl Clone for SignalActionFlags","synthetic":false,"types":[]},{"text":"impl Clone for MachineContext","synthetic":false,"types":[]},{"text":"impl Clone for Signal","synthetic":false,"types":[]},{"text":"impl Clone for SignalUserContext","synthetic":false,"types":[]},{"text":"impl Clone for SignalFrame","synthetic":false,"types":[]},{"text":"impl Clone for SignalStackFlags","synthetic":false,"types":[]},{"text":"impl Clone for SignalStack","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for TimeSpec","synthetic":false,"types":[]},{"text":"impl Clone for TimeVal","synthetic":false,"types":[]},{"text":"impl Clone for Tms","synthetic":false,"types":[]}];
implementors["zircon_object"] = [{"text":"impl Clone for InterruptFlags","synthetic":false,"types":[]},{"text":"impl Clone for InterruptOptions","synthetic":false,"types":[]},{"text":"impl Clone for IommuPerms","synthetic":false,"types":[]},{"text":"impl Clone for PcieDeviceInfo","synthetic":false,"types":[]},{"text":"impl Clone for PcieIrqMode","synthetic":false,"types":[]},{"text":"impl Clone for PciIrqSwizzleLut","synthetic":false,"types":[]},{"text":"impl Clone for ResourceKind","synthetic":false,"types":[]},{"text":"impl Clone for ResourceFlags","synthetic":false,"types":[]},{"text":"impl Clone for ZxError","synthetic":false,"types":[]},{"text":"impl Clone for SocketFlags","synthetic":false,"types":[]},{"text":"impl Clone for Handle","synthetic":false,"types":[]},{"text":"impl Clone for Rights","synthetic":false,"types":[]},{"text":"impl Clone for Signal","synthetic":false,"types":[]},{"text":"impl Clone for PacketType","synthetic":false,"types":[]},{"text":"impl Clone for PacketSignal","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestBell","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestMem","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestIo","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestVcpuType","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestVcpuData","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestVcpuInterrupt","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestVcpuStartup","synthetic":false,"types":[]},{"text":"impl Clone for PacketGuestVcpu","synthetic":false,"types":[]},{"text":"impl Clone for PacketInterrupt","synthetic":false,"types":[]},{"text":"impl Clone for PortPacketRepr","synthetic":false,"types":[]},{"text":"impl Clone for PayloadRepr","synthetic":false,"types":[]},{"text":"impl Clone for PortOptions","synthetic":false,"types":[]},{"text":"impl Clone for Slack","synthetic":false,"types":[]},{"text":"impl Clone for ExceptionReport","synthetic":false,"types":[]},{"text":"impl Clone for ExceptionType","synthetic":false,"types":[]},{"text":"impl Clone for JobPolicy","synthetic":false,"types":[]},{"text":"impl Clone for SetPolicyOptions","synthetic":false,"types":[]},{"text":"impl Clone for BasicPolicy","synthetic":false,"types":[]},{"text":"impl Clone for PolicyCondition","synthetic":false,"types":[]},{"text":"impl Clone for PolicyAction","synthetic":false,"types":[]},{"text":"impl Clone for TimerSlackPolicy","synthetic":false,"types":[]},{"text":"impl Clone for Status","synthetic":false,"types":[]},{"text":"impl Clone for ThreadStateKind","synthetic":false,"types":[]},{"text":"impl Clone for ThreadFlag","synthetic":false,"types":[]},{"text":"impl Clone for ThreadState","synthetic":false,"types":[]},{"text":"impl Clone for VmarFlags","synthetic":false,"types":[]},{"text":"impl Clone for VmoInfoFlags","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()