(function() {var implementors = {};
implementors["kernel_hal"] = [{"text":"impl&lt;P:&nbsp;<a class=\"trait\" href=\"kernel_hal/user/trait.Policy.html\" title=\"trait kernel_hal::user::Policy\">Policy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"kernel_hal/user/struct.IoVecs.html\" title=\"struct kernel_hal::user::IoVecs\">IoVecs</a>&lt;P&gt;","synthetic":false,"types":["kernel_hal::user::IoVecs"]}];
implementors["linux_object"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"linux_object/fs/struct.STDIN.html\" title=\"struct linux_object::fs::STDIN\">STDIN</a>","synthetic":false,"types":["linux_object::fs::stdio::STDIN"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"linux_object/fs/struct.STDOUT.html\" title=\"struct linux_object::fs::STDOUT\">STDOUT</a>","synthetic":false,"types":["linux_object::fs::stdio::STDOUT"]}];
implementors["zircon_object"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"zircon_object/vm/struct.VmObject.html\" title=\"struct zircon_object::vm::VmObject\">VmObject</a>","synthetic":false,"types":["zircon_object::vm::vmo::VmObject"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"zircon_object/vm/struct.KERNEL_ASPACE.html\" title=\"struct zircon_object::vm::KERNEL_ASPACE\">KERNEL_ASPACE</a>","synthetic":false,"types":["zircon_object::vm::KERNEL_ASPACE"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()